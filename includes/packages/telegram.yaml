telegram: 

    # telegram_bot:
    #     - platform: polling
    #     #   parse_mode: html
    #       api_key: !secret telegramm_bot_token
    #       allowed_chat_ids:
    #         - !secret telegram_user_1
    #     #   - ID пользователя 2   

    notify:
        - name: alexus
          platform: telegram
          chat_id: !secret telegram_user_1

    script:

        telegram_test:
          alias: "Telegram: Test Message"
          sequence:
            - service: notify.alexus
              data:
                title: 'title'
                message: 'message'
                # data:
                #   photo: 
                #     - file: '/config/files/camera/Tapo Camera - HD/snapshot_20220817-150840.jpg'
                #       caption: 'photo'
                #   video:
                #     - file: '/config/files/camera/Tapo Camera - HD/record_20220816-205155.mp4'
                #       caption: 'video'
                #   location:
                #     latitude: 32.87336
                #     longitude: 117.22743
          mode: single

    automation:

        - alias: "Telegram: Start Menu"
          id: telegram_menu_start
          trigger:
             -  platform: event
                event_type: telegram_command
                event_data:
                  command: '/start'
          action:
          - service: notify.alexus
            data:
              message: |
                Ласкаво просимо до управління Розумним Будинком!
                ➖➖➖➖➖➖➖
                Оберіть розділ:
              data:
                inline_keyboard: &main_menu
                  - "{{'\U00002139'}} Статус:/status, {{'\U00002328'}} Телеметрія:/telemetry"
                  - "{{'\U0001F6E1'}} Безпека:/security, {{'\U0001F321'}} Клімат:/climate" 
                  - "{{'\U000026A1'}} Електрика:/electricity, {{'\U0001F4A1'}} Освітлення:/lights"
                  - "{{'\U0001F5FA'}} Геолокація:/geo, {{'\U0001F4D1'}} Меню:/menu"
          mode: single

        - alias: "Telegram: Main Menu"
          id: telegram_menu_main
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              command: '/menu'
          action:
          - service: notify.alexus
            data:
              message: |
                  {{'\U0001F4D1'}} Головне меню
                  ➖➖➖➖➖➖➖
                  Оберіть розділ:
              data: 
                inline_keyboard: *main_menu
          mode: single

        - alias: "Telegram: Electricity Menu"
          id: telegram_menu_electricity
          initial_state: true
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              data: '/electricity'
          action:
          - service: telegram_bot.delete_message
            data:
                message_id: 'last'
                chat_id: !secret telegram_user_1
          - service: notify.alexus
            data:
              message: &electricity_body |
                {{'\U000026A1'}} Електрика 
                ➖➖➖➖➖➖➖
                {{"\U0001F4C5"}} {{ states("sensor.date") }} {{"\U0001F551"}} {{ states("sensor.time") }}

                {{"\U0001F4DD"}} Поточні показники: 
                 - Потужність: {{ states("sensor.tuya_clamp_meter_power") | float(0) | round(2) }} W
                 - Напруга: {{ states("sensor.tuya_clamp_meter_voltage")  | float(0) | round(2) }} V
                 - Струм: {{ states("sensor.tuya_clamp_meter_current")    | float(0) | round(2) }} A
                {% set tarrif =  states.sensor.tariff_energy_cost.state | float (0) %}
                {% if is_state('sensor.energy_active_tariff','night') %}
                {% set tarrif = tarrif * 2 %}
                {% endif -%}
                {{"\U00002139"}} Тариф, kWh (д/н): {{ tarrif | round(2) }}/{{ tarrif * 0.5 | round(2) }} ₴
            # {{"\U00002139"}} Тариф, kWh (д/н): {{ states('sensor.tariff_energy_cost') | float(0) | round(2) }}/{{ states('sensor.tariff_energy_cost') | float(0) * 0.5 | round(2) }} ₴
              data: 
                inline_keyboard: &keyb_electricity
                  - "{{'\U0001F5D3'}} Статистика: місяць:/electricity_month"
                  - "{{'\U0001F4CA'}} Статистика: тиждень:/electricity_week"
                  - "{{'\U0001F4C8'}} Статистика: доба:/electricity_day"
                  - "{{'\U0001F4DF'}} Лічильник:/electricity_counter, {{'\U0001F4D1'}} Меню:/menu"
          mode: single

        - alias: "Telegram: Electricity Menu - counter"
          id: telegram_menu_electricity_counter
          initial_state: true
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              data: '/electricity_counter'
          action:
              - service: telegram_bot.delete_message
                data_template:
                  message_id: last
                  chat_id: !secret telegram_user_1
              - service: notify.alexus
                data:
                  title: *electricity_body
                  message: |
                    ➖➖➖➖➖➖➖
                    {{"\U0001F4DF"}} Показники лічильника:
                     - {{"\U0001F4CB"}} Загалом: {{ states("sensor.energy_counter_total")    | float(0) | round(0) }} kWh
                     - {{"\U00002600"}} День:  {{ states("sensor.energy_counter_total_day")  | float(0) | round(0) }} kWh
                     - {{"\U0001F312"}} Ніч:  {{ states("sensor.energy_counter_total_night") | float(0) | round(0) }} kWh
                  data: 
                    inline_keyboard: *keyb_electricity
          mode: single

        - alias: "Telegram: Electricity Menu - month"
          id: telegram_menu_electricity_month
          initial_state: true
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              data: '/electricity_month'
          action:
              - service: telegram_bot.delete_message
                data_template:
                  message_id: last
                  chat_id: !secret telegram_user_1
              - service: notify.alexus
                data:
                  title: *electricity_body
                  message: |
                    ➖➖➖➖➖➖➖
                    {{'\U0001F5D3'}} Статистика: поточний місяць
                    {% set tarrif =  states.sensor.tariff_energy_cost.state | float (0) %}
                    {% if is_state('sensor.energy_active_tariff','night') %}
                    {% set tarrif = tarrif * 2 %}
                    {% endif -%}
                     - {{"\U0001F4CB"}} Загалом: {{ states("sensor.tuya_clamp_meter_monthly_total") | float(0) | round(0) }} kWh, {{"\U0001F4B8"}} {{ ((states("sensor.tuya_clamp_meter_monthly_day") | float(0) | round(0) * tarrif | round(2)) +  (states("sensor.tuya_clamp_meter_monthly_night") | float(0) | round(0) * tarrif * 0.5 | round(2))) | round(2) }} ₴
                     - {{"\U00002600"}} День: {{ states("sensor.tuya_clamp_meter_monthly_day")    | float(0) | round(0) }} kWh, {{"\U0001F4B8"}} {{ (states("sensor.tuya_clamp_meter_monthly_day") | float(0) | round(0) * tarrif | round(2)) | round(2) }} ₴
                     - {{"\U0001F312"}} Ніч: {{ states("sensor.tuya_clamp_meter_monthly_night")  | float(0) | round(0) }} kWh, {{"\U0001F4B8"}} {{ (states("sensor.tuya_clamp_meter_monthly_night") | float(0) | round(0) * tarrif * 0.5 | round(2)) | round(2) }} ₴
                  data: 
                    inline_keyboard: *keyb_electricity
          mode: single

        - alias: "Telegram: Electricity Menu - week"
          id: telegram_menu_electricity_week
          initial_state: true
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              data: '/electricity_week'
          action:
              - service: telegram_bot.delete_message
                data_template:
                  message_id: last
                  chat_id: !secret telegram_user_1
              - service: notify.alexus
                data:
                  title: *electricity_body
                  message: |
                    ➖➖➖➖➖➖➖
                    {{"\U0001F4CA"}} Статистика: поточний тиждень
                    {% set tarrif =  states.sensor.tariff_energy_cost.state | float (0) %}
                    {% if is_state('sensor.energy_active_tariff','night') %}
                    {% set tarrif = tarrif * 2 %}
                    {% endif -%}
                     - {{"\U0001F4CB"}} Загалом: {{ states("sensor.tuya_clamp_meter_weekly_total") | float(0) | round(0) }} kWh, {{"\U0001F4B8"}} {{ ((states("sensor.tuya_clamp_meter_weekly_day") | float(0) | round(0) * tarrif | round(2)) +  (states("sensor.tuya_clamp_meter_week_night") | float(0) | round(0) * tarrif * 0.5 | round(2))) | round(2) }} ₴
                     - {{"\U00002600"}} День:  {{ states("sensor.tuya_clamp_meter_weekly_day")   | float(0) | round(0) }} kWh, {{"\U0001F4B8"}} {{ (states("sensor.tuya_clamp_meter_weekly_day") | float(0) | round(0) * tarrif | round(2)) | round(2) }} ₴
                     - {{"\U0001F312"}} Ніч:  {{ states("sensor.tuya_clamp_meter_weekly_night") | float(0) | round(0) }} kWh, {{"\U0001F4B8"}} {{ (states("sensor.tuya_clamp_meter_weekly_night") | float(0) | round(0) * tarrif * 0.5 | round(2)) | round(2) }} ₴
                  data: 
                    inline_keyboard: *keyb_electricity
          mode: single

        - alias: "Telegram: Electricity Menu - day"
          id: telegram_menu_electricity_day
          initial_state: true
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              data: '/electricity_day'
          action:
              - service: telegram_bot.delete_message
                data_template:
                  message_id: last
                  chat_id: !secret telegram_user_1
              - service: notify.alexus
                data:
                  title: *electricity_body
                  message: |
                    ➖➖➖➖➖➖➖
                    {{"\U0001F4C8"}} Статистика: поточна доба
                    {% set tarrif =  states.sensor.tariff_energy_cost.state | float (0) %}
                    {% if is_state('sensor.energy_active_tariff','night') %}
                    {% set tarrif = tarrif * 2 %}
                    {% endif -%}
                     - {{"\U0001F4CB"}} Загалом: {{ states("sensor.tuya_clamp_meter_daily_total") | float(0) | round(0) }} kWh, {{"\U0001F4B8"}} {{ ((states("sensor.tuya_clamp_meter_daily_day") | float(0) | round(0) * tarrif | round(2)) +  (states("sensor.tuya_clamp_meter_daily_night") | float(0) | round(0) * tarrif * 0.5 | round(2))) | round(2) }} ₴
                     - {{"\U00002600"}} День:  {{ states("sensor.tuya_clamp_meter_daily_day")   | float(0) | round(0) }} kWh, {{"\U0001F4B8"}} {{ (states("sensor.tuya_clamp_meter_daily_day") | float(0) | round(0) * tarrif | round(2)) | round(2) }} ₴
                     - {{"\U0001F312"}} Ніч:  {{ states("sensor.tuya_clamp_meter_daily_night") | float(0) | round(0) }} kWh, {{"\U0001F4B8"}} {{ (states("sensor.tuya_clamp_meter_daily_night") | float(0) | round(0) * tarrif * 0.5 | round(2)) | round(2) }} ₴
                  data: 
                    inline_keyboard: *keyb_electricity
          mode: single


        - alias: "Telegram: System Status Menu"
          id: telegram_menu_status
          initial_state: true
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              data: '/status'
          action:
          - service: telegram_bot.delete_message
            data_template:
              message_id: last
              chat_id: !secret telegram_user_1
          - service: notify.alexus
            data:
              message: &system_status_body |
                {{'\U00002139'}} {{ states("sensor.date") }} {{"\U0001F551"}} {{ states("sensor.time") }} {{"\U0001F1FA\U0001F1E6"}}
                ➖➖➖➖➖➖➖
                {{"\U0001F4BB"}} RPi Power status: {% if is_state("binary_sensor.rpi_ups_power_status",'on') %}{{"\U0001F50C"}}{% else%}{{"\U0001F50B"}}{% endif %}
                {{"\U0001F4C6"}} RPi Last Boot: {{ states("sensor.last_boot_custom") }} ago
                {{"\U0001F199"}} HA Uptime: {{ states("sensor.online_custom") }}
                {{"\U0001F4C5"}} Last BackUp: {{ states("sensor.last_google_backup_train") }}

                {% if is_state("binary_sensor.rpi_ups_battery_low","off") %}{{"\U0001F50B"}} UPS Battery: (OK){%else%}{{"\U0001FAAB"}} UPS Battery Status: (Low){{"\U0000203C"}}{%endif%} {{ states("sensor.rpi_ups_battery_capacity") }}% / {{ states("sensor.rpi_ups_battery_voltage") }}V

                CPU: {{"\U0001F321"}} {{ states("sensor.processor_temperature") }}{{"\U00002103"}}, {{"\U0001F4C8"}}: {{ states("sensor.processor_use") }}{{"\U00000025"}}
                RAM: {{ states("sensor.memory_use_percent") }}{{"\U00000025"}} Usage / {{ states("sensor.memory_free") }} Mb Free
                SSD: {{ states("sensor.disk_use_percent") }}{{"\U00000025"}} Usage / {{ states("sensor.disk_free") }} Gb Free

                UPS Fan: {% if is_state("binary_sensor.rpi_ups_fan_status",'on') %}High{% else %}Low{% endif %}
                Chassis Fan: {{ states("sensor.rpi_chassis_fan_speed") }}% speed

                External IP: {{ states("sensor.archer_c80_router_external_ip") }}
            # Ping: {{ states("sensor.speedtest_ping") }} ms
            # Download/Upload: {{ states("sensor.speedtest_download") | int(0) }}/{{ states("sensor.speedtest_upload") | int(0) }} Mbit/s
            # Курс 1$ = {{ states("sensor.exchange_rate_usd") }} ₴
              data: 
                inline_keyboard: *main_menu
          mode: single

        - alias: "Telegram: Climate Menu"
          id: telegram_menu_climate
          initial_state: true
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              data: '/climate'
          action:
          - service: telegram_bot.delete_message
            data:
                message_id: 'last'
                chat_id: !secret telegram_user_1
          - service: notify.alexus
            data:
              message: &climate_body |
                {{'\U0001F321'}} Показники клімату у квартирі:
                ➖➖➖➖➖➖➖
                {{"\U0001F6CB"}} Вітальня {{"\U0001F321"}}: {% if is_state("sensor.living_room_lumi_weather_temperature",'unavailable') %}{{"\U000026A0"}}Недоступний{% else %}{{ states("sensor.living_room_lumi_weather_temperature") | float(0) | round(1) }}{{"\U00002103"}}   {{"\U0001F4A6"}}: {{ states("sensor.living_room_lumi_weather_humidity") | float(0) | round(1) }} %{% endif %}
                {% if is_state('input_boolean.heating_status','on') %}Опалення: {% if state_attr('climate.living_room_heater', 'hvac_action') == "off" %}{{"\U0001F4F4"}}{%endif%}
                - {{"\U0001F525"}}: {{ states("switch.living_room_socket_heating") }}, >{{"\U0001F321"}}: {{ state_attr('climate.living_room_heater', 'temperature') }}{{"\U00002103"}}
                - {{"\U0001F50C"}}: ({{ states("sensor.living_room_socket_heating_voltage") }} V | {{ states("sensor.living_room_socket_heating_current") | float(0) | round(1) }} A | {{ states("sensor.living_room_socket_heating_power") }} W | {{ states("sensor.living_room_socket_heating_meter_monthly") | float(0) | round(1) }} kWh)
                {% elif is_state('input_boolean.ac_status','on') %}Кондиціонер: {% if is_state('climate.living_room_ac', 'off') %}{{"\U0001F4F4"}}{% elif is_state('climate.living_room_ac', 'cool') %}{{"\U00002744"}}{% elif is_state('climate.living_room_ac', 'heat') %}{{"\U00002600"}}{% elif is_state('climate.living_room_ac', 'dry') %}{{"\U0001F4A7"}}{% else %}{{"\U0001F504"}}{%endif%}
                - {{"\U0001F321"}}: {{ state_attr('climate.living_room_ac','temperature') }}{{"\U00002103"}} | {{"\U0001F32C"}}: {{ state_attr('climate.living_room_ac','fan_mode') }}
                - {{"\U0001F50C"}}: ({{ states("sensor.living_room_air_conditioner_socket_voltage") }} V | {{ states("sensor.living_room_air_conditioner_socket_current") | float(0) | round(1) }} A | {{ states("sensor.living_room_air_conditioner_socket_power") }} W | {{ states("sensor.living_room_air_conditioner_socket_meter_monthly") | float(0) | round(1) }} kWh)
                {% endif %}
                {%- if not is_state('fan.lr_levoit_air_purifier_300s', 'unavailable') %}
                Очищувач повітря{% if is_state('binary_sensor.living_room_air_purifier_status', 'on') %}{{"\U0001F32C"}}: {% if state_attr('fan.lr_levoit_air_purifier_300s','preset_mode') == 'auto' %}Авто{% elif state_attr('fan.lr_levoit_air_purifier_300s','preset_mode') == 'sleep' %}{{"\U0001F4A4"}}{% else %}{{ states.number.lr_levoit_air_purifier_300s_fan_speed_level.state }}{% endif %}{% else %}: {{"\U0001F4F4"}}{% endif %}
                - Термін служби фільтра: {{ states.sensor.lr_levoit_air_purifier_300s_filter_life.state }}%
                - Якість повітря PM2.5: {{ states.sensor.lr_levoit_air_purifier_300s_air_quality_value.state }} µg/m³
                {% else %}
                Очищувач повітря недоступний
                {% endif %}
                {{"\U0001F6CC"}} Спальня {{"\U0001F321"}}: {% if is_state("sensor.bedroom_lumi_weather_temperature",'unavailable') %}{{"\U000026A0"}}Недоступний{% else %}{{ states("sensor.bedroom_lumi_weather_temperature") | float(0) | round(1) }}{{"\U00002103"}}   {{"\U0001F4A6"}}: {{ states("sensor.bedroom_lumi_weather_humidity") | float(0) | round(1) }} %{% endif %}
                {% if is_state('input_boolean.heating_status','on') %}Опалення: {% if state_attr('climate.bedroom_heater', 'hvac_action') == "off" %}{{"\U0001F4F4"}}{%endif%}
                - {{"\U0001F525"}}: {{ states("switch.bedroom_socket_heating") }}, >{{"\U0001F321"}}: {{ state_attr('climate.bedroom_heater', 'temperature') }}{{"\U00002103"}}
                - {{"\U0001F50C"}}: ({{ states("sensor.bedroom_socket_heating_voltage") }} V | {{ states("sensor.bedroom_socket_heating_current") | float(0) | round(1) }} A | {{ states("sensor.bedroom_socket_heating_power") }} W | {{ states("sensor.bedroom_socket_heating_meter_monthly") | float(0) | round(1) }} kWh)
                {% elif is_state('input_boolean.ac_status','on') %}Кондиціонер: {% if is_state('climate.bedroom_ac', 'off') %}{{"\U0001F4F4"}}{% elif is_state('climate.bedroom_ac', 'cool') %}{{"\U00002744"}}{% elif is_state('climate.bedroom_ac', 'heat') %}{{"\U00002600"}}{% elif is_state('climate.bedroom_ac', 'dry') %}{{"\U0001F4A7"}}{% elif is_state('climate.bedroom_ac', 'fan_only') %}{{"\U0001F32C"}}{% else %}{{"\U0001F504"}}{%endif%}
                - {{"\U0001F321"}}: {{ state_attr('climate.bedroom_ac','temperature') }}{{"\U00002103"}} | {{"\U0001F32C"}}: {{ state_attr('climate.bedroom_ac','fan_mode') }}
                - {{"\U0001F50C"}}: ({{ states("sensor.bedroom_air_conditioner_socket_voltage") }} V | {{ states("sensor.bedroom_air_conditioner_socket_current") | float(0) | round(1) }} A | {{ states("sensor.bedroom_air_conditioner_socket_power") }} W | {{ states("sensor.bedroom_air_conditioner_socket_meter_monthly") | float(0) | round(1) }} kWh)
                {% endif %}
                {{"\U0001F37D"}} Кухня {{"\U0001F321"}}: {% if is_state("sensor.kitchen_lumi_weather_temperature",'unavailable') %}{{"\U000026A0"}}Недоступний{% else %}{{ states("sensor.kitchen_lumi_weather_temperature") | float(0) | round(1) }}{{"\U00002103"}}   {{"\U0001F4A6"}}: {{ states("sensor.kitchen_lumi_weather_humidity") | float(0) | round(1) }} %{% endif %}
                {% if is_state('input_boolean.heating_status','on') %}Опалення: {% if state_attr('climate.kitchen_heater', 'hvac_action') == "off" %}{{"\U0001F4F4"}}{%endif%}
                - {{"\U0001F525"}}: {{ states("switch.kitchen_socket_heating") }}, >{{"\U0001F321"}}: {{ state_attr('climate.kitchen_heater', 'temperature') }}{{"\U00002103"}}
                - {{"\U0001F50C"}}: ({{ states("sensor.kitchen_socket_heating_voltage") }} V | {{ states("sensor.kitchen_socket_heating_current") | float(0) | round(1) }} A | {{ states("sensor.kitchen_socket_heating_power") }} W | {{ states("sensor.kitchen_socket_heating_meter_monthly") | float(0) | round(1) }} kWh)
                {% endif %}
                {{"\U0001F6C0"}} Ванна {{"\U0001F321"}}: {% if is_state("sensor.bathroom_lumi_weather_temperature",'unavailable') %}{{"\U000026A0"}}Недоступний{% else %}{{ states("sensor.bathroom_lumi_weather_temperature") | float(0) | round(1) }}{{"\U00002103"}}   {{"\U0001F4A6"}}: {{ states("sensor.bathroom_lumi_weather_humidity") | float(0) | round(1) }} %{% endif %}
                {{"\U0001F6AA"}} Передпокій {{"\U0001F321"}}: {% if is_state("sensor.hallway_lumi_weather_temperature",'unavailable') %}{{"\U000026A0"}}Недоступний{% else %}{{ states("sensor.hallway_lumi_weather_temperature") | float(0) | round(1) }}{{"\U00002103"}}   {{"\U0001F4A6"}}: {{ states("sensor.hallway_lumi_weather_humidity") | float(0) | round(1) }} %{% endif %}

                {{"\U0001FA9F"}} Лоджія {{"\U0001F321"}}: {% if is_state("sensor.loggia_tuya_weather_temperature",'unavailable') %}{{"\U000026A0"}}Недоступний{% else %}{{ states("sensor.loggia_tuya_weather_temperature") | float(0) | round(1) }}{{"\U00002103"}}   {{"\U0001F4A6"}}: {{ states("sensor.loggia_tuya_weather_humidity") | float(0) | round(1) }} %{% endif %}
                {{"\U0001F3DE"}} Вулиця {{"\U0001F321"}}: {% if is_state("sensor.outdoor_temperature",'unavailable') %}{{"\U000026A0"}}Недоступен{% else %}{{ states("sensor.outdoor_temperature") | float(0) | round(1) }}{{"\U00002103"}}   {{"\U0001F4A6"}}: {{ states("sensor.outdoor_humidity") | float(0) | round(1) }} %{% endif %}
              data: 
                inline_keyboard:
                  - "{% if is_state('input_boolean.ac_status','on') %}{{'\U00002744'}}/{{'\U00002600'}} Управління Кондиціонерами:/ac_control{% elif is_state('input_boolean.heating_status','on') %}{{'\U00002668'}} Управління Обігрівачами:/heaters_control{% else %}{{'\U00002139'}} Статус:/status, {{'\U0001F6E1'}} Безпека:/security{% endif %}"
                  - "{% if is_state('input_boolean.ac_status','on') %}{{'\U00002668'}} Увімкнути Опалення:/turn_on_heaters{% elif is_state('input_boolean.heating_status','on') %}{{'\U00002744'}}/{{'\U00002600'}} Увімкнути Кондиціювання:/turn_on_ac{% else %}{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4A1'}} Освітлення:/lights{% endif %}"
                  - "{{'\U0001F4D1'}} Меню:/menu"
          mode: single

        - alias: "Telegram: Turn ON/OFF Heating"
          id: telegram_menu_turn_on_off_heating
          initial_state: true
          trigger:
          - platform: event
            event_type: telegram_callback
            event_data:
              data: '/turn_on_heaters'
          - platform: event
            event_type: telegram_callback
            event_data:
              data: '/turn_off_heaters'
          action:
          - service: input_boolean.toggle
            entity_id: input_boolean.heating_status
          - delay: '00:00:01'
          - service: telegram_bot.delete_message
            data_template:
              message_id: last
              chat_id: !secret telegram_user_1
          - service: notify.alexus
            data:
              message: *climate_body
              data: 
                inline_keyboard: &keyb_heaters
                  - "{{'\U0001F6CB'}} Вітальня {% if is_state('climate.living_room_heater','off') %}{{'\U0001F4F4'}} - Увімкнути{% else %}{{'\U0001F525'}} - Вимкнути{% endif %}:/toggle_heater_living_room"
                  - "{{'\U0001F6CC'}} Спальня {% if is_state('climate.bedroom_heater','off') %}{{'\U0001F4F4'}} - Увімкнути{% else %}{{'\U0001F525'}} - Вимкнути{% endif %}:/toggle_heater_bedroom"
                  - "{{'\U0001F37D'}} Кухня:{% if is_state('climate.kitchen_heater','off') %}{{'\U0001F4F4'}} - Увімкнути{% else %}{{'\U0001F525'}} - Вимкнути{% endif %}:/toggle_heater_kitchen"
                  - "{% if is_state('input_boolean.heating_status','on') %}{{'\U00002668'}} Вимкнути Опалення:/turn_off_heaters{% elif is_state('input_boolean.heating_status','off') %}{{'\U00002668'}} Увімкнути Опалення:/turn_on_heaters{% endif %}"
                  - "{{'\U0001F4D1'}} Меню:/menu"
          mode: single

        - alias: "Telegram: Turn ON/OFF AC"
          id: telegram_menu_turn_on_off_AC
          initial_state: true
          trigger:
          - platform: event
            event_type: telegram_callback
            event_data:
              data: '/turn_on_ac'
          - platform: event
            event_type: telegram_callback
            event_data:
              data: '/turn_off_ac'
          action:
          - service: input_boolean.toggle
            entity_id: input_boolean.ac_status
          - delay: '00:00:01'
          - service: telegram_bot.delete_message
            data_template:
              message_id: last
              chat_id: !secret telegram_user_1
          - service: notify.alexus
            data:
              message: *climate_body
              data: 
                inline_keyboard: &keyb_ac
                  - "{{'\U0001F6CB'}} Вітальня {% if is_state('climate.living_room_ac','off') %}{{'\U0001F4F4'}} - Увімкнути{% else %}{% if is_state('climate.living_room_ac','cool') %}{{'\U00002744'}}{% elif is_state('climate.living_room_ac','heat') %}{{'\U00002600'}}{% elif is_state('climate.living_room_ac','dry') %}{{'\U0001F4A7'}}{% else %}{{'\U0001F504'}}{%endif%} - Вимкнути{% endif %}:/toggle_ac_living_room"
                  - "{{'\U0001F6CC'}} Спальня {% if is_state('climate.bedroom_ac','off') %}{{'\U0001F4F4'}} - Увімкнути{% else %}{% if is_state('climate.bedroom_ac','cool') %}{{'\U00002744'}}{% elif is_state('climate.bedroom_ac','heat') %}{{'\U00002600'}}{% elif is_state('climate.bedroom_ac','dry') %}{{'\U0001F4A7'}}{% elif is_state('climate.bedroom_ac','fan_only') %}{{'\U0001F32C'}}{% else %}{{'\U0001F504'}}{% endif %} - Вимкнути{% endif %}:/toggle_ac_bedroom"
                  - "{% if is_state('input_boolean.ac_status','on') %}{{'\U00002744'}}/{{'\U00002600'}} Вимкнути Кондиціонування:/turn_off_ac{% elif is_state('input_boolean.ac_status','off') %}{{'\U00002744'}}/{{'\U00002600'}} Увімкнути Кондиціонування:/turn_on_ac{% endif %}"
                  - "{{'\U0001F4D1'}} Меню:/menu"
          mode: single

        - alias: "Telegram: Heaters Control"
          id: telegram_menu_heaters_control
          initial_state: true
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              data: '/heaters_control'
          action:
          - service: telegram_bot.delete_message
            data_template:
              message_id: last
              chat_id: !secret telegram_user_1
          - service: notify.alexus
            data:
              message: *climate_body
              data: 
                inline_keyboard: *keyb_heaters
          mode: single

        - alias: "Telegram: Toggle Heater in Living Room"
          id: telegram_menu_toggle_heater_living_room
          initial_state: true
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              data: '/toggle_heater_living_room'
          action:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: climate.living_room_heater
                    state: 'off'
                  - condition: state
                    entity_id: input_boolean.heating_status
                    state: 'on'
                  - condition: state
                    entity_id: binary_sensor.living_room_loggia_door_contact
                    state: 'off'
                sequence:
                  - service: climate.turn_on
                    entity_id: climate.living_room_heater
                  - delay: '00:00:02'
              - conditions:
                  - condition: state
                    entity_id: input_boolean.heating_status
                    state: 'on'
                  - condition: state
                    entity_id: climate.living_room_heater
                    state: 'heat'
                sequence:
                  - service: climate.turn_off
                    entity_id: climate.living_room_heater
                  - delay: '00:00:02'
          - service: telegram_bot.delete_message
            data_template:
              message_id: last
              chat_id: !secret telegram_user_1
          - service: notify.alexus
            data:
              message: *climate_body
              data: 
                inline_keyboard: *keyb_heaters
          mode: single

        - alias: "Telegram: Toggle Heater in Bedroom"
          id: telegram_menu_toggle_heater_bedroom
          initial_state: true
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              data: '/toggle_heater_bedroom'
          action:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: climate.bedroom_heater
                    state: 'off'
                  - condition: state
                    entity_id: input_boolean.heating_status
                    state: 'on'
                  - condition: state
                    entity_id: binary_sensor.bedroom_windows
                    state: 'off'
                sequence:
                  - service: climate.turn_on
                    entity_id: climate.bedroom_heater
                  - delay: '00:00:02'
              - conditions:
                  - condition: state
                    entity_id: input_boolean.heating_status
                    state: 'on'
                  - condition: state
                    entity_id: climate.bedroom_heater
                    state: 'heat'
                sequence:
                  - service: climate.turn_off
                    entity_id: climate.bedroom_heater
                  - delay: '00:00:02'
          - service: telegram_bot.delete_message
            data_template:
              message_id: last
              chat_id: !secret telegram_user_1
          - service: notify.alexus
            data:
              message: *climate_body
              data: 
                inline_keyboard: *keyb_heaters
          mode: single

        - alias: "Telegram: Toggle Heater in Kitchen"
          id: telegram_menu_toggle_heater_kitchen
          initial_state: true
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              data: '/toggle_heater_kitchen'
          action:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: climate.kitchen_heater
                    state: 'off'
                  - condition: state
                    entity_id: input_boolean.heating_status
                    state: 'on'
                  - condition: state
                    entity_id: binary_sensor.kitchen_window_contact
                    state: 'off'
                sequence:
                  - service: climate.turn_on
                    entity_id: climate.kitchen_heater
                  - delay: '00:00:02'
              - conditions:
                  - condition: state
                    entity_id: input_boolean.heating_status
                    state: 'on'
                  - condition: state
                    entity_id: climate.kitchen_heater
                    state: 'heat'
                sequence:
                  - service: climate.turn_off
                    entity_id: climate.kitchen_heater
                  - delay: '00:00:02'
          - service: telegram_bot.delete_message
            data_template:
              message_id: last
              chat_id: !secret telegram_user_1
          - service: notify.alexus
            data:
              message: *climate_body
              data: 
                inline_keyboard: *keyb_heaters
          mode: single

        - alias: "Telegram: AC Control"
          id: telegram_menu_ac_control
          initial_state: true
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              data: '/ac_control'
          action:
          - service: telegram_bot.delete_message
            data:
                message_id: 'last'
                chat_id: !secret telegram_user_1
          - service: notify.alexus
            data:
              message: *climate_body
              data: 
                inline_keyboard: *keyb_ac
          mode: single

        - alias: "Telegram: Toggle AC in Living Room"
          id: telegram_menu_toggle_ac_living_room
          initial_state: true
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              data: '/toggle_ac_living_room'
          action:
          - variables:
              status_before_action: '{{ states.binary_sensor.living_room_air_conditioner_socket_status.state }}'
          - choose:
              - conditions:
                  - condition: state
                    entity_id: climate.living_room_ac
                    state: 'off'
                  - condition: state
                    entity_id: input_boolean.ac_status
                    state: 'on'
                  - condition: state
                    entity_id: binary_sensor.living_room_loggia_door_contact
                    state: 'off'
                sequence:
                  - service: telegram_bot.delete_message
                    data:
                        message_id: 'last'
                        chat_id: !secret telegram_user_1
                  - service: notify.alexus
                    data:
                        title: *climate_body
                        message: |
                            ➖➖➖➖➖➖➖
                            "Увімкнення кондиціонера у вітальні..."
                  - choose: # turn on socket for Living_Room_AC
                      - conditions:
                          - condition: state
                            entity_id: switch.living_room_air_conditioner_socket
                            state: 'off'
                        sequence:
                          - service: switch.turn_on
                            entity_id: switch.living_room_air_conditioner_socket
                          - delay: 20
                  - repeat:
                        until:
                          - condition: or
                            conditions:
                              - condition: state
                                entity_id: binary_sensor.living_room_air_conditioner_socket_status
                                state: 'on'
                              - condition: state
                                entity_id: input_boolean.ac_status
                                state: 'off'
                              - condition: state
                                entity_id: binary_sensor.living_room_loggia_door_contact
                                state: 'on'
                        sequence:
                          - service: climate.turn_on
                            entity_id: climate.living_room_ac
                          - delay: '00:00:30'
              - conditions:
                  - condition: state
                    entity_id: input_boolean.ac_status
                    state: 'on'
                  - not:
                      - condition: state
                        entity_id: climate.living_room_ac
                        state: 'off'
                sequence:
                  - service: telegram_bot.delete_message
                    data:
                        message_id: 'last'
                        chat_id: !secret telegram_user_1
                  - service: notify.alexus
                    data:
                        title: *climate_body
                        message: |
                            ➖➖➖➖➖➖➖
                            "Вимкнення кондиціонера у вітальні..."
                  - service: climate.turn_off
                    entity_id: climate.living_room_ac
                  - delay: 20
                  - service: switch.turn_off
                    entity_id: switch.living_room_air_conditioner_socket
                  - wait_template: "{{ is_state('binary_sensor.living_room_air_conditioner_socket_status','off') }}"
          - service: telegram_bot.delete_message
            data:
                message_id: 'last'
                chat_id: !secret telegram_user_1
          - service: notify.alexus
            data:
                title: *climate_body
                message: |
                    ➖➖➖➖➖➖➖
                    Кондиціонер у Вітальні {% if is_state("binary_sensor.living_room_air_conditioner_socket_status","on") %}увімкнено у режимі {% if is_state('climate.living_room_ac', 'cool') %}{{"\U00002744"}} охолодження{% elif is_state('climate.living_room_ac', 'heat') %}{{"\U0001F525"}} обігріву{% elif is_state('climate.living_room_ac', 'dry') %}{{"\U0001F4A7"}} осушення{% else %} Авто{%endif%}{% else %} вимкнено{% endif %}{{"\U0000203C"}}
                    Поточна температура: {{ states("sensor.living_room_lumi_weather_temperature") | round(1) }}{{"\U00002103"}}
                data: 
                    inline_keyboard: *keyb_ac
          mode: single

        - alias: "Telegram: Toggle AC in Bedroom"
          id: telegram_menu_toggle_ac_bedroom
          initial_state: true
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              data: '/toggle_ac_bedroom'
          action:
          - variables:
              status_before_action: '{{ states.binary_sensor.bedroom_air_conditioner_socket_status.state }}'
          - choose:
              - conditions:
                  - condition: state
                    entity_id: climate.bedroom_ac
                    state: 'off'
                  - condition: state
                    entity_id: input_boolean.ac_status
                    state: 'on'
                  - condition: state
                    entity_id: binary_sensor.bedroom_windows
                    state: 'off'
                sequence:
                  - service: telegram_bot.delete_message
                    data:
                        message_id: 'last'
                        chat_id: !secret telegram_user_1
                  - service: notify.alexus
                    data:
                        title: *climate_body
                        message: |
                            ➖➖➖➖➖➖➖
                            "Увімкнення кондиціонера у Спальні..."
                  - choose: # turn on socket for Bedroom_AC
                      - conditions:
                          - condition: state
                            entity_id: switch.bedroom_air_conditioner_socket
                            state: 'off'
                        sequence:
                          - service: switch.turn_on
                            entity_id: switch.bedroom_air_conditioner_socket
                          - delay: 20
                  - repeat:
                        until:
                          - condition: or
                            conditions:
                              - condition: state
                                entity_id: binary_sensor.bedroom_air_conditioner_socket_status
                                state: 'on'
                              - condition: state
                                entity_id: input_boolean.ac_status
                                state: 'off'
                              - condition: state
                                entity_id: binary_sensor.bedroom_windows
                                state: 'on'
                        sequence:
                          - service: climate.turn_on
                            entity_id: climate.bedroom_ac
                          - delay: '00:00:30'
              - conditions:
                  - condition: state
                    entity_id: input_boolean.ac_status
                    state: 'on'
                  - not:
                      - condition: state
                        entity_id: climate.bedroom_ac
                        state: 'off'
                sequence:
                  - service: telegram_bot.delete_message
                    data:
                        message_id: 'last'
                        chat_id: !secret telegram_user_1
                  - service: notify.alexus
                    data:
                        title: *climate_body
                        message: |
                            ➖➖➖➖➖➖➖
                            "Вимкнення кондиціонера у Спальні..."
                  - service: climate.turn_off
                    entity_id: climate.bedroom_ac
                  - delay: 20
                  - service: switch.turn_off
                    entity_id: switch.bedroom_air_conditioner_socket
                  - wait_template: "{{ is_state('binary_sensor.bedroom_air_conditioner_socket_status','off') }}" 
          - service: telegram_bot.delete_message
            data:
              message_id: 'last'
              chat_id: !secret telegram_user_1
          - service: notify.alexus
            data:
                title: *climate_body
                message: |
                    ➖➖➖➖➖➖➖
                    Кондиціонер у Спальні {% if is_state("binary_sensor.bedroom_air_conditioner_socket_status","on") %}увімкнено у режимі {% if is_state('climate.bedroom_ac', 'cool') %}{{"\U00002744"}} охолодження{% elif is_state('climate.bedroom_ac', 'heat') %}{{"\U0001F525"}} обігріву{% elif is_state('climate.bedroom_ac', 'dry') %}{{"\U0001F4A7"}} осушення{% elif is_state('climate.bedroom_ac', 'fan_only') %}{{"\U0001F32C"}} обдування{% else %} Авто{%endif%}{% else %}вимкнено{% endif %}{{"\U0000203C"}}
                    Поточна температура: {{ states("sensor.bedroom_lumi_weather_temperature") | round(1) }}{{"\U00002103"}}
                data: 
                    inline_keyboard: *keyb_ac
          mode: single

        - alias: "Telegram: Light Menu"
          id: telegram_menu_lights
          initial_state: true
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              data: '/lights'
          action:
          - service: telegram_bot.delete_message
            data_template:
              message_id: last
              chat_id: !secret telegram_user_1
          - service: notify.alexus
            data:
              message: &light_status_body |
                {{'\U0001F4A1'}} Освітлення у квартирі:
                ➖➖➖➖➖➖➖
                {{"\U0001F6CB"}} Вітальня: {% if is_state("switch.living_room_light_switch","on") %}{{"\U000026AA"}} Увімкнено{% else %}{{"\U000026AB"}} Вимкнено{% endif %}
                {{"\U0001F6CC"}} Спальня: {% if is_state("switch.bedroom_light_switch","on") %}{{"\U000026AA"}} Увімкнено{% else %}{{"\U000026AB"}} Вимкнено{% endif %}
                {{"\U0001F37D"}} Кухня:
                {{"\U0001F6C0"}} Ванна:
                {{"\U0001F6AA"}} Передпокій:
              data:
                  inline_keyboard: &keyb_light
                    - "{{'\U0001F6CB'}} Вітальня {% if is_state('switch.living_room_light_switch','on') %}{{'\U000026AA'}}{% else %}{{'\U000026AB'}}{% endif %}:/toggle_living_room_light, {{'\U0001F6CC'}} Спальня {% if is_state('switch.bedroom_light_switch','on') %}{{'\U000026AA'}}{% else %}{{'\U000026AB'}}{% endif %}:/toggle_bedroom_light"
                    - "{{'\U0001F37D'}} Кухня:/toggle_kitchen_light, {{'\U0001F6C0'}} Ванна:/toggle_bathroom_light, {{'\U0001F6AA'}} Передпокій:/toggle_corridor_light"
                    - "{{'\U0001F4D1'}} Меню:/menu"
          mode: single

        - alias: "Telegram: Toggle Light in Bedroom"
          id: telegram_menu_toggle_light_in_bedroom
          initial_state: true
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              data: '/toggle_bedroom_light'
          action:
          - service: switch.toggle
            target:
                entity_id: switch.bedroom_light_switch
          - delay:
              seconds: 5
          - service: telegram_bot.delete_message
            data_template:
              message_id: last
              chat_id: !secret telegram_user_1
          - service: notify.alexus
            data:
              title: *light_status_body
              message: |
                ➖➖➖➖➖➖➖
                Освітлення у Спальні: {% if is_state("switch.bedroom_light_switch","on") %}{{"\U00002705"}} Увімкнено{% else %}{{"\U0000274C"}} Вимкнено{% endif %}
              data:
                  inline_keyboard: *keyb_light
          mode: single

        - alias: "Telegram: Toggle Light in Living Room"
          id: telegram_menu_toggle_light_in_living_room
          initial_state: true
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              data: '/toggle_living_room_light'
          action:
          - service: switch.toggle
            target:
                entity_id: switch.living_room_light_switch
          - delay:
              seconds: 5
          - service: telegram_bot.delete_message
            data_template:
              message_id: last
              chat_id: !secret telegram_user_1
          - service: notify.alexus
            data:
              title: *light_status_body
              message: |
                ➖➖➖➖➖➖➖
                Освітлення у Вітальні: {% if is_state("switch.living_room_light_switch","on") %}{{"\U00002705"}} Увімкнено{% else %}{{"\U0000274C"}} Вимкнено{% endif %}
              data:
                  inline_keyboard: *keyb_light
          mode: single

        - alias: "Telegram: Security Menu"
          id: telegram_menu_security
          initial_state: true
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              data: '/security'
          action:
          - service: telegram_bot.delete_message
            data:
                message_id: 'last'
                chat_id: !secret telegram_user_1
          - service: notify.alexus
            data:
              message: &security_status |
                {{"\U0001F6E1"}} Безпека у квартирі
                ➖➖➖➖➖➖➖
                {{"\U0001F3D8"}} Присутність: {% if is_state("group.family","home") %}{% set Str = '' %}{% if is_state("person.alexus","home") %}{% set Str = '\U0001F468\U0000200D' %}{% endif %}{% if is_state("person.inna","home") %}{% set Str = Str + "\U0001F469\U0000200D" %}{% endif %}{% if is_state("person.vova","home") %}{% set Str = Str + "\U0001F466\U0000200D" %}{% endif %}{% if is_state("person.ivan","home") %}{% set Str = Str + "\U0001F466" %}{% endif %}{{ Str }} Вдома {%else%}Не вдома {%endif%}

                {%- if is_state('binary_sensor.m_novomoskovsk_alerts','on') %}
                {{ '' }}
                {{ '\U0000203C\U0000203C УВАГА\U0000203C\U0000203C' }}
                  {% if is_state('binary_sensor.m_novomoskovsk_ta_novomoskovska_teritorialna_gromada_air','on') %}
                  {{- '\U0001F6EB \U0001F680 ПОВІТРЯНА ТРИВОГА \U0001F680 \U0001F6EC' -}}
                  {% elif is_state('binary_sensor.m_novomoskovsk_ta_novomoskovska_teritorialna_gromada_artillery','on') %}
                  {{- '\U0001F680 ЗАГРОЗА АРТОБСТРІЛУ \U0001F680' -}}
                  {% elif is_state('binary_sensor.m_novomoskovsk_ta_novomoskovska_teritorialna_gromada_chemical','on') %}
                  {{- '\U00002623 ХІМІЧНА ЗАГРОЗА \U00002623' -}}
                  {% elif is_state('binary_sensor.m_novomoskovsk_ta_novomoskovska_teritorialna_gromada_nuclear','on') %}
                  {{- '\U00002622 ЯДЕРНА ЗАГРОЗА \U00002622' -}}
                  {% elif is_state('binary_sensor.m_novomoskovsk_ta_novomoskovska_teritorialna_gromada_urban_fights','on') %}
                  {{- '\U00002694 ЗАГРОЗА ВУЛИЧНИХ БОЇВ \U00002694' -}}
                  {% else %}
                  {{- '\U000026A0 НЕВІДОМА ЗАГРОЗА \U000026A0' -}}
                  {% endif -%}
                {% else -%}
                {% endif %}

                {{"\U0001F694"}} Сигнализація: {% if is_state("alarm_control_panel.home_alarm",'unavailable') %}{{"\U000026A0"}}Недоступний{% else %}{% if is_state("alarm_control_panel.home_alarm","disarmed") %}{{"\U0001F7E2"}} Вимкнено{% elif is_state("alarm_control_panel.home_alarm","armed_home") %}{{"\U0001F7E1"}} Охорона(Вдома){% elif is_state("alarm_control_panel.home_alarm","armed_away") %}{{"\U0001F534"}} Охорона(Не Вдома){% elif is_state("alarm_control_panel.home_alarm","armed_night") %}{{"\U0001F535"}} Охорона(Ніч){% elif is_state("alarm_control_panel.home_alarm","triggered") %}{{"\U0001F6A8"}} ТРИВОГА{{"\U0000203C"}}{% elif is_state("alarm_control_panel.home_alarm","pending") %}{{"\U0001F536"}} ОЧІКУВАННЯ{{"\U00002049"}}{% elif is_state("alarm_control_panel.home_alarm","arming") %}{{"\U0001F550"}} ПОСТАНОВКА...{% endif %}{% endif %}

                {{"\U0001F6AA"}} Вхідні двері: {% if is_state("binary_sensor.hallway_entrance_door_contact",'unavailable') %}{{"\U000026A0"}}Недоступний{% else %}{% if is_state("binary_sensor.hallway_entrance_door_contact","off") %}{{"\U0001F7E2"}} Зачинені{%else%}{{"\U0001F534"}} Відчинені{%endif%}{% endif %}
                {{"\U0001F6AA"}} Двері на Лоджію: {% if is_state("binary_sensor.living_room_loggia_door_contact",'unavailable') %}{{"\U000026A0"}}Недоступний{% else %}{% if is_state("binary_sensor.living_room_loggia_door_contact","off") %}{{"\U0001F7E2"}} Зачинені{%else%}{{"\U0001F534"}} Відчинені{%endif%}{% endif %}

                {{"\U0001FA9F"}} Вікно у Спальні: 
                - Ліва стулка: {% if is_state("binary_sensor.bedroom_window_left_contact",'unavailable') %}{{"\U000026A0"}}Недоступний{% else %}{% if is_state("binary_sensor.bedroom_window_left_contact","off") %}{{"\U0001F7E2"}} Зачинене{%else%}{{"\U0001F534"}} Відчинене{%endif%}{% endif %}
                - Права стулка: {% if is_state("binary_sensor.bedroom_window_right_contact",'unavailable') %}{{"\U000026A0"}}Недоступний{% else %}{% if is_state("binary_sensor.bedroom_window_right_contact","off") %}{{"\U0001F7E2"}} Зачинене{%else%}{{"\U0001F534"}} Відчинене{%endif%}{% endif %}
                {{"\U0001FA9F"}} Вікно на Кухні: {% if is_state("binary_sensor.kitchen_window_contact",'unavailable') %}{{"\U000026A0"}}Недоступний{% else %}{% if is_state("binary_sensor.kitchen_window_contact","off") %}{{"\U0001F7E2"}} Зачинене{%else%}{{"\U0001F534"}} Відчинене{%endif%}{% endif %}
                
                {{"\U0001F6B1"}} Датчики протікання 
                - у ванні {{"\U0001F4A7"}}:
                  - під ванною {{"\U0001F6C1"}}: {% if is_state("binary_sensor.bathroom_water_leak_under_the_bath_water_leak",'unavailable') %}{{"\U000026A0"}}Недоступний{% else %}{% if is_state("binary_sensor.bathroom_water_leak_under_the_bath_water_leak","off") %}{{"\U0001F7E2"}} Сухо{%else%}{{"\U0001F534"}}{{"\U000026A0"}} Протікання{{"\U0000203C"}}{%endif%}{% endif %}
                  - під пралкою {{"\U0001F9FA"}}: {% if is_state("binary_sensor.bathroom_water_leak_under_washing_machine_water_leak",'unavailable') %}{{"\U000026A0"}}Недоступний{% else %}{% if is_state("binary_sensor.bathroom_water_leak_under_washing_machine_water_leak","off") %}{{"\U0001F7E2"}} Сухо{%else%}{{"\U000026A0"}} Протікання{{"\U0000203C"}}{%endif%}{% endif %} 
                - на кухні {{"\U0001F37D"}}: {% if is_state("binary_sensor.kitchen_water_leak_sensor_water_leak",'unavailable') %}{{"\U000026A0"}}Недоступний{% else %}{% if is_state("binary_sensor.kitchen_water_leak_sensor_water_leak","off") %}{{"\U0001F7E2"}} Сухо{%else%}{{"\U000026A0"}} Протікання{{"\U0000203C"}}{%endif%}{% endif %}

                {{"\U0001F6AB"}} Газ на Кухні: {% if is_state("binary_sensor.kitchen_gas_detector_gas",'unavailable') %}{{"\U000026A0"}}Недоступний{% else %}{% if is_state("binary_sensor.kitchen_gas_detector_gas","off") %}{{"\U0001F7E2"}} Не виявлено{%else%}{{"\U000026A0"}} Виявлено{{"\U0000203C"}}{%endif%}{% endif %}

                {{"\U0001F6AD"}} Дим на Кухні: {% if is_state("binary_sensor.kitchen_smoke_detector_smoke",'unavailable') %}{{"\U000026A0"}}Недоступний{% else %}{% if is_state("binary_sensor.kitchen_smoke_detector_smoke","off") %}{{"\U0001F7E2"}} Не виявлено{%else%}{{"\U000026A0"}} Виявлено{{"\U0000203C"}}{%endif%}{% endif %}
                {{"\U0001F6AD"}} Дим у Спальні: {% if is_state("binary_sensor.bedroom_smoke_detector_smoke",'unavailable') %}{{"\U000026A0"}}Недоступний{% else %}{% if is_state("binary_sensor.bedroom_smoke_detector_smoke","off") %}{{"\U0001F7E2"}} Не виявлено{%else%}{{"\U000026A0"}} Виявлено{{"\U0000203C"}}{%endif%}{% endif %}
                {{"\U0001F6AD"}} Дим у Вітальні: {% if is_state("binary_sensor.living_room_smoke_detector_smoke",'unavailable') %}{{"\U000026A0"}}Недоступний{% else %}{% if is_state("binary_sensor.living_room_smoke_detector_smoke","off") %}{{"\U0001F7E2"}} Не виявлено{%else%}{{"\U000026A0"}} Виявлено{{"\U0000203C"}}{%endif%}{% endif %}
              data: 
                inline_keyboard:  
                  - "{% if is_state('alarm_control_panel.home_alarm','disarmed') %}{{'\U0001F694'}} Поставити на охорону {{'\U0001F534'}}:/set_alarm{% else %}{{'\U0001F694'}} Зняти з охорони {{'\U0001F7E2'}}:/cancel_alarm{% endif%}"
                  - "{{'\U0001F4F9'}} Камера {{'\U0001F4F7'}}:/camera_menu"
                  - "{{'\U0001F4D1'}} Меню:/menu"
          mode: single

        - alias: "Telegram: Camera Menu"
          id: telegram_menu_camera
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              command: '/camera_menu'
          action:
          - service: telegram_bot.delete_message
            data:
                message_id: 'last'
                chat_id: !secret telegram_user_1
          - service: notify.alexus
            data:
                title: '{{"\U0001F3A6"}} КАМЕРА{{"\U0000203C"}}'
                message: |
                    ➖➖➖➖➖➖➖
                    {{"\U0001F694"}} Оберіть режим {{"\U0001F447"}}
                data: 
                  inline_keyboard: 
                    - "{{'\U0001F4F9'}} Відео:/camera_menu_video"
                    - "{{'\U0001F4F7'}} Фото:/camera_menu_photo"
                    - "{{'\U0001F4D1'}} Меню:/menu, {{'\U0001F6E1'}} Безпека:/security"
          mode: single

        - alias: "Telegram: Camera Photo Menu"
          id: telegram_menu_camera_photo
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              command: '/camera_menu_photo'
          action:
          - service: telegram_bot.delete_message
            data:
                message_id: 'last'
                chat_id: !secret telegram_user_1
          - service: notify.alexus
            data:
                message: &camera_photo_body |
                    {{"\U0001F3A6"}} КАМЕРА: ФОТО {{"\U0001F39E"}}
                    ➖➖➖➖➖➖➖
                    {{"\U0001F4F7"}} Оберіть варіант зйомки {{"\U0001F447"}}
                data: 
                  inline_keyboard: &camera_photo_keyb 
                    - "{{'\U0001F693'}} Патруль:/camera_menu_photo_patrol"
                    - "{{'\U0001F6CB'}} Вітальня:/camera_menu_photo_living_room, {{'\U0001F6CC'}} Спальня:/camera_menu_photo_bedroom"
                    - "{{'\U0001F37D'}} Кухня:/camera_menu_photo_kitchen, {{'\U0001F6C0'}} Ванна:/camera_menu_photo_bathroom"
                    - "{{'\U0001F6AA'}} Передпокій:/camera_menu_photo_entrance"
                    - "{{'\U0001F4D1'}} Меню:/menu, {{'\U0001F6E1'}} Безпека:/security"
          mode: single

        - alias: "Telegram: Camera Video Menu"
          id: telegram_menu_camera_video
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              command: '/camera_menu_video'
          action:
          - service: telegram_bot.delete_message
            data:
                message_id: 'last'
                chat_id: !secret telegram_user_1
          - service: notify.alexus
            data:
                message: &camera_video_body |
                    {{"\U0001F3A6"}} КАМЕРА: ВІДЕО {{"\U0001F39E"}}
                    ➖➖➖➖➖➖➖
                    {{"\U0001F4F9"}} Оберіть варіант зйомки {{"\U0001F447"}}
                data: 
                  inline_keyboard: &camera_video_keyb 
                    - "{{'\U0001F693'}} Патруль:/camera_menu_video_patrol"
                    - "{{'\U0001F6CB'}} Вітальня:/camera_menu_video_living_room, {{'\U0001F6CC'}} Спальня:/camera_menu_video_bedroom"
                    - "{{'\U0001F37D'}} Кухня:/camera_menu_video_kitchen, {{'\U0001F6C0'}} Ванна:/camera_menu_video_bathroom"
                    - "{{'\U0001F6AA'}} Передпокій:/camera_menu_video_entrance"
                    - "{{'\U0001F4D1'}} Меню:/menu, {{'\U0001F6E1'}} Безпека:/security"
          mode: single

        - alias: "Telegram: Camera Photo Patrol Menu"
          id: telegram_menu_camera_photo_patrol
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              command: '/camera_menu_photo_patrol'
          action:
          - variables:
                tapo_camera_privacy_mode: '{{ states("switch.tapo_camera_c200_privacy") }}'
                snapshot_file_name_begin: |
                    {{ "/config/files/camera/" + state_attr('camera.tapo_camera_c200_hd_stream', 'friendly_name') + "/snapshot_patrol_" }}
          - service: telegram_bot.delete_message
            data:
                message_id: 'last'
                chat_id: !secret telegram_user_1
          - choose:
              - conditions:
                  - condition: template
                    value_template: > 
                        {{ not states('camera.tapo_camera_c200_hd_stream') in ('unknown','unavailable') }}
                sequence:
                    # Disable privacy mode for tapo_camera
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: switch.tapo_camera_c200_privacy
                            state: 'on'
                        sequence:
                          - service: switch.turn_off
                            entity_id: switch.tapo_camera_c200_privacy
                          - delay: '00:00:04'
                    # Move tapo_camera to Entrance preset
                  - service: select.select_option
                    target:
                        entity_id: select.tapo_camera_c200_move_to_preset
                    data: 
                        option: 'Entrance'
                  - delay: '00:00:03'
                    # take snapshot from Entrance area
                  - variables:
                        snapshot_file_name_end: |
                            {{ now().strftime('%Y%m%d-%H%M%S') + ".jpg" }}
                  - service: script.tapo_camera_save_snapshot
                    data:
                        tapo_camera_id: camera.tapo_camera_c200_hd_stream
                        file_name: '{{ snapshot_file_name_begin }} + "entrance_" + {{ snapshot_file_name_end }}'
                    # send snapshot to alexus mobile/telegram
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                        sequence:
                          - service: notify.alexus
                            data:
                                message: 'Entrance'
                                data:
                                    photo:
                                      - file: '{{ snapshot_file_name_begin }} + "entrance_" + {{ snapshot_file_name_end }}'
                                        caption: 'Фото: Entrance'
                    # Move tapo_camera to Living Room preset
                  - service: select.select_option
                    target:
                        entity_id: select.tapo_camera_c200_move_to_preset
                    data: 
                        option: 'Living Room'
                  - delay: '00:00:03'
                    # take snapshot from Living Room area
                  - variables:
                        snapshot_file_name_end: |
                            {{ now().strftime('%Y%m%d-%H%M%S') + ".jpg" }}
                  - service: script.tapo_camera_save_snapshot
                    data:
                        tapo_camera_id: camera.tapo_camera_c200_hd_stream
                        file_name: '{{ snapshot_file_name_begin }} + "living_room_" + {{ snapshot_file_name_end }}'
                    # send snapshot to alexus mobile/telegram
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                        sequence:
                          - service: notify.alexus
                            data:
                                message: 'Living Room'
                                data:
                                    photo:
                                      - file: '{{ snapshot_file_name_begin }} + "living_room_" + {{ snapshot_file_name_end }}'
                                        caption: 'Фото: Living Room'
                    # Move tapo_camera to Bedroom preset
                  - service: select.select_option
                    target:
                        entity_id: select.tapo_camera_c200_move_to_preset
                    data: 
                        option: 'Bedroom'
                  - delay: '00:00:03'
                    # take snapshot from Bedroom area
                  - variables:
                        snapshot_file_name_end: |
                            {{ now().strftime('%Y%m%d-%H%M%S') + ".jpg" }}
                  - service: script.tapo_camera_save_snapshot
                    data:
                        tapo_camera_id: camera.tapo_camera_c200_hd_stream
                        file_name: '{{ snapshot_file_name_begin }} + "bedroom_" + {{ snapshot_file_name_end }}'
                    # send snapshot to alexus mobile/telegram
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                        sequence:
                          - service: notify.alexus
                            data:
                                message: 'Bedroom'
                                data:
                                    photo:
                                      - file: '{{ snapshot_file_name_begin }} + "bedroom_" + {{ snapshot_file_name_end }}'
                                        caption: 'Фото: Bedroom'
                    # Move tapo_camera to Kitchen preset
                  - service: select.select_option
                    target:
                        entity_id: select.tapo_camera_c200_move_to_preset
                    data: 
                        option: 'Kitchen'
                  - delay: '00:00:03'
                    # take snapshot from Kitchen area
                  - variables:
                        snapshot_file_name_end: |
                            {{ now().strftime('%Y%m%d-%H%M%S') + ".jpg" }}
                  - service: script.tapo_camera_save_snapshot
                    data:
                        tapo_camera_id: camera.tapo_camera_c200_hd_stream
                        file_name: '{{ snapshot_file_name_begin }} + "kitchen_" + {{ snapshot_file_name_end }}'
                    # send snapshot to alexus mobile/telegram
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                        sequence:
                          - service: notify.alexus
                            data:
                                message: 'Kitchen'
                                data:
                                    photo:
                                      - file: '{{ snapshot_file_name_begin }} + "kitchen_" + {{ snapshot_file_name_end }}'
                                        caption: 'Фото: Kitchen'
                    # Move tapo_camera to Bathroom preset
                  - service: select.select_option
                    target:
                        entity_id: select.tapo_camera_c200_move_to_preset
                    data: 
                        option: 'Bathroom'
                  - delay: '00:00:03'
                    # take snapshot from Bathroom area
                  - variables:
                        snapshot_file_name_end: |
                            {{ now().strftime('%Y%m%d-%H%M%S') + ".jpg" }}
                  - service: script.tapo_camera_save_snapshot
                    data:
                        tapo_camera_id: camera.tapo_camera_c200_hd_stream
                        file_name: '{{ snapshot_file_name_begin }} + "bathroom_" + {{ snapshot_file_name_end }}'
                    # send snapshot to alexus mobile/telegram
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                        sequence:
                          - service: notify.alexus
                            data:
                                message: 'Bathroom'
                                data:
                                    photo:
                                      - file: '{{ snapshot_file_name_begin }} + "bathroom_" + {{ snapshot_file_name_end }}'
                                        caption: 'Фото: Bathroom'
                    # restore privacy mode for tapo_camera
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ tapo_camera_privacy_mode == 'on' }}"
                          - condition: state
                            entity_id: switch.tapo_camera_c200_privacy
                            state: 'off'
                        sequence:
                          - service: switch.turn_on
                            entity_id: switch.tapo_camera_c200_privacy
            default:
              - service: notify.alexus
                data:
                    title: "{{'\U000026A0'}} ПОМИЛКА {{'\U0000203C'}}{{'\U0000203C'}}"
                    message: |
                        {{"\U0001F3A6"}} Камера недоступна {{'\U0000203C'}}
          - service: notify.alexus
            data:
                message: *camera_photo_body
                data: 
                  inline_keyboard: *camera_photo_keyb
          mode: single

        - alias: "Telegram: Camera Photo Entrance Menu"
          id: telegram_menu_camera_photo_entrance
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              command: '/camera_menu_photo_entrance'
          action:
          - variables:
                tapo_camera_privacy_mode: '{{ states("switch.tapo_camera_c200_privacy") }}'
                snapshot_file_name_begin: |
                    {{ "/config/files/camera/" + state_attr('camera.tapo_camera_c200_hd_stream', 'friendly_name') + "/snapshot_patrol_" }}
          - service: telegram_bot.delete_message
            data:
                message_id: 'last'
                chat_id: !secret telegram_user_1
          - choose:
              - conditions:
                  - condition: template
                    value_template: > 
                        {{ not states('camera.tapo_camera_c200_hd_stream') in ('unknown','unavailable') }}
                sequence:
                    # Disable privacy mode for tapo_camera
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: switch.tapo_camera_c200_privacy
                            state: 'on'
                        sequence:
                          - service: switch.turn_off
                            entity_id: switch.tapo_camera_c200_privacy
                          - delay: '00:00:04'
                    # Move tapo_camera to Entrance preset
                  - service: select.select_option
                    target:
                        entity_id: select.tapo_camera_c200_move_to_preset
                    data: 
                        option: 'Entrance'
                  - delay: '00:00:03'
                    # take snapshot from Entrance area
                  - variables:
                        snapshot_file_name_end: |
                            {{ now().strftime('%Y%m%d-%H%M%S') + ".jpg" }}
                  - service: script.tapo_camera_save_snapshot
                    data:
                        tapo_camera_id: camera.tapo_camera_c200_hd_stream
                        file_name: '{{ snapshot_file_name_begin }} + "entrance_" + {{ snapshot_file_name_end }}'
                    # send snapshot to alexus mobile/telegram
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                        sequence:
                          - service: notify.alexus
                            data:
                                message: 'Entrance'
                                data:
                                    photo:
                                      - file: '{{ snapshot_file_name_begin }} + "entrance_" + {{ snapshot_file_name_end }}'
                                        caption: 'Фото: Entrance'
                    # restore privacy mode for tapo_camera
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ tapo_camera_privacy_mode == 'on' }}"
                          - condition: state
                            entity_id: switch.tapo_camera_c200_privacy
                            state: 'off'
                        sequence:
                          - service: switch.turn_on
                            entity_id: switch.tapo_camera_c200_privacy
            default:
              - service: notify.alexus
                data:
                    title: "{{'\U000026A0'}} ПОМИЛКА {{'\U0000203C'}}{{'\U0000203C'}}"
                    message: |
                        {{"\U0001F3A6"}} Камера недоступна {{'\U0000203C'}}
          - service: notify.alexus
            data:
                message: *camera_photo_body
                data: 
                  inline_keyboard: *camera_photo_keyb
          mode: single

        - alias: "Telegram: Camera Photo Living Room Menu"
          id: telegram_menu_camera_photo_living_room
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              command: '/camera_menu_photo_living_room'
          action:
          - variables:
                tapo_camera_privacy_mode: '{{ states("switch.tapo_camera_c200_privacy") }}'
                snapshot_file_name_begin: |
                    {{ "/config/files/camera/" + state_attr('camera.tapo_camera_c200_hd_stream', 'friendly_name') + "/snapshot_patrol_" }}
          - service: telegram_bot.delete_message
            data:
                message_id: 'last'
                chat_id: !secret telegram_user_1
          - choose:
              - conditions:
                  - condition: template
                    value_template: > 
                        {{ not states('camera.tapo_camera_c200_hd_stream') in ('unknown','unavailable') }}
                sequence:
                    # Disable privacy mode for tapo_camera
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: switch.tapo_camera_c200_privacy
                            state: 'on'
                        sequence:
                          - service: switch.turn_off
                            entity_id: switch.tapo_camera_c200_privacy
                          - delay: '00:00:04'
                    # Move tapo_camera to Living Room preset
                  - service: select.select_option
                    target:
                        entity_id: select.tapo_camera_c200_move_to_preset
                    data: 
                        option: 'Living Room'
                  - delay: '00:00:03'
                    # take snapshot from Living Room area
                  - variables:
                        snapshot_file_name_end: |
                            {{ now().strftime('%Y%m%d-%H%M%S') + ".jpg" }}
                  - service: script.tapo_camera_save_snapshot
                    data:
                        tapo_camera_id: camera.tapo_camera_c200_hd_stream
                        file_name: '{{ snapshot_file_name_begin }} + "living_room_" + {{ snapshot_file_name_end }}'
                    # send snapshot to alexus mobile/telegram
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                        sequence:
                          - service: notify.alexus
                            data:
                                message: 'Living Room'
                                data:
                                    photo:
                                      - file: '{{ snapshot_file_name_begin }} + "living_room_" + {{ snapshot_file_name_end }}'
                                        caption: 'Фото: Living Room'
                    # restore privacy mode for tapo_camera
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ tapo_camera_privacy_mode == 'on' }}"
                          - condition: state
                            entity_id: switch.tapo_camera_c200_privacy
                            state: 'off'
                        sequence:
                          - service: switch.turn_on
                            entity_id: switch.tapo_camera_c200_privacy
            default:
              - service: notify.alexus
                data:
                    title: "{{'\U000026A0'}} ПОМИЛКА {{'\U0000203C'}}{{'\U0000203C'}}"
                    message: |
                        {{"\U0001F3A6"}} Камера недоступна {{'\U0000203C'}}
          - service: notify.alexus
            data:
                message: *camera_photo_body
                data: 
                  inline_keyboard: *camera_photo_keyb
          mode: single

        - alias: "Telegram: Camera Photo Bedroom Menu"
          id: telegram_menu_camera_photo_bedroom
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              command: '/camera_menu_photo_bedroom'
          action:
          - variables:
                tapo_camera_privacy_mode: '{{ states("switch.tapo_camera_c200_privacy") }}'
                snapshot_file_name_begin: |
                    {{ "/config/files/camera/" + state_attr('camera.tapo_camera_c200_hd_stream', 'friendly_name') + "/snapshot_patrol_" }}
          - service: telegram_bot.delete_message
            data:
                message_id: 'last'
                chat_id: !secret telegram_user_1
          - choose:
              - conditions:
                  - condition: template
                    value_template: > 
                        {{ not states('camera.tapo_camera_c200_hd_stream') in ('unknown','unavailable') }}
                sequence:
                    # Disable privacy mode for tapo_camera
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: switch.tapo_camera_c200_privacy
                            state: 'on'
                        sequence:
                          - service: switch.turn_off
                            entity_id: switch.tapo_camera_c200_privacy
                          - delay: '00:00:04'
                    # Move tapo_camera to Bedroom preset
                  - service: select.select_option
                    target:
                        entity_id: select.tapo_camera_c200_move_to_preset
                    data: 
                        option: 'Bedroom'
                  - delay: '00:00:03'
                    # take snapshot from Bedroom area
                  - variables:
                        snapshot_file_name_end: |
                            {{ now().strftime('%Y%m%d-%H%M%S') + ".jpg" }}
                  - service: script.tapo_camera_save_snapshot
                    data:
                        tapo_camera_id: camera.tapo_camera_c200_hd_stream
                        file_name: '{{ snapshot_file_name_begin }} + "bedroom_" + {{ snapshot_file_name_end }}'
                    # send snapshot to alexus mobile/telegram
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                        sequence:
                          - service: notify.alexus
                            data:
                                message: 'Bedroom'
                                data:
                                    photo:
                                      - file: '{{ snapshot_file_name_begin }} + "bedroom_" + {{ snapshot_file_name_end }}'
                                        caption: 'Фото: Bedroom'
                    # restore privacy mode for tapo_camera
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ tapo_camera_privacy_mode == 'on' }}"
                          - condition: state
                            entity_id: switch.tapo_camera_c200_privacy
                            state: 'off'
                        sequence:
                          - service: switch.turn_on
                            entity_id: switch.tapo_camera_c200_privacy
            default:
              - service: notify.alexus
                data:
                    title: "{{'\U000026A0'}} ПОМИЛКА {{'\U0000203C'}}{{'\U0000203C'}}"
                    message: |
                        {{"\U0001F3A6"}} Камера недоступна {{'\U0000203C'}}
          - service: notify.alexus
            data:
                message: *camera_photo_body
                data: 
                  inline_keyboard: *camera_photo_keyb
          mode: single

        - alias: "Telegram: Camera Photo Kitchen Menu"
          id: telegram_menu_camera_photo_kitchen
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              command: '/camera_menu_photo_kitchen'
          action:
          - variables:
                tapo_camera_privacy_mode: '{{ states("switch.tapo_camera_c200_privacy") }}'
                snapshot_file_name_begin: |
                    {{ "/config/files/camera/" + state_attr('camera.tapo_camera_c200_hd_stream', 'friendly_name') + "/snapshot_patrol_" }}
          - service: telegram_bot.delete_message
            data:
                message_id: 'last'
                chat_id: !secret telegram_user_1
          - choose:
              - conditions:
                  - condition: template
                    value_template: > 
                        {{ not states('camera.tapo_camera_c200_hd_stream') in ('unknown','unavailable') }}
                sequence:
                    # Disable privacy mode for tapo_camera
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: switch.tapo_camera_c200_privacy
                            state: 'on'
                        sequence:
                          - service: switch.turn_off
                            entity_id: switch.tapo_camera_c200_privacy
                          - delay: '00:00:04'
                    # Move tapo_camera to Kitchen preset
                  - service: select.select_option
                    target:
                        entity_id: select.tapo_camera_c200_move_to_preset
                    data: 
                        option: 'Kitchen'
                  - delay: '00:00:03'
                    # take snapshot from Kitchen area
                  - variables:
                        snapshot_file_name_end: |
                            {{ now().strftime('%Y%m%d-%H%M%S') + ".jpg" }}
                  - service: script.tapo_camera_save_snapshot
                    data:
                        tapo_camera_id: camera.tapo_camera_c200_hd_stream
                        file_name: '{{ snapshot_file_name_begin }} + "kitchen_" + {{ snapshot_file_name_end }}'
                    # send snapshot to alexus mobile/telegram
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                        sequence:
                          - service: notify.alexus
                            data:
                                message: 'Kichen'
                                data:
                                    photo:
                                      - file: '{{ snapshot_file_name_begin }} + "kitchen_" + {{ snapshot_file_name_end }}'
                                        caption: 'Фото: Kitchen'
                    # restore privacy mode for tapo_camera
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ tapo_camera_privacy_mode == 'on' }}"
                          - condition: state
                            entity_id: switch.tapo_camera_c200_privacy
                            state: 'off'
                        sequence:
                          - service: switch.turn_on
                            entity_id: switch.tapo_camera_c200_privacy
            default:
              - service: notify.alexus
                data:
                    title: "{{'\U000026A0'}} ПОМИЛКА {{'\U0000203C'}}{{'\U0000203C'}}"
                    message: |
                        {{"\U0001F3A6"}} Камера недоступна {{'\U0000203C'}}
          - service: notify.alexus
            data:
                message: *camera_photo_body
                data: 
                  inline_keyboard: *camera_photo_keyb
          mode: single

        - alias: "Telegram: Camera Photo Bathroom Menu"
          id: telegram_menu_camera_photo_bathroom
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              command: '/camera_menu_photo_bathroom'
          action:
          - variables:
                tapo_camera_privacy_mode: '{{ states("switch.tapo_camera_c200_privacy") }}'
                snapshot_file_name_begin: |
                    {{ "/config/files/camera/" + state_attr('camera.tapo_camera_c200_hd_stream', 'friendly_name') + "/snapshot_patrol_" }}
          - service: telegram_bot.delete_message
            data:
                message_id: 'last'
                chat_id: !secret telegram_user_1
          - choose:
              - conditions:
                  - condition: template
                    value_template: > 
                        {{ not states('camera.tapo_camera_c200_hd_stream') in ('unknown','unavailable') }}
                sequence:
                    # Disable privacy mode for tapo_camera
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: switch.tapo_camera_c200_privacy
                            state: 'on'
                        sequence:
                          - service: switch.turn_off
                            entity_id: switch.tapo_camera_c200_privacy
                          - delay: '00:00:04'
                    # Move tapo_camera to Bathroom preset
                  - service: select.select_option
                    target:
                        entity_id: select.tapo_camera_c200_move_to_preset
                    data: 
                        option: 'Bathroom'
                  - delay: '00:00:03'
                    # take snapshot from Bathroom area
                  - variables:
                        snapshot_file_name_end: |
                            {{ now().strftime('%Y%m%d-%H%M%S') + ".jpg" }}
                  - service: script.tapo_camera_save_snapshot
                    data:
                        tapo_camera_id: camera.tapo_camera_c200_hd_stream
                        file_name: '{{ snapshot_file_name_begin }} + "bathroom_" + {{ snapshot_file_name_end }}'
                    # send snapshot to alexus mobile/telegram
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                        sequence:
                          - service: notify.alexus
                            data:
                                message: 'Bathroom'
                                data:
                                    photo:
                                      - file: '{{ snapshot_file_name_begin }} + "bathroom_" + {{ snapshot_file_name_end }}'
                                        caption: 'Фото: Bathroom'
                    # restore privacy mode for tapo_camera
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ tapo_camera_privacy_mode == 'on' }}"
                          - condition: state
                            entity_id: switch.tapo_camera_c200_privacy
                            state: 'off'
                        sequence:
                          - service: switch.turn_on
                            entity_id: switch.tapo_camera_c200_privacy
            default:
              - service: notify.alexus
                data:
                    title: "{{'\U000026A0'}} ПОМИЛКА {{'\U0000203C'}}{{'\U0000203C'}}"
                    message: |
                        {{"\U0001F3A6"}} Камера недоступна {{'\U0000203C'}}
          - service: notify.alexus
            data:
                message: *camera_photo_body
                data: 
                  inline_keyboard: *camera_photo_keyb
          mode: single

        - alias: "Telegram: Camera Video Patrol Menu"
          id: telegram_menu_camera_video_patrol
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              command: '/camera_menu_video_patrol'
          action:
          - variables:
                tapo_camera_privacy_mode: '{{ states("switch.tapo_camera_c200_privacy") }}'
                record_file_name: |
                    {{ "/config/files/camera/" + state_attr('camera.tapo_camera_c200_hd_stream', 'friendly_name') +  "/record_patrol_" + now().strftime('%Y%m%d-%H%M%S') + ".mp4" }}
          - service: telegram_bot.delete_message
            data:
                message_id: 'last'
                chat_id: !secret telegram_user_1
          - choose:
              - conditions:
                  - condition: template
                    value_template: > 
                        {{ not states('camera.tapo_camera_c200_hd_stream') in ('unknown','unavailable') }}
                sequence:
                    # Disable privacy mode for tapo_camera
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: switch.tapo_camera_c200_privacy
                            state: 'on'
                        sequence:
                          - service: switch.turn_off
                            entity_id: switch.tapo_camera_c200_privacy
                          - delay: '00:00:04'
                    # Move tapo_camera to Entrance preset
                  - service: select.select_option
                    target:
                        entity_id: select.tapo_camera_c200_move_to_preset
                    data: 
                        option: 'Entrance'
                  - delay: '00:00:03'
                    # activate horizontal patrol mode
                  - service: select.select_option
                    target:
                        entity_id: select.tapo_camera_c200_patrol_mode
                    data: 
                        option: 'Horizontal'
                    # record short video
                  - service: script.tapo_camera_save_record
                    data:
                        tapo_camera_id: camera.tapo_camera_c200_hd_stream
                        file_name: '{{ record_file_name }}'
                        time_duration: 20
                  - service: select.select_option
                    target:
                        entity_id: select.tapo_camera_c200_patrol_mode
                    data: 
                        option: 'off'
                    # send record
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                        sequence:
                          - service: notify.alexus
                            data:
                                message: 'Відео обзор'
                                data:
                                    video:
                                      - file: '{{ record_file_name }}'
                                        caption: 'Відео: Patrol'
                    # restore privacy mode for tapo_camera
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ tapo_camera_privacy_mode == 'on' }}"
                          - condition: state
                            entity_id: switch.tapo_camera_c200_privacy
                            state: 'off'
                        sequence:
                          - service: switch.turn_on
                            entity_id: switch.tapo_camera_c200_privacy
            default:
              - service: notify.alexus
                data:
                    title: "{{'\U000026A0'}} ПОМИЛКА {{'\U0000203C'}}{{'\U0000203C'}}"
                    message: |
                        {{"\U0001F3A6"}} Камера недоступна {{'\U0000203C'}}
          - service: notify.alexus
            data:
                message: *camera_video_body
                data: 
                  inline_keyboard: *camera_video_keyb
          mode: single

        - alias: "Telegram: Camera Video Entrance Menu"
          id: telegram_menu_camera_video_entrance
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              command: '/camera_menu_video_entrance'
          action:
          - variables:
                tapo_camera_privacy_mode: '{{ states("switch.tapo_camera_c200_privacy") }}'
                record_file_name: |
                    {{ "/config/files/camera/" + state_attr('camera.tapo_camera_c200_hd_stream', 'friendly_name') +  "/record_entrance_door_" + now().strftime('%Y%m%d-%H%M%S') + ".mp4" }}
          - service: telegram_bot.delete_message
            data:
                message_id: 'last'
                chat_id: !secret telegram_user_1
          - choose:
              - conditions:
                  - condition: template
                    value_template: > 
                        {{ not states('camera.tapo_camera_c200_hd_stream') in ('unknown','unavailable') }}
                sequence:
                    # Disable privacy mode for tapo_camera
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: switch.tapo_camera_c200_privacy
                            state: 'on'
                        sequence:
                          - service: switch.turn_off
                            entity_id: switch.tapo_camera_c200_privacy
                          - delay: '00:00:04'
                    # Move tapo_camera to Entrance preset
                  - service: select.select_option
                    target:
                        entity_id: select.tapo_camera_c200_move_to_preset
                    data: 
                        option: 'Entrance'
                  - delay: '00:00:03'
                    # record short video
                  - service: script.tapo_camera_save_record
                    data:
                        tapo_camera_id: camera.tapo_camera_c200_hd_stream
                        file_name: '{{ record_file_name }}'
                        time_duration: 15
                    # send record
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                        sequence:
                          - service: notify.alexus
                            data:
                                message: 'Відео обзор'
                                data:
                                    video:
                                      - file: '{{ record_file_name }}'
                                        caption: 'Відео: Entrance'
                    # restore privacy mode for tapo_camera
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ tapo_camera_privacy_mode == 'on' }}"
                          - condition: state
                            entity_id: switch.tapo_camera_c200_privacy
                            state: 'off'
                        sequence:
                          - service: switch.turn_on
                            entity_id: switch.tapo_camera_c200_privacy
            default:
              - service: notify.alexus
                data:
                    title: "{{'\U000026A0'}} ПОМИЛКА {{'\U0000203C'}}{{'\U0000203C'}}"
                    message: |
                        {{"\U0001F3A6"}} Камера недоступна {{'\U0000203C'}}
          - service: notify.alexus
            data:
                message: *camera_video_body
                data: 
                  inline_keyboard: *camera_video_keyb
          mode: single

        - alias: "Telegram: Camera Video Living Room Menu"
          id: telegram_menu_camera_video_living_room
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              command: '/camera_menu_video_living_room'
          action:
          - variables:
                tapo_camera_privacy_mode: '{{ states("switch.tapo_camera_c200_privacy") }}'
                record_file_name: |
                    {{ "/config/files/camera/" + state_attr('camera.tapo_camera_c200_hd_stream', 'friendly_name') +  "/record_living_room_" + now().strftime('%Y%m%d-%H%M%S') + ".mp4" }}
          - service: telegram_bot.delete_message
            data:
                message_id: 'last'
                chat_id: !secret telegram_user_1
          - choose:
              - conditions:
                  - condition: template
                    value_template: > 
                        {{ not states('camera.tapo_camera_c200_hd_stream') in ('unknown','unavailable') }}
                sequence:
                    # Disable privacy mode for tapo_camera
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: switch.tapo_camera_c200_privacy
                            state: 'on'
                        sequence:
                          - service: switch.turn_off
                            entity_id: switch.tapo_camera_c200_privacy
                          - delay: '00:00:04'
                    # Move tapo_camera to Living Room preset
                  - service: select.select_option
                    target:
                        entity_id: select.tapo_camera_c200_move_to_preset
                    data: 
                        option: 'Living Room'
                  - delay: '00:00:03'
                    # record short video
                  - service: script.tapo_camera_save_record
                    data:
                        tapo_camera_id: camera.tapo_camera_c200_hd_stream
                        file_name: '{{ record_file_name }}'
                        time_duration: 15
                    # send record
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                        sequence:
                          - service: notify.alexus
                            data:
                                message: 'Відео обзор'
                                data:
                                    video:
                                      - file: '{{ record_file_name }}'
                                        caption: 'Відео: Living Room'
                    # restore privacy mode for tapo_camera
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ tapo_camera_privacy_mode == 'on' }}"
                          - condition: state
                            entity_id: switch.tapo_camera_c200_privacy
                            state: 'off'
                        sequence:
                          - service: switch.turn_on
                            entity_id: switch.tapo_camera_c200_privacy
            default:
              - service: notify.alexus
                data:
                    title: "{{'\U000026A0'}} ПОМИЛКА {{'\U0000203C'}}{{'\U0000203C'}}"
                    message: |
                        {{"\U0001F3A6"}} Камера недоступна {{'\U0000203C'}}
          - service: notify.alexus
            data:
                message: *camera_video_body
                data: 
                  inline_keyboard: *camera_video_keyb
          mode: single

        - alias: "Telegram: Camera Video Bedroom Menu"
          id: telegram_menu_camera_video_bedroom
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              command: '/camera_menu_video_bedroom'
          action:
          - variables:
                tapo_camera_privacy_mode: '{{ states("switch.tapo_camera_c200_privacy") }}'
                record_file_name: |
                    {{ "/config/files/camera/" + state_attr('camera.tapo_camera_c200_hd_stream', 'friendly_name') +  "/record_bedroom_" + now().strftime('%Y%m%d-%H%M%S') + ".mp4" }}
          - service: telegram_bot.delete_message
            data:
                message_id: 'last'
                chat_id: !secret telegram_user_1
          - choose:
              - conditions:
                  - condition: template
                    value_template: > 
                        {{ not states('camera.tapo_camera_c200_hd_stream') in ('unknown','unavailable') }}
                sequence:
                    # Disable privacy mode for tapo_camera
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: switch.tapo_camera_c200_privacy
                            state: 'on'
                        sequence:
                          - service: switch.turn_off
                            entity_id: switch.tapo_camera_c200_privacy
                          - delay: '00:00:04'
                    # Move tapo_camera to Bedroom preset
                  - service: select.select_option
                    target:
                        entity_id: select.tapo_camera_c200_move_to_preset
                    data: 
                        option: 'Bedroom'
                  - delay: '00:00:03'
                    # record short video
                  - service: script.tapo_camera_save_record
                    data:
                        tapo_camera_id: camera.tapo_camera_c200_hd_stream
                        file_name: '{{ record_file_name }}'
                        time_duration: 15
                    # send record
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                        sequence:
                          - service: notify.alexus
                            data:
                                message: 'Відео обзор'
                                data:
                                    video:
                                      - file: '{{ record_file_name }}'
                                        caption: 'Відео: Bedroom'
                    # restore privacy mode for tapo_camera
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ tapo_camera_privacy_mode == 'on' }}"
                          - condition: state
                            entity_id: switch.tapo_camera_c200_privacy
                            state: 'off'
                        sequence:
                          - service: switch.turn_on
                            entity_id: switch.tapo_camera_c200_privacy
            default:
              - service: notify.alexus
                data:
                    title: "{{'\U000026A0'}} ПОМИЛКА {{'\U0000203C'}}{{'\U0000203C'}}"
                    message: |
                        {{"\U0001F3A6"}} Камера недоступна {{'\U0000203C'}}
          - service: notify.alexus
            data:
                message: *camera_video_body
                data: 
                  inline_keyboard: *camera_video_keyb
          mode: single

        - alias: "Telegram: Camera Video Kitchen Menu"
          id: telegram_menu_camera_video_kitchen
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              command: '/camera_menu_video_kitchen'
          action:
          - variables:
                tapo_camera_privacy_mode: '{{ states("switch.tapo_camera_c200_privacy") }}'
                record_file_name: |
                    {{ "/config/files/camera/" + state_attr('camera.tapo_camera_c200_hd_stream', 'friendly_name') +  "/record_kitchen_" + now().strftime('%Y%m%d-%H%M%S') + ".mp4" }}
          - service: telegram_bot.delete_message
            data:
                message_id: 'last'
                chat_id: !secret telegram_user_1
          - choose:
              - conditions:
                  - condition: template
                    value_template: > 
                        {{ not states('camera.tapo_camera_c200_hd_stream') in ('unknown','unavailable') }}
                sequence:
                    # Disable privacy mode for tapo_camera
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: switch.tapo_camera_c200_privacy
                            state: 'on'
                        sequence:
                          - service: switch.turn_off
                            entity_id: switch.tapo_camera_c200_privacy
                          - delay: '00:00:04'
                    # Move tapo_camera to Kitchen preset
                  - service: select.select_option
                    target:
                        entity_id: select.tapo_camera_c200_move_to_preset
                    data: 
                        option: 'Kitchen'
                  - delay: '00:00:03'
                    # record short video
                  - service: script.tapo_camera_save_record
                    data:
                        tapo_camera_id: camera.tapo_camera_c200_hd_stream
                        file_name: '{{ record_file_name }}'
                        time_duration: 15
                    # send record
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                        sequence:
                          - service: notify.alexus
                            data:
                                message: 'Відео обзор'
                                data:
                                    video:
                                      - file: '{{ record_file_name }}'
                                        caption: 'Відео: Kitchen'
                    # restore privacy mode for tapo_camera
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ tapo_camera_privacy_mode == 'on' }}"
                          - condition: state
                            entity_id: switch.tapo_camera_c200_privacy
                            state: 'off'
                        sequence:
                          - service: switch.turn_on
                            entity_id: switch.tapo_camera_c200_privacy
            default:
              - service: notify.alexus
                data:
                    title: "{{'\U000026A0'}} ПОМИЛКА {{'\U0000203C'}}{{'\U0000203C'}}"
                    message: |
                        {{"\U0001F3A6"}} Камера недоступна {{'\U0000203C'}}
          - service: notify.alexus
            data:
                message: *camera_video_body
                data: 
                  inline_keyboard: *camera_video_keyb
          mode: single

        - alias: "Telegram: Camera Video Bathroom Menu"
          id: telegram_menu_camera_video_bathroom
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              command: '/camera_menu_video_bathroom'
          action:
          - variables:
                tapo_camera_privacy_mode: '{{ states("switch.tapo_camera_c200_privacy") }}'
                record_file_name: |
                    {{ "/config/files/camera/" + state_attr('camera.tapo_camera_c200_hd_stream', 'friendly_name') +  "/record_bathroom_" + now().strftime('%Y%m%d-%H%M%S') + ".mp4" }}
          - service: telegram_bot.delete_message
            data:
                message_id: 'last'
                chat_id: !secret telegram_user_1
          - choose:
              - conditions:
                  - condition: template
                    value_template: > 
                        {{ not states('camera.tapo_camera_c200_hd_stream') in ('unknown','unavailable') }}
                sequence:
                    # Disable privacy mode for tapo_camera
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: switch.tapo_camera_c200_privacy
                            state: 'on'
                        sequence:
                          - service: switch.turn_off
                            entity_id: switch.tapo_camera_c200_privacy
                          - delay: '00:00:04'
                    # Move tapo_camera to Bathroom preset
                  - service: select.select_option
                    target:
                        entity_id: select.tapo_camera_c200_move_to_preset
                    data: 
                        option: 'Bathroom'
                  - delay: '00:00:03'
                    # record short video
                  - service: script.tapo_camera_save_record
                    data:
                        tapo_camera_id: camera.tapo_camera_c200_hd_stream
                        file_name: '{{ record_file_name }}'
                        time_duration: 15
                    # send record
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                        sequence:
                          - service: notify.alexus
                            data:
                                message: 'Відео обзор'
                                data:
                                    video:
                                      - file: '{{ record_file_name }}'
                                        caption: 'Відео: Bathroom'
                    # restore privacy mode for tapo_camera
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ tapo_camera_privacy_mode == 'on' }}"
                          - condition: state
                            entity_id: switch.tapo_camera_c200_privacy
                            state: 'off'
                        sequence:
                          - service: switch.turn_on
                            entity_id: switch.tapo_camera_c200_privacy
            default:
              - service: notify.alexus
                data:
                    title: "{{'\U000026A0'}} ПОМИЛКА {{'\U0000203C'}}{{'\U0000203C'}}"
                    message: |
                        {{"\U0001F3A6"}} Камера недоступна {{'\U0000203C'}}
          - service: notify.alexus
            data:
                message: *camera_video_body
                data: 
                  inline_keyboard: *camera_video_keyb
          mode: single

        - alias: "Telegram: Set Alarm Menu"
          id: telegram_menu_set_alarm
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              command: '/set_alarm'
          action:
          - service: telegram_bot.delete_message
            data:
                message_id: 'last'
                chat_id: !secret telegram_user_1
          - service: notify.alexus
            data:
                title: '{{"\U0001F6A8"}} СИГНАЛИЗАЦІЯ{{"\U0000203C"}}'
                message: |
                    ➖➖➖➖➖➖➖
                    {{"\U0001F694"}} Увімкнути сигнализацію{{"\U00002049"}}
                data: 
                  inline_keyboard: 
                    - "{{'\U0001F534'}} Не Вдома:/set_alarm_away, {{'\U0001F7E1'}} Вдома:/set_alarm_home"
                    - "{{'\U0001F535'}} Ніч:/set_alarm_night, {{'\U0001F4D1'}} Меню:/menu"
          mode: single

        - alias: "Telegram: Set ALARM_NIGHT mode for Alarm"
          id: telegram_menu_set_alarm_night
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              command: '/set_alarm_night'
          action:
            - service: alarm_control_panel.alarm_arm_night
              entity_id: alarm_control_panel.home_alarm
          mode: single

        - alias: "Telegram: Set ALARM_HOME mode for Alarm"
          id: telegram_menu_set_alarm_home
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              command: '/set_alarm_home'
          action:
            - service: alarm_control_panel.alarm_arm_home
              entity_id: alarm_control_panel.home_alarm
          mode: single

        - alias: "Telegram: Set ALARM_AWAY mode for Alarm"
          id: telegram_menu_set_alarm_away
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              command: '/set_alarm_away'
          action:
            - service: alarm_control_panel.alarm_arm_away
              entity_id: alarm_control_panel.home_alarm
          mode: single

        - alias: "Telegram: Cancel Alarm"
          id: telegram_menu_cancel_alarm
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              command: '/cancel_alarm'
          action:
            - service: alarm_control_panel.alarm_disarm
              entity_id: alarm_control_panel.home_alarm
              data: 
                code: !secret alarm_panel_code
          mode: single

        - alias: "Telegram: Geolocation Menu"
          id: telegram_menu_geo
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              command: '/geo'
          action:
          - service: telegram_bot.delete_message
            data_template:
              message_id: last
              chat_id: !secret telegram_user_1
          - service: notify.alexus
            data:
              message: |
                  Геолокація {{"\U0001F5FA"}}:
                  ➖➖➖➖➖➖➖
                  Оберіть члена родини {{"\U0001F468\U0000200D\U0001F469\U0000200D\U0001F466\U0000200D\U0001F466"}}:
              data: 
                inline_keyboard: &keyb_geo
                  - "{{'\U0001F469'}} Інна:/inna, {{'\U0001F466'}} Вова:/vova, {{'\U0001F466'}} Іван:/ivan"
                  - "{{'\U0001F4D1'}} Меню:/menu"
          mode: single

        - alias: "Telegram: Geolocation for Ivan"
          id: telegram_menu_geo_ivan
          initial_state: true
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              data: '/ivan'
          action:
            - choose:
              - conditions:
                  - condition: template
                    value_template: >-
                        {{  not ( states.device_tracker.google_maps_105010208332419299900.attributes.latitude  is not defined or
                                  states.device_tracker.google_maps_105010208332419299900.attributes.longitude is not defined ) }}
                sequence:
                - service: notify.alexus
                  data:
                    message: |
                        Іван зараз знаходиться тут:
                        ➖➖➖➖➖➖➖
                - service: notify.alexus
                  data:
                    message: 'Місцезнаходження Івана'
                    data:
                      location:
                        latitude: '{{ state_attr("device_tracker.google_maps_116201395133676470264","latitude") }}'
                        longitude: '{{ state_attr("device_tracker.google_maps_116201395133676470264","longitude") }}'
                - service: notify.alexus
                  data:
                    message: |
                        Адреса {{"\U0001F3E1"}}: {{ state_attr("device_tracker.google_maps_116201395133676470264","address") }}
                        Батарея {{"\U0001F50B"}}: {{ state_attr("device_tracker.google_maps_116201395133676470264","battery_level") }}%{% if state_attr("device_tracker.google_maps_116201395133676470264","battery_charging") %} {{"\U0001F50C"}} Charging{%endif%}
                        Оновлено: {{ as_timestamp(state_attr("device_tracker.google_maps_116201395133676470264","last_seen")) | timestamp_custom("\U0001F4C5 %d.%m.%Y \U0001F551 %H:%M", default = 0) }}
                    data: 
                      inline_keyboard: *keyb_geo
              default:
              - service: notify.alexus
                data:
                    message: |
                        Геолокація {{"\U0001F5FA"}}:
                        ➖➖➖➖➖➖➖
                        {{"\U0000203C"}} Дані геолокації від Івана відсутні {{"\U0001F974"}}
          mode: single

        - alias: "Telegram: Geolocation for Inna"
          id: telegram_menu_geo_inna
          initial_state: true
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              data: '/inna'
          action:
            - choose:
              - conditions:
                  - condition: template
                    value_template: >-
                        {{  not ( states.device_tracker.google_maps_105010208332419299900.attributes.latitude  is not defined or
                                  states.device_tracker.google_maps_105010208332419299900.attributes.longitude is not defined ) }}
                sequence:
                - service: notify.alexus
                  data:
                    message: |
                        Інна зараз знаходиться тут:
                        ➖➖➖➖➖➖➖
                - service: notify.alexus
                  data:
                    message: 'Місцезнаходження Інни'
                    data:
                      location:
                        latitude: '{{ state_attr("device_tracker.google_maps_104258358112460913017","latitude") }}'
                        longitude: '{{ state_attr("device_tracker.google_maps_104258358112460913017","longitude") }}'
                - service: notify.alexus
                  data:
                    message: |
                        Адреса {{"\U0001F3E1"}}: {{ state_attr("device_tracker.google_maps_104258358112460913017","address") }}
                        Батарея {{"\U0001F50B"}}: {{ state_attr("device_tracker.google_maps_104258358112460913017","battery_level") }}%{% if state_attr("device_tracker.google_maps_104258358112460913017","battery_charging") %} {{"\U0001F50C"}} Charging{%endif%}
                        Оновлено: {{ as_timestamp(state_attr("device_tracker.google_maps_104258358112460913017","last_seen")) | timestamp_custom("\U0001F4C5 %d.%m.%Y \U0001F551 %H:%M", default = 0) }}
                    data: 
                      inline_keyboard: *keyb_geo
              default:
              - service: notify.alexus
                data:
                    message: |
                        Геолокація {{"\U0001F5FA"}}:
                        ➖➖➖➖➖➖➖
                        {{"\U0000203C"}} Дані геолокації від Інни відсутні {{"\U0001F974"}}
          mode: single

        - alias: "Telegram: Geolocation for Vova"
          id: telegram_menu_geo_vova
          initial_state: true
          trigger:
            platform: event
            event_type: telegram_callback
            event_data:
              data: '/vova'
          action:
            - choose:
              - conditions:
                  - condition: template
                    value_template: >-
                        {{  not ( states.device_tracker.google_maps_105010208332419299900.attributes.latitude  is not defined or
                                  states.device_tracker.google_maps_105010208332419299900.attributes.longitude is not defined ) }}
                sequence:
                  - service: notify.alexus
                    data:
                        message: |
                            Вова зараз знаходиться тут:
                            ➖➖➖➖➖➖➖
                  - service: notify.alexus
                    data:
                        message: 'Місцезнаходження Вови'
                        data:
                            location:
                                latitude: '{{ state_attr("device_tracker.google_maps_105010208332419299900","latitude") }}'
                                longitude: '{{ state_attr("device_tracker.google_maps_105010208332419299900","longitude") }}'
                  - service: notify.alexus
                    data:
                        message: |
                            Адреса {{"\U0001F3E1"}}: {{ state_attr("device_tracker.google_maps_105010208332419299900","address") }}
                            Батарея {{"\U0001F50B"}}: {{ state_attr("device_tracker.google_maps_105010208332419299900","battery_level") }}%{% if state_attr("device_tracker.google_maps_105010208332419299900","battery_charging") %} {{"\U0001F50C"}} Charging{%endif%}
                            Оновлено: {{ as_timestamp(state_attr("device_tracker.google_maps_105010208332419299900","last_seen")) | timestamp_custom("\U0001F4C5 %d.%m.%Y \U0001F551 %H:%M", default = 0) }}
                        data: 
                            inline_keyboard: *keyb_geo
              default:
              - service: notify.alexus
                data:
                    message: |
                        Геолокація {{"\U0001F5FA"}}:
                        ➖➖➖➖➖➖➖
                        {{"\U0000203C"}} Дані геолокації від Вови відсутні {{"\U0001F974"}}
          mode: single
