system_config:

    recorder:
        db_url: mysql://homeassistant:homeassistant@core-mariadb/homeassistant?charset=utf8mb4
        auto_purge: false
        commit_interval: 60
        include:
            entities:
              - sensor.exchange_rate_usd
              - sensor.processor_use
              - sensor.processor_temperature
              - sensor.memory_use_percent
              - sensor.memory_free
              - sensor.swap_use_percent
              - sensor.swap_free
              - sensor.disk_use_percent
              - sensor.disk_free
              - sensor.maria_db_size
              - sensor.load_15m
              - sensor.last_boot
              - sensor.last_boot_custom
              - sensor.online_custom
              - sensor.ups_battery_voltage
              - sensor.ups_battery_capacity
              - sensor.chassis_fan_speed
              - binary_sensor.ups_battery_low
              - binary_sensor.ups_fan_speed
              - binary_sensor.rpi_ac_power_status
              - binary_sensor.anyone_home
              - binary_sensor.internet_connection_ping
              - group.family
            entity_globs:
              - binary_sensor.*_battery_low
              - sensor.apple_macbook_*
              - sensor.*_battery
              - sensor.speedtest_*

    homeassistant:

        customize:
            sensor.ups_battery_voltage:
                friendly_name: 'Напряжение Батареи UPS'
            sensor.ups_battery_capacity:
                friendly_name: 'Уровень Заряда Батареи UPS'
            sensor.chassis_fan_speed:
                friendly_name: 'Chassis Fan Speed'
            sensor.last_boot_custom:
                friendly_name: 'System Last Boot'
            sensor.online_custom:
                friendly_name: 'Home Assistant Uptime'
            binary_sensor.anyone_home:
                friendly_name: 'Anyone Home'
            binary_sensor.internet_connection_ping:
                friendly_name: 'Интернет Соединение'
            binary_sensor.ups_battery_low:
                friendly_name: 'Состояние Батареи UPS'
            binary_sensor.ups_fan_speed:
                friendly_name: 'UPS Fan Speed'
            binary_sensor.rpi_ac_power_status:
                friendly_name: 'Источник Внешнего Питания'

    input_boolean:

        disable_zone_notifications:
            name: Disable Zone Notifications
            icon: mdi:map-marker-off

        disable_startup_notifications:
            name: Disable Startup Notifications
            icon: mdi:bell-off

        disable_ups_battery_status_notifications:
            name: Disable UPS Battery Status Notifications
            icon: mdi:battery-off-outline

        disable_home_away:
            name: Disable Home/Away Automations
            icon: mdi:home-off

        enable_christmas_automations:
            name: Enable Christmas Automations
            icon: mdi:pine-tree-box

        enable_manual_control_aqua_lights:
            name: Enable Manual Control of Aquarium Lights
            icon: mdi:fishbowl-outline

        enable_manual_control_ac:
            name: Enable Manual Control of A/C
            icon: mdi:air-conditioner

        enable_manual_control_heater:
            name: Enable Manual Control of Heaters
            icon: mdi:radiator

        enable_manual_control_lights:
            name: Enable Manual Control of Lights
            icon: mdi:lightbulb-group-outline

        enable_energy_counter_card:
            name: Enable Energy Counter Card
            icon: mdi:meter-electric

        enable_energy_daily_card:
            name: Enable Energy Daily Card
            icon: mdi:calendar-today

        enable_energy_weekly_card:
            name: Enable Energy Weekly Card
            icon: mdi:calendar-week

        enable_energy_monthly_card:
            name: Enable Energy Monthly Card
            icon: mdi:calendar-month


    scrape:

      - resource: https://touch.com.ua/item/noutbuk-apple-macbook-pro-14-m1-16gb-512gb-silver-2021/
        scan_interval: 21600
        sensor:
          - name: 'Apple Macbook Pro 14 M1 Pro price'
            unique_id: apple_macbook_pro_14_m1_pro_16_512_price
            select: '#elementTools > div > div.mainTool > div > div.new_price.\31  > a'
            unit_of_measurement: '₴'
            icon: mdi:laptop
            value_template: '{{ value.split("₴")[0] | replace(" ","") }}'

      - resource: https://touch.com.ua/item/apple-macbook-air-13-silver-late-2020-mgn93/
        scan_interval: 21600
        sensor:
          - name: 'Apple MacBook Air 13 Silver Late 2020 price'
            unique_id: apple_macbook_air_13_m1_8_256_price
            select: '#elementTools > div > div.mainTool > div > div.new_price.\31  > a'
            unit_of_measurement: '₴'
            icon: mdi:laptop
            value_template: '{{ value.split("₴")[0] | replace(" ","") }}'

      - resource: https://bankchart.com.ua/spravochniki/kursy_valyut_city/2
        scan_interval: 10800
        sensor:
          - name: 'Exchange Rate USD'
            unique_id: exchange_rate_usd
            select: '#branding-wrapper > section > div > div > div.table-currency > div:nth-child(3) > div:nth-child(7) > p'
            unit_of_measurement: '₴'
            icon: mdi:currency-usd
            value_template: '{{ value | replace (",",".") | float(0) }}'

    sensor:

      - platform: time_date
        display_options:
          - 'time'
          - 'date'
          - 'time_date'

      - platform: systemmonitor
        resources:
          - type: processor_use
          - type: processor_temperature
          - type: disk_use_percent
            arg: /
          - type: disk_free
            arg: /
          - type: memory_use_percent
          - type: memory_free
          - type: swap_use_percent
          - type: swap_free
          - type: load_15m
          - type: last_boot

      - platform: file
        name: file_battery_voltage
        scan_interval: '00:01:01'
        file_path: /config/files/ups_battery.json
        value_template: '{{ value_json.voltage | default(4.00) }}'

      - platform: file
        name: file_battery_capacity
        scan_interval: '00:00:59'
        file_path: /config/files/ups_battery.json
        value_template: '{{ value_json.capacity | default(100) }}'

      - platform: file
        name: file_chassis_fan_speed
        scan_interval: '00:00:05'
        file_path: /config/files/chassis_fan.json
        value_template: '{{ value_json.fan_speed | default(0) }}'

      - platform: file
        name: file_ups_fan_speed
        scan_interval: '00:00:05'
        file_path: /config/files/ups_fan.json
        value_template: '{{ value_json.fan_speed | default(0) }}'

      - platform: file
        name: file_ac_power_status
        scan_interval: '00:00:05'
        file_path: /config/files/ac_power.json
        value_template: '{{ value_json.status | default(2) }}'

    binary_sensor:

      - platform: ping
        host: 8.8.8.8
        name: internet_connection_ping
        count: 5
        scan_interval: 60

    group:

        family:
          - person.alexus
          - person.inna
          - person.ivan
          - person.vova

    template:

      - sensor:

          - name: ups_battery_voltage
            unique_id: sensor_ups_battery_voltage
            unit_of_measurement: 'V'
            state: '{{ states("sensor.file_battery_voltage") | float(0) }}'
            device_class: voltage

          - name: ups_battery_capacity
            unique_id: sensor_ups_battery_capacity
            unit_of_measurement: '%'
            state: >
                {% set capacity = states("sensor.file_battery_capacity") | int(0) %}
                {% if capacity > 100 %}
                   {% set capacity = 100 %}
                {% endif %}
                {{ capacity }}
            device_class: battery

          - name: chassis_fan_speed
            unique_id: sensor_chassis_fan_speed
            state: '{{ states("sensor.file_chassis_fan_speed") | int(0) }}'
            icon: >-
                {% if   (states.sensor.chassis_fan_speed.state | int(0) == 0) %}
                mdi:fan-off
                {% elif (states.sensor.chassis_fan_speed.state | int(0) >  0) and (states.sensor.chassis_fan_speed.state | int(0) <=  40) %}
                mdi:fan-speed-1
                {% elif (states.sensor.chassis_fan_speed.state | int(0) > 40) and (states.sensor.chassis_fan_speed.state | int(0) <=  75) %}
                mdi:fan-speed-2
                {% elif (states.sensor.chassis_fan_speed.state | int(0) > 75) and (states.sensor.chassis_fan_speed.state | int(0) <= 100) %}
                mdi:fan-speed-3
                {% else %}
                mdi:fan-alert
                {% endif %}
            unit_of_measurement: '%'

          - name: last_boot_custom
            unique_id: sensor_last_boot_custom
            icon: mdi:clock-start
            state: >
                {% set up_time =  as_timestamp(now()) - as_timestamp(states('sensor.last_boot')) %}
                {% if up_time == 0 %}
                    Just started...
                {% else %}
                    {% set minutes = (up_time // 60) | int %}
                    {% set hours = (minutes // 60) %}
                    {% set days = (hours // 24) %}
                    {% set weeks = (days // 7) %}
                    {% set minutes = (minutes % 60) %}
                    {% set hours =  (hours % 24) %}
                    {% set days = (days % 7) %}
                    {% macro phrase(value, name) %}
                        {%- set end = 's' if value > 1 else '' %}
                        {{- '{} {}{}'.format(value, name, end) if value | int > 0 else '' }}
                    {%- endmacro %}
                    {% set text = [ phrase(weeks, 'week'), phrase(days, 'day'), phrase(hours, 'hr'), phrase(minutes, 'min') ] | select('!=','') | list | join(', ') %}
                    {% set last_comma = text.rfind(',') %}
                    {% if last_comma != -1 %}
                        {% set text = text[:last_comma] + ' and' + text[last_comma + 1:] %}
                    {% endif %}
                    {{ text }}
                {% endif %}

          - name: online_custom
            unique_id: sensor_online_custom
            icon: mdi:clock-fast
            state: >
                {% set up_time =  as_timestamp(now()) - as_timestamp(states('sensor.online')) %}
                {% if up_time == 0 %}
                    Just started...
                {% else %}
                    {% set minutes = (up_time // 60) | int %}
                    {% set hours = (minutes // 60) %}
                    {% set days = (hours // 24) %}
                    {% set weeks = (days // 7) %}
                    {% set minutes = (minutes % 60) %}
                    {% set hours =  (hours % 24) %}
                    {% set days = (days % 7) %}
                    {% macro phrase(value, name) %}
                        {%- set end = 's' if value > 1 else '' %}
                        {{- '{} {}{}'.format(value, name, end) if value | int > 0 else '' }}
                    {%- endmacro %}
                    {% set text = [ phrase(weeks, 'week'), phrase(days, 'day'), phrase(hours, 'hr'), phrase(minutes, 'min') ] | select('!=','') | list | join(', ') %}
                    {% set last_comma = text.rfind(',') %}
                    {% if last_comma != -1 %}
                      {% set text = text[:last_comma] + ' and' + text[last_comma + 1:] %}
                    {% endif %}
                    {{ text }}
                {% endif %}

      - binary_sensor:

          - name: anyone_home
            unique_id: binary_sensor_anyone_home
            device_class: presence
            state: "{{ states.person | selectattr('state','eq','home') | list | count > 0 }}"

          - name: ups_battery_low
            unique_id: binary_sensor_ups_battery_low
            state: >-
                {% if (states("sensor.ups_battery_capacity") | int(0) < 25) or (states("sensor.ups_battery_voltage") | float(0) < 3.5) %}
                on
                {% else %}
                off
                {% endif %}
            icon: >-
                {% if is_state("binary_sensor.ups_battery_low", "on") %}
                  {% if (states("sensor.ups_battery_voltage") | float(0) > 4.22 ) %}
                  mdi:battery-charging-low
                  {% else %}
                  mdi:battery-low
                  {% endif %}
                {% elif (states("sensor.ups_battery_capacity") | int(0) >=25) and (states("sensor.ups_battery_capacity") | int(0) < 75) %}
                  {% if (states("sensor.ups_battery_voltage") | float(0) > 4.22 ) %}
                  mdi:battery-charging-medium
                  {% else %}
                  mdi:battery-medium
                  {% endif %}
                {% else %}
                  {% if (states("sensor.ups_battery_voltage") | float(0) > 4.22 ) %}
                  mdi:battery-charging-high
                  {% else %}
                  mdi:battery-high
                  {% endif %}
                {% endif %}
            device_class: battery

          - name: ups_fan_speed
            unique_id: binary_sensor_ups_fan_speed
            state: >-
                {% if is_state('sensor.file_ups_fan_speed','1') %}
                on
                {% else %}
                off
                {% endif %}
            icon: >-
                {% if is_state('binary_sensor.ups_fan_speed','on') %}
                mdi:fan-plus
                {% else %}
                mdi:fan-minus
                {% endif %}
            device_class: running

          - name: rpi_ac_power_status
            unique_id: binary_sensor_rpi_ac_power_status
            state: >- 
                {% if   states.sensor.file_ac_power_status.state  == "1" %}
                off
                {% elif states.sensor.file_ac_power_status.state  == "2" %}
                on
                {% else %}
                {{ none }} 
                {% endif %}
            device_class: plug

    automation:

      - alias: "System: Internet Connecton Status"
        id: system_internet_connection_status
        initial_state: true
        trigger:
          - platform: state
            entity_id: binary_sensor.internet_connection_ping
            not_from:
              - 'unknown'
              - 'unavailable'
        condition: []
        action:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.anyone_home
                    state: 'off'
                  - condition: state
                    entity_id: binary_sensor.internet_connection_ping
                    state: 'on'
                sequence:
                  - service: notify.alexus
                    data:
                        title: '{{"\U000026A0"}} ВНИМАНИЕ{{"\U0000203C"}}'
                        message: |
                            ➖➖➖➖➖➖➖➖➖➖➖➖
                            Интернет соединение: {{"\U0001F50C"}} {% if is_state("binary_sensor.internet_connection_ping", "on") %}Подключено{% elif is_state("binary_sensor.internet_connection_ping", "off") %}Отключено{% else %}Недоступно{% endif %}
                        data:
                            inline_keyboard: 
                              - "{{'\U00002139'}} Статус:/status, {{'\U0001F4D1'}} Меню:/menu"
          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.disable_voice_notifications
                    state: 'off'
                  - condition: state
                    entity_id: binary_sensor.anyone_home
                    state: 'on'
                  - condition: time
                    after:  '08:00:00'
                    before: '22:00:00' 
                sequence:
                  - service: script.sonos_say
                    data: 
                        sonos_entity: media_player.sonos_living_room
                        volume: 0.4
                        message: 'ВНИМАНИЕ!!! Интернет соединение: {% if is_state("binary_sensor.internet_connection_ping", "on") %}Подключено{% elif is_state("binary_sensor.internet_connection_ping", "off") %}Отключено{% else %}Недоступно{% endif %}!'
        mode: queued

      - alias: "System: Purge DB Everyday"
        id: system_purge_db_everyday
        initial_state: true
        trigger:
          - platform: time
            at: '01:00:00'
        action:
          - service: recorder.purge
            data:
                keep_days: 3
                repack: true
        mode: single

      - alias: "System: Turn OFF switches on Shutdown"
        id: system_shutdown_turn_off_switches
        description: 'Отключение устройств при отключении инстанса'
        trigger:
          - platform: homeassistant
            event: shutdown
        condition: []
        action:
          - service: homeassistant.turn_off
            target:
                entity_id:
                  - switch.bedroom_air_conditioner_socket
                #   - switch.bedroom_light_switch
                  - switch.bedroom_socket_heating
                #   - switch.living_room_aquarium_main_lighting
                #   - switch.living_room_aquarium_power_strip_l1 # airation
                #   - switch.living_room_aquarium_power_strip_l2 # filtration
                  - switch.living_room_aquarium_power_strip_l3 # main light
                  - switch.living_room_aquarium_power_strip_l4 # moon light
                  - switch.living_room_air_conditioner_socket
                  - switch.living_room_socket_heating
                #   - switch.living_room_light_switch
                  - switch.kitchen_socket_heating
                #   - light.hallway_rgb_bulb
        mode: single

      - alias: "System: Turn ON Aquarium automation on Startup if RPi Power is OK"
        id: system_startup_turn_on_aqua_automations_if_rpi_power_is_ok
        description: 'Включение аквариумной автоматизации при запуске HA если внешнее питание подключено'
        trigger:
          - platform: homeassistant
            event: start
        condition:
          - condition: state
            entity_id: binary_sensor.rpi_ac_power_status
            state: 'on'
          - condition: or
            conditions:
              - condition: state
                entity_id: automation.living_room_turn_on_main_light_by_schedule
                state: 'off'
              - condition: state
                entity_id: automation.living_room_turn_on_moonlight_by_schedule
                state: 'off'
        action:
          - service: automation.turn_on
            entity_id:
              - automation.living_room_turn_on_main_light_by_schedule
              - automation.living_room_turn_on_moonlight_by_schedule
          - service: switch.turn_on
            entity_id: switch.living_room_aquarium_main_lighting
          - delay: '00:00:03'
          - service: switch.turn_on
            entity_id: 
              - switch.living_room_aquarium_power_strip_l1 # airation
              - switch.living_room_aquarium_power_strip_l2 # filtration
        mode: single

      - alias: "System: Action on RPi Power Failure"
        id: system_rpi_ac_power_failure_action
        trigger:
          - platform: state
            entity_id: binary_sensor.rpi_ac_power_status
            from: 'on'
            to: 'off'
        condition: []
        action:
          - service: automation.turn_off
            entity_id:
              - automation.living_room_turn_on_main_light_by_schedule
              - automation.living_room_turn_on_moonlight_by_schedule
          - service: switch.turn_off
            entity_id: 
              - switch.living_room_aquarium_power_strip_l1 # airation
              - switch.living_room_aquarium_power_strip_l2 # filtration
              - switch.living_room_aquarium_power_strip_l3 # main light
              - switch.living_room_aquarium_power_strip_l4 # moon light
          - delay: '00:00:03'
          - service: switch.turn_off
            entity_id: switch.living_room_aquarium_main_lighting
        mode: single

      - alias: "System: Action on RPi Power Restore"
        id: system_rpi_ac_power_restore_action
        trigger:
          - platform: state
            entity_id: binary_sensor.rpi_ac_power_status
            from: 'off'
            to: 'on'
        condition: []
        action:
          - service: switch.turn_on
            entity_id: switch.living_room_aquarium_main_lighting
          - delay: '00:00:03'
          - service: switch.turn_on
            entity_id: 
              - switch.living_room_aquarium_power_strip_l1 # airation
              - switch.living_room_aquarium_power_strip_l2 # filtration
          - service: automation.turn_on
            entity_id:
              - automation.living_room_turn_on_main_light_by_schedule
              - automation.living_room_turn_on_moonlight_by_schedule
        mode: single

      - alias: "Interface: Switch Control Panels"
        id: system_interface_switch_control_panels
        description: 'Интерфейс - переключение Панелей Управления'
        trigger:
          - platform: state
            entity_id: input_boolean.enable_manual_control_heater
            to: 'on'
          - platform: state
            entity_id: input_boolean.enable_manual_control_ac
            to: 'on'
          - platform: state
            entity_id: input_boolean.enable_manual_control_lights
            to: 'on'
          - platform: state
            entity_id: input_boolean.enable_manual_control_aqua_lights
            to: 'on'
        condition: []
        action:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.entity_id == 'input_boolean.enable_manual_control_heater' }}"
                sequence:
                  - service: input_boolean.turn_off
                    entity_id: 
                        - input_boolean.enable_manual_control_lights
                        - input_boolean.enable_manual_control_aqua_lights
                        - input_boolean.enable_manual_control_ac
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.entity_id == 'input_boolean.enable_manual_control_ac' }}"
                sequence:
                  - service: input_boolean.turn_off
                    entity_id: 
                        - input_boolean.enable_manual_control_lights
                        - input_boolean.enable_manual_control_aqua_lights
                        - input_boolean.enable_manual_control_heater
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.entity_id == 'input_boolean.enable_manual_control_lights' }}"
                sequence:
                  - service: input_boolean.turn_off
                    entity_id: 
                        - input_boolean.enable_manual_control_heater
                        - input_boolean.enable_manual_control_aqua_lights
                        - input_boolean.enable_manual_control_ac
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.entity_id == 'input_boolean.enable_manual_control_aqua_lights' }}"
                sequence:
                  - service: input_boolean.turn_off
                    entity_id: 
                        - input_boolean.enable_manual_control_lights
                        - input_boolean.enable_manual_control_heater
                        - input_boolean.enable_manual_control_ac
        mode: single

      - alias: "System: Notification about finished Startup"
        id: system_startup_notification
        trigger:
          - platform: homeassistant
            event: start
        condition:
          - condition: state
            entity_id: input_boolean.disable_startup_notifications
            state: 'off'
          - condition: state
            entity_id: binary_sensor.internet_connection_ping
            state: 'on'
        action:
          - service: notify.alexus
            data:
                title: '{{"\U000026A0"}} ВНИМАНИЕ{{"\U0000203C"}}'
                message: |
                  ➖➖➖➖➖➖➖➖➖➖➖➖
                  {{'\U0001F199'}} Сервер Home Assistant был перезапущен{{"\U0000203C"}}
                data:
                    inline_keyboard:
                      - "{{'\U00002139'}} Статус:/status, {{'\U0001F4D1'}} Меню:/menu"
        mode: single

      - alias: "System: Notification about initiated Shutdown"
        id: system_shutdown_notification
        trigger:
          - platform: homeassistant
            event: shutdown
        condition:
          - condition: state
            entity_id: input_boolean.disable_startup_notifications
            state: 'off'
          - condition: state
            entity_id: binary_sensor.internet_connection_ping
            state: 'on'
        action:
          - service: notify.alexus
            data:
                title: '{{"\U000026A0"}} ВНИМАНИЕ{{"\U0000203C"}}'
                message: |
                  ➖➖➖➖➖➖➖➖➖➖➖➖
                  {{'\U00002139'}} Сервер Home Assistant выключается{{"\U0000203C"}}
        mode: single

      - alias: 'System: Notification about Home Assistant Updates'
        id: system_updates_notification
        description: "Send notification about Home Assistant Updates"
        trigger:
          - platform: state
            entity_id: update.home_assistant_core_update
            from: 'off'
            to: 'on'
          - platform: state
            entity_id: update.home_assistant_supervisor_update
            from: 'off'
            to: 'on'
          - platform: state
            entity_id: update.zigbee2mqtt_update
            from: 'off'
            to: 'on'
          - platform: state
            entity_id: update.mosquitto_broker_update
            from: 'off'
            to: 'on'
          - platform: state
            entity_id: update.mariadb_update
            from: 'off'
            to: 'on'
          - platform: state
            entity_id: update.home_assistant_google_drive_backup_update
            from: 'off'
            to: 'on'
          - platform: state
            entity_id: update.file_editor_update
            from: 'off'
            to: 'on'
        condition: 
          - condition: state
            entity_id: binary_sensor.internet_connection_ping
            state: 'on'
        action:
          - service: notify.alexus
            data:
                title: '{{"\U0001F199"}} {{ trigger.to_state.attributes.friendly_name }}{{"\U0000203C"}}'
                message:  |
                    ➖➖➖➖➖➖➖➖➖➖➖➖
                    Доступно {{ trigger.to_state.attributes.friendly_name }}
                      Установлено: {{ trigger.to_state.attributes.installed_version }}
                      Доступно: {{ trigger.to_state.attributes.latest_version }}
                data:
                    inline_keyboard:
                      - "{{'\U00002139'}} Статус:/status, {{'\U0001F4D1'}} Меню:/menu"
        mode: single

      - alias: "System: Notification about RPi Power Failure"
        id: system_rpi_ac_power_failure_notification
        trigger:
          - platform: state
            entity_id: binary_sensor.rpi_ac_power_status
            not_from:
              - "unknown"
              - "unavailable"
            not_to:
              - "unknown"
              - "unavailable"
        condition: []
        action:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.internet_connection_ping
                    state: 'on'
                sequence:
                  - service: notify.alexus
                    data:
                        title: '{{"\U000026A0"}} ВНИМАНИЕ{{"\U0000203C"}}'
                        message: |
                          ➖➖➖➖➖➖➖➖➖➖➖➖
                          Внешнее питание: {{"\U0001F50C"}} {% if is_state("binary_sensor.rpi_ac_power_status", "on") %}Подключено{% elif is_state("binary_sensor.rpi_ac_power_status", "off") %}Отключено{% else %}Недоступно{% endif %}
                          
                          {{"\U0001F50B"}} UPS Battery Status: ({% if is_state("binary_sensor.ups_battery_low","off") %}OK{%else%}Low{{"\U0000203C"}}{%endif%}) {{ states("sensor.ups_battery_capacity") }}% / {{ states("sensor.ups_battery_voltage") }}V
                        data:
                            inline_keyboard:
                              - "{{'\U00002139'}} Статус:/status, {{'\U0001F4D1'}} Меню:/menu"
          - condition: state
            entity_id: input_boolean.disable_voice_notifications
            state: 'off'
          - condition: state
            entity_id: binary_sensor.anyone_home
            state: 'on'
          - service: script.sonos_say
            data: 
                sonos_entity: media_player.sonos_living_room
                volume: 0.4
                message: 'ВНИМАНИЕ!!! Внешнее питание {% if is_state("binary_sensor.rpi_ac_power_status", "on") %}Подключено{% elif is_state("binary_sensor.rpi_ac_power_status", "off") %}Отключено{% else %}Недоступно{% endif %}!'
        mode: single

      - alias: "System: Notification about UPS Low Battery Level"
        id: system_ups_battery_low_level_notification
        trigger:
          - platform: state
            entity_id: binary_sensor.ups_battery_low
            from: 'off'
            to: 'on'
        condition: 
          - condition: state
            entity_id: binary_sensor.ups_battery_low
            state: 'on'
        action:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.internet_connection_ping
                    state: 'on'
                sequence:
                  - service: notify.alexus
                    data:
                        title: '{{"\U0001F50B"}} ВНИМАНИЕ{{"\U0000203C"}}'
                        message: |
                          ➖➖➖➖➖➖➖➖➖➖➖➖
                          Низкий уровень заряда батареи сервера Home Assistant: {{ states("sensor.ups_battery_capacity") }}% / {{ states("sensor.ups_battery_voltage") }}V {{"\U0000203C"}}
                          Внешнее питание: {{"\U0001F50C"}} {% if is_state("binary_sensor.rpi_ac_power_status", "on") %}Подключено{% else %}Отключено{% endif %}
                          
                          {{"\U0000203C"}}Через некоторое время сервер RPi будет остановлен{{"\U0000203C"}}
                        data:
                            inline_keyboard:
                              - "{{'\U00002139'}} Статус:/status, {{'\U0001F4D1'}} Меню:/menu"
          - condition: state
            entity_id: input_boolean.disable_voice_notifications
            state: 'off'
          - condition: state
            entity_id: binary_sensor.anyone_home
            state: 'on'
          - service: script.sonos_say
            data: 
                sonos_entity: media_player.sonos_living_room
                volume: 0.4
                message: |
                  ВНИМАНИЕ!!! 
                  Низкий уровень заряда батареи сервера Home Assistant: {{ states("sensor.ups_battery_capacity") }} процентов.
                  Внешнее питание {% if is_state("binary_sensor.rpi_ac_power_status", "on") %}подключено{% else %}отключено{% endif %}!
                  Через некоторое время сервер будет остановлен!
        mode: single

      - alias: "System: Notification about Full UPS Battery Level"
        id: system_ups_battery_full_level_notification
        trigger:
          - platform: numeric_state
            entity_id: sensor.ups_battery_capacity
            above: 99
        condition: 
          - condition: state
            entity_id: binary_sensor.ups_battery_low
            state: 'off'
          - condition: state
            entity_id: input_boolean.disable_ups_battery_status_notifications
            state: 'off'
          - condition: state
            entity_id: binary_sensor.internet_connection_ping
            state: 'on'
        action:
          - service: notify.alexus
            data:
                title: '{{"\U0001F50B"}} ВНИМАНИЕ{{"\U0000203C"}}'
                message: |
                  ➖➖➖➖➖➖➖➖➖➖➖➖
                  Батарея UPS полностью заряжена: {{ states("sensor.ups_battery_capacity") }}% / {{ states("sensor.ups_battery_voltage") }}V{{"\U0000203C"}}
                  Внешнее питание: {{"\U0001F50C"}} {% if is_state("binary_sensor.rpi_ac_power_status", "on") %}Подключено{% else %}Отключено{% endif %}
                data:
                    inline_keyboard:
                      - "{{'\U00002139'}} Статус:/status, {{'\U0001F4D1'}} Меню:/menu"
        mode: single

      - alias: "System: Notification about changed Zone for persones"
        id: system_zone_notifications
        trigger:
          # Дом
          - platform: zone
            entity_id: 
              - person.alexus
              - person.inna
              - person.ivan
              - person.vova
            zone: zone.home
            event: enter
          - platform: zone
            entity_id: 
              - person.alexus
              - person.inna
              - person.ivan
              - person.vova
            zone: zone.home
            event: leave
            # Школа
          - platform: zone
            entity_id: 
              - person.alexus
              - person.inna
              - person.ivan
              - person.vova
            zone: zone.school
            event: enter
          - platform: zone
            entity_id: 
              - person.alexus
              - person.inna
              - person.ivan
              - person.vova
            zone: zone.school
            event: leave
            # ISD
          - platform: zone
            entity_id: 
              - person.alexus
              - person.inna
              - person.ivan
              - person.vova
            zone: zone.isd
            event: enter
          - platform: zone
            entity_id: 
              - person.alexus
              - person.inna
              - person.ivan
              - person.vova
            zone: zone.isd
            event: leave
            # Университет
          - platform: zone
            entity_id: 
              - person.alexus
              - person.inna
              - person.ivan
              - person.vova
            zone: zone.university
            event: enter
          - platform: zone
            entity_id: 
              - person.alexus
              - person.inna
              - person.ivan
              - person.vova
            zone: zone.university
            event: leave
            # Караван
          - platform: zone
            entity_id: 
              - person.alexus
              - person.inna
              - person.ivan
              - person.vova
            zone: zone.karavan
            event: enter
          - platform: zone
            entity_id: 
              - person.alexus
              - person.inna
              - person.ivan
              - person.vova
            zone: zone.karavan
            event: leave
            # METRO
          - platform: zone
            entity_id: 
              - person.alexus
              - person.inna
              - person.ivan
              - person.vova
            zone: zone.metro
            event: enter
          - platform: zone
            entity_id: 
              - person.alexus
              - person.inna
              - person.ivan
              - person.vova
            zone: zone.metro
            event: leave
            # Эпицентр
          - platform: zone
            entity_id: 
              - person.alexus
              - person.inna
              - person.ivan
              - person.vova
            zone: zone.epicentr
            event: enter
          - platform: zone
            entity_id: 
              - person.alexus
              - person.inna
              - person.ivan
              - person.vova
            zone: zone.epicentr
            event: leave
          - platform: zone
            entity_id:
              - person.alexus
              - person.inna
              - person.ivan
              - person.vova
            zone: zone.novomoskovsk
            event: leave
          - platform: zone
            entity_id:
              - person.alexus
              - person.inna
              - person.ivan
              - person.vova
            zone: zone.novomoskovsk
            event: enter
        condition:
          - condition: state
            entity_id: input_boolean.disable_zone_notifications
            state: 'off'
          - condition: state
            entity_id: binary_sensor.internet_connection_ping
            state: 'on'
        action:
          - service: notify.alexus
            data:
                title: '{{"\U0001F4CC"}} Изменение расположения{{"\U0000203C"}}'
                message: |
                    ➖➖➖➖➖➖➖➖➖➖➖➖
                    {% if (trigger.event) == "leave" %}{{ states('sensor.time') }}: {{ trigger.to_state.name }} покинул(а) {{ trigger.zone.attributes.friendly_name }}!
                    {% else %}{{ states('sensor.time') }}: {{ trigger.to_state.name }} прибыл(а) в {{ trigger.zone.attributes.friendly_name }}!
                    {% endif %}
                data:
                    inline_keyboard:
                      - "{{'\U0001F5FA'}} Геолокация:/geo, {{'\U0001F4D1'}} Меню:/menu"
        mode: queued