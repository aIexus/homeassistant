home_alarm_settings:

    recorder:
        include:
            entities:
              - alarm_control_panel.home_alarm
              - binary_sensor.hallway_entrance_door_contact
              - binary_sensor.bedroom_lumi_sensor_motion_occupancy
              - binary_sensor.living_room_lumi_sensor_motion_occupancy
              - binary_sensor.motion_sensors
            entity_globs:
              - binary_sensor.*_smoke_detector_smoke
              - binary_sensor.*_water_leak_*_water_leak
              - binary_sensor.*_gas_detector_gas*
              - sensor.*_gas_detector_*


    homeassistant:

        customize:

            binary_sensor.home_doors:
                friendly_name: 'Двері у Квартирі'
            binary_sensor.hallway_entrance_door_contact:
                friendly_name: 'Вхідні Двері'
            binary_sensor.motion_sensors:
                friendly_name: 'Рух у Квартирі'
            binary_sensor.bedroom_lumi_sensor_motion_occupancy:
                friendly_name: 'Рух у Спальні'
            binary_sensor.living_room_lumi_sensor_motion_occupancy:
                friendly_name: 'Рух у Вітальні'
            binary_sensor.bathroom_water_leak_under_washing_machine_water_leak:
                friendly_name: 'Протікання води під Пральною Машиною'
            binary_sensor.bathroom_water_leak_under_the_bath_water_leak:
                friendly_name: 'Протікання води під Ванною'
            binary_sensor.kitchen_water_leak_sensor_water_leak:
                friendly_name: 'Протікання води на Кухні'
            binary_sensor.kitchen_gas_detector_gas:
                friendly_name: 'Газ на Кухні'
            binary_sensor.bedroom_smoke_detector_smoke:
                friendly_name: 'Дим у Спальні'
            binary_sensor.kitchen_smoke_detector_smoke:
                friendly_name: 'Дим на Кухні'
            binary_sensor.living_room_smoke_detector_smoke:
                friendly_name: 'Дим у Вітальні'

    input_boolean:

        disable_voice_notifications:
            name: Disable Voice Notifications
            icon: mdi:speaker-off
        
        disable_voltage_voice_alarms:
            name: Disable Voltage Voice Alarms
            icon: mdi:account-voice-off

    binary_sensor:

      - platform: group
        name: motion_sensors
        unique_id: binary_sensor_motion_sensors
        device_class: motion
        entities:
          - binary_sensor.bedroom_lumi_sensor_motion_occupancy
          - binary_sensor.living_room_lumi_sensor_motion_occupancy
          - binary_sensor.tapo_camera_c200_motion_alarm

      - platform: group
        name: home_doors
        unique_id: binary_sensor_home_doors
        device_class: door
        entities:
          - binary_sensor.living_room_loggia_door_contact
          - binary_sensor.hallway_entrance_door_contact

    template:

      - sensor:

          - name: gas_detect
            state: >
                {% set variable = namespace(value = {}) %}
                {% for entity in states.binary_sensor if is_state(entity.entity_id, 'on') and is_state_attr(entity.entity_id, 'device_class', 'gas') %}
                    {% set variable.value = dict(variable.value, **{entity.name: entity.state }) %}
                {% endfor %}
                {% if (variable.value | length) | int(0) > 0 %}
                    {{ variable.value | length }}
                {% else %}
                    0
                {% endif %}
            attributes:
                list_entities: >
                    {% set variable = namespace(value = {}) %}
                    {% for entity in states.binary_sensor if is_state(entity.entity_id, 'on') and is_state_attr(entity.entity_id, 'device_class', 'gas') %}
                        {% set variable.value = dict(variable.value, **{entity.name: entity.state }) %}
                    {% endfor %}
                    {{ variable.value |dictsort(false, 'value') }}

          - name: smoke_detect
            state: >
                {% set variable = namespace(value = {}) %}
                {% for entity in states.binary_sensor if is_state(entity.entity_id, 'on') and is_state_attr(entity.entity_id, 'device_class', 'smoke') %}
                    {% set variable.value = dict(variable.value, **{entity.name: entity.state }) %}
                {% endfor %}
                {% if (variable.value | length) | int(0) > 0 %}
                    {{ variable.value | length }}
                {% else %}
                    0
                {% endif %}
            attributes:
                list_entities: >
                    {% set variable = namespace(value = {}) %}
                    {% for entity in states.binary_sensor if is_state(entity.entity_id, 'on') and is_state_attr(entity.entity_id, 'device_class', 'smoke') %}
                        {% set variable.value = dict(variable.value, **{entity.name: entity.state }) %}
                    {% endfor %}
                    {{ variable.value |dictsort(false, 'value') }}

          - name: water_leak_detect
            state: >
                {% set variable = namespace(value = {}) %}
                {% for entity in states.binary_sensor if is_state(entity.entity_id, 'on') and is_state_attr(entity.entity_id, 'device_class', 'moisture') %}
                    {% set variable.value = dict(variable.value, **{entity.name: entity.state }) %}
                {% endfor %}
                {% if (variable.value | length) | int(0) > 0 %}
                    {{ variable.value | length }}
                {% else %}
                    0
                {% endif %}
            attributes:
                list_entities: >
                    {% set variable = namespace(value = {}) %}
                    {% for entity in states.binary_sensor if is_state(entity.entity_id, 'on') and is_state_attr(entity.entity_id, 'device_class', 'moisture') %}
                        {% set variable.value = dict(variable.value, **{entity.name: entity.state }) %}
                    {% endfor %}
                    {{ variable.value |dictsort(false, 'value') }}

    alarm_control_panel:

      - platform: manual
        name: Home Alarm
        code: !secret alarm_panel_code
        code_arm_required: false    # Don't need code to arm.
        disarm_after_trigger: false # Leave alarm armed after triggering.
        arming_time: 30             # Time to leave the house after arming.
        delay_time: 60              # Time to turn off after entering the house.
        trigger_time: 600           # How long the alarm goes off for.
        disarmed:
            trigger_time: 0           # Can't be triggered when disarmed.
        armed_home:
            arming_time: 0            # Arm instantly when at home.
            delay_time: 0             # Trigger instantly when at home.
        armed_night:
            arming_time: 0            # Arm instantly when night.
            delay_time: 0             # Trigger instantly when night.

    automation:

################# Security Alarm ###################

      - alias: "Alarm: Triggers in ARMED_AWAY mode"
        id: alarm_triggers_armed_away
        description: 'Спрацювання тригерів та дій коли статус охорони = ARMED_AWAY'
        trigger:
          - platform: state
            entity_id: binary_sensor.hallway_entrance_door_contact
            from: 'off'
            to: 'on'
          # - platform: state
          #   entity_id: binary_sensor.bedroom_lumi_sensor_motion_occupancy
          #   from: 'off'
          #   to: 'on'
          # - platform: state
          #   entity_id: binary_sensor.living_room_lumi_sensor_motion_occupancy
          #   from: 'off'
          #   to: 'on'
          # - platform: state
          #   entity_id: binary_sensor.tapo_camera_c200_motion_alarm
          #   from: 'off'
          #   to: 'on'
        condition:
          - condition: state
            entity_id: alarm_control_panel.home_alarm
            state: 'armed_away'
        action:
            # define variables
          - variables:
                trigger_area_name: "{{ area_name(trigger.entity_id) }}"
                snapshot_file_name: |
                    {{ "/config/files/camera/" + state_attr('camera.tapo_camera_c200_hd_stream', 'friendly_name') +  "/snapshot_armed_away_" + now().strftime('%Y%m%d-%H%M%S') + ".jpg" }}
                record_file_name: |
                    {{ "/config/files/camera/" + state_attr('camera.tapo_camera_c200_hd_stream', 'friendly_name') +  "/record_armed_away_" + now().strftime('%Y%m%d-%H%M%S') + ".mp4" }}
            # trigger alarm
          - service: alarm_control_panel.alarm_trigger
            entity_id: alarm_control_panel.home_alarm
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ not is_state('camera.tapo_camera_c200_hd_stream','unavailable') }}"
                sequence:
                    # camera positioning
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ trigger_area_name == 'Hallway' }}"
                        sequence:
                          - service: select.select_option
                            entity_id: select.tapo_camera_c200_move_to_preset
                            data: 
                                option: 'Entrance'
                      - conditions:
                          - condition: template
                            value_template: "{{ trigger_area_name == 'Bedroom' }}"
                        sequence:
                          - service: select.select_option
                            entity_id: select.tapo_camera_c200_move_to_preset
                            data: 
                                option: 'Bedroom'
                      - conditions:
                          - condition: template
                            value_template: "{{ trigger_area_name == 'Living Room' }}"
                        sequence:
                          - service: select.select_option
                            entity_id: select.tapo_camera_c200_move_to_preset
                            data: 
                                option: 'Living Room'
                      - conditions:
                          - condition: template
                            value_template: "{{ trigger_area_name == 'Kitchen' }}"
                        sequence:
                          - service: select.select_option
                            entity_id: select.tapo_camera_c200_move_to_preset
                            data: 
                                option: 'Kitchen'
                      - conditions:
                          - condition: template
                            value_template: "{{ trigger_area_name == 'Bathroom' }}"
                        sequence:
                          - service: select.select_option
                            entity_id: select.tapo_camera_c200_move_to_preset
                            data: 
                                option: 'Bathroom'
            # notification about alarm triggering
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.internet_connection_ping
                    state: 'on'
                sequence:
                      - service: notify.alexus
                        data:
                            title: '{{"\U000026A0"}} УВАГА{{"\U0000203C"}}'
                            message: |
                                ➖➖➖➖➖➖➖➖➖➖➖➖
                                {{"\U0001F6A8"}} Спрацювала сигналізація{{"\U0000203C"}}
                                Тригер: {{ trigger.to_state.attributes.friendly_name }}
                                Простір:  {{ trigger_area_name }} 
                                Дата/Час: {{ states('sensor.date') }}, {{ states('sensor.time') }}
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ not is_state('camera.tapo_camera_c200_hd_stream','unavailable') }}"
                sequence:
                    # take snapshot from detected area
                  - service: script.tapo_camera_save_snapshot
                    data:
                        tapo_camera_id: camera.tapo_camera_c200_hd_stream
                        file_name: '{{ snapshot_file_name }}'
                    # send snapshot to alexus mobile/telegram
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                        sequence:
                          - service: notify.alexus
                            data:
                                message: '{{ trigger_area_name }}'
                                data:
                                    photo:
                                      - file: '{{ snapshot_file_name }}'
                                        caption: 'Фото: {{ trigger_area_name }}'
                    # record short video from detected area
                  - service: script.tapo_camera_save_record
                    data:
                        tapo_camera_id: camera.tapo_camera_c200_hd_stream
                        file_name: '{{ record_file_name }}'
                        time_duration: 15
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                        sequence:
                          - service: notify.alexus
                            data:
                                message: '{{ trigger_area_name }}'
                                data:
                                    video:
                                      - file: '{{ record_file_name }}'
                                        caption: 'Відео: {{ trigger_area_name }}'
        mode: single

      - alias: "Alarm: Triggers in ARMED_NIGHT mode"
        id: alarm_triggers_armed_night
        description: 'Визначення тригерів та дій коли статус охорони = ARMED_NIGHT'
        trigger:
          - platform: state
            entity_id: binary_sensor.hallway_entrance_door_contact
            from: 'off'
            to: 'on'
        condition:
          - condition: state
            entity_id: alarm_control_panel.home_alarm
            state: 'armed_night'
        action:
          - service: alarm_control_panel.alarm_trigger
            entity_id: alarm_control_panel.home_alarm
        mode: single

      - alias: "Alarm: Triggers in ARMED_HOME mode"
        id: alarm_triggers_armed_home
        description: 'Визначення тригерів та дій коли статус охорони = ARMED_HOME'
        trigger:
          - platform: state
            entity_id: binary_sensor.hallway_entrance_door_contact
            from: 'off'
            to: 'on'
        condition:
          - condition: state
            entity_id: alarm_control_panel.home_alarm
            state: 'armed_home'
        action:
          - service: alarm_control_panel.alarm_trigger
            entity_id: alarm_control_panel.home_alarm
        mode: single

      - alias: "Alarm: Actions when ARMED_HOME"
        id: alarm_armed_home
        description: 'Увімкнення сигналізації, режим = ARMED_HOME'
        trigger:
          - platform: state
            entity_id: alarm_control_panel.home_alarm
            to: 'armed_home'
        action:
          - choose: # time condition
              - conditions:
                  - condition: time
                    after:  '08:00:00'
                    before: '22:00:00' 
                sequence:
                  - service: script.sonos_play_file
                    data: 
                        sonos_entity: media_player.sonos_living_room
                        volume: 0.7
                        music_file: '/media/local/alerts/Car_Arm.mp3'
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.internet_connection_ping
                    state: 'on'
                sequence:
                  - service: notify.alexus
                    data:
                        title: '{{"\U0001F6A8"}} СИГНАЛІЗАЦІЯ{{"\U0000203C"}}'
                        message: |
                            ➖➖➖➖➖➖➖
                            {{"\U0001F694"}} Увімкнення сигналізації{{"\U0000203C"}}
                            {{"\U0001F550"}} {{ states('sensor.date') }}, {{ states('sensor.time') }}
                        data: 
                            inline_keyboard: 
                              - "{{'\U0001F694'}} Зняти з охорони {{'\U0001F7E1'}} [ Вдома ]:/cancel_alarm"
                              - "{{'\U0001F6E1'}} Безпека:/security, {{'\U0001F4D1'}} Меню:/menu"
        mode: single

      - alias: "Alarm: Actions when ARMED_NIGHT"
        id: alarm_armed_night
        description: 'Увімкнення сигналізації, режим = ARMED_NIGHT'
        trigger:
          - platform: state
            entity_id: alarm_control_panel.home_alarm
            to: 'armed_night'
        action:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.internet_connection_ping
                    state: 'on'
                sequence:
                  - service: notify.alexus
                    data:
                        title: '{{"\U0001F6A8"}} СИГНАЛІЗАЦІЯ{{"\U0000203C"}}'
                        message: |
                            ➖➖➖➖➖➖➖
                            {{"\U0001F694"}} Увімкнення сигналізації{{"\U0000203C"}}
                            {{"\U0001F550"}} {{ states('sensor.date') }}, {{ states('sensor.time') }}
                        data: 
                            inline_keyboard: 
                              - "{{'\U0001F694'}} Зняти з охорони {{'\U0001F535'}} [ Ніч ]:/cancel_alarm"
                              - "{{'\U0001F6E1'}} Безпека:/security, {{'\U0001F4D1'}} Меню:/menu"
        mode: single

      - alias: "Alarm: Actions when ARMED_AWAY"
        id: alarm_armed_away
        description: 'Увімкнення сигналізації, режим = ARMED_AWAY'
        trigger:
          - platform: state
            entity_id: alarm_control_panel.home_alarm
            to: 'armed_away'
        action:
          - choose:
              - conditions:
                  - condition: time
                    after:  '08:00:00'
                    before: '22:00:00' 
                sequence:
                  - service: script.sonos_play_file
                    data: 
                        sonos_entity: media_player.sonos_living_room
                        volume: 0.7
                        music_file: '/media/local/alerts/Car_Arm.mp3'
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.internet_connection_ping
                    state: 'on'
                sequence:
                  - service: notify.alexus
                    data:
                        title: '{{"\U0001F6A8"}} СИГНАЛІЗАЦІЯ{{"\U0000203C"}}'
                        message: |
                            ➖➖➖➖➖➖➖
                            {{"\U0001F694"}} Увімкнення сигналізації{{"\U0000203C"}}
                            {{"\U0001F550"}} {{ states('sensor.date') }}, {{ states('sensor.time') }}
                        data: 
                            inline_keyboard: 
                              - "{{'\U0001F694'}} Зняти з охорони {{'\U0001F534'}} [ Не Вдома ]:/cancel_alarm"
                              - "{{'\U0001F6E1'}} Безпека:/security, {{'\U0001F4D1'}} Меню:/menu"
          - choose:
              - conditions:
                  - condition: state
                    entity_id: switch.tapo_camera_c200_privacy
                    state: 'on'
                sequence:
                  - service: switch.turn_off
                    entity_id: switch.tapo_camera_c200_privacy
                  - delay: '00:00:06'
                  - service: select.select_option
                    entity_id: select.tapo_camera_c200_move_to_preset
                    data: 
                        option: 'Entrance'
        mode: single

      - alias: "Alarm: Actions when DISARMED"
        id: alarm_disarmed
        description: 'Зняти з охорони = DISARMED'
        trigger:
          - platform: state
            entity_id: alarm_control_panel.home_alarm
            to: 'disarmed'
        action:
          - choose:
              - conditions:
                  - condition: time
                    after:  '08:00:00'
                    before: '22:00:00' 
                sequence:
                  - service: script.sonos_play_file
                    data: 
                        sonos_entity: media_player.sonos_living_room
                        volume: 0.7
                        music_file: '/media/local/alerts/Car_Alarm_Disarm.mp3'
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.internet_connection_ping
                    state: 'on'
                sequence:
                  - service: notify.alexus
                    data:
                        title: '{{"\U0001F6A8"}} СИГНАЛІЗАЦІЯ{{"\U0000203C"}}'
                        message: |
                            ➖➖➖➖➖➖➖
                            {{"\U0001F694"}} Сигналізація відключена{{"\U0000203C"}}{{"\U0000203C"}}
                            {{"\U0001F550"}} {{ states('sensor.date') }}, {{ states('sensor.time') }}
                        
                            Увімкнути сигналізацію{{"\U00002049"}}
                        data: 
                            inline_keyboard: 
                              - "{{'\U0001F534'}} Не Вдома:/set_alarm_away, {{'\U0001F7E1'}} Вдома:/set_alarm_home"
                              - "{{'\U0001F6E1'}} Безпека:/security, {{'\U0001F4D1'}} Меню:/menu"
          - choose:
              - conditions:
                  - condition: state
                    entity_id: switch.tapo_camera_c200_privacy
                    state: 'off'
                sequence:
                  - service: select.select_option
                    entity_id: select.tapo_camera_c200_move_to_preset
                    data: 
                        option: 'Parking'
                  - delay: '00:00:05'
                  - service: switch.turn_on
                    entity_id: switch.tapo_camera_c200_privacy
        mode: single

      - alias: "Alarm: Set ARMED_NIGHT if anyone home at 22:00"
        id: alarm_auto_armed_night_if_anyone_home
        description: 'Автоматична постановка на охорону після 22:00, якщо хтось удома = ARMED_NIGHT'
        trigger:
          - platform: time
            at: '22:00:00'
        condition:
          - condition: state
            entity_id: group.family
            state: home
          - or:
              - condition: state
                entity_id: alarm_control_panel.home_alarm
                state: disarmed
              - condition: state
                entity_id: alarm_control_panel.home_alarm
                state: armed_home
        action:
          - service: alarm_control_panel.alarm_arm_night
            entity_id: alarm_control_panel.home_alarm
        mode: single

      - alias: "Alarm: Set DISARMED if anyone home at 5:30"
        id: alarm_auto_disarm_if_anyone_home
        description: 'Автоматичне зняття з охорони після 05:30, якщо хтось удома: DISARMED'
        trigger:
          - platform: time
            at: '05:30:00'
        condition:
          - condition: state
            entity_id: group.family
            state: home
          - condition: state
            entity_id: alarm_control_panel.home_alarm
            state: 'armed_night'
        action:
          - service: alarm_control_panel.alarm_disarm
            data: 
                code: !secret alarm_panel_code
                entity_id: alarm_control_panel.home_alarm
        mode: single

      - alias: "Alarm: Actions on TRIGGERED"
        id: alarm_triggered
        description: 'Спрацювала сигналізація - увімкнення сирени'
        trigger:
          - platform: state
            entity_id: alarm_control_panel.home_alarm
            to: 'triggered'
        action:
          - variables:
                speaker_volume: 0.7
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.internet_connection_ping
                    state: 'on'
                sequence:
                - service: notify.alexus
                  data:
                    title: '{{"\U0001F6A8"}} СИГНАЛІЗАЦІЯ{{"\U0000203C"}}'
                    message: |
                        ➖➖➖➖➖➖➖
                        {{"\U0001F694"}} Виявлено проникнення{{"\U0000203C"}}{{"\U0000203C"}}
                        {{"\U0001F550"}} {{ states('sensor.date') }}, {{ states('sensor.time') }}
                    data: 
                        inline_keyboard: 
                          - "{{'\U0001F694'}} Зняти з охорони {{'\U0001F6A8'}} [ТРЕВОГА]:/cancel_alarm"
                          - "{{'\U0001F6E1'}} Безпека:/security, {{'\U0001F4D1'}} Меню:/menu"
          - repeat:
                until: 
                  - condition: state
                    entity_id: alarm_control_panel.home_alarm
                    state: 'disarmed'
                sequence:
                  - service: script.sonos_say
                    data: 
                        sonos_entity: media_player.sonos_living_room
                        service_name: tts.google_cloud_say
                        volume: '{{ speaker_volume }}'
                        duration: '00:00:10'
                        message: 'УВАГА! Спрацювала охоронна сигналізація! Надіслано сигнальне повідомлення до поліції!'
                        # message: 'ВНИМАНИЕ! Сработала охранная сигнализация! Отправлено сигнальное сообщение в полицию!'
                  - condition: state
                    entity_id: alarm_control_panel.home_alarm
                    state: 'triggered'
                  - service: script.sonos_play_file
                    data: 
                        sonos_entity: media_player.sonos_living_room
                        volume: '{{ speaker_volume }}'
                        music_file: '/media/local/alerts/Car_Alarm_02.mp3'
        mode: single

      - alias: "Alarm: ARMING"
        id: alarm_arming_signal
        description: 'Звук таймера перед активацією сигналізації'
        trigger:
          - platform: state
            entity_id: alarm_control_panel.home_alarm
            from: 'disarmed'
            to: 'arming'
        action:
          - repeat:
                until: 
                  - condition: or
                    conditions:
                      - condition: state
                        entity_id: alarm_control_panel.home_alarm
                        state: 'disarmed'
                      - condition: state
                        entity_id: alarm_control_panel.home_alarm
                        state: 'armed_away'
                sequence:
                  - service: script.sonos_play_file
                    data: 
                        sonos_entity: media_player.sonos_living_room
                        volume: 0.5
                        music_file: '/media/local/alerts/elearning-clock-ticking.mp3'
        mode: single

      - alias: "Alarm: PENDING after ARMED_AWAY"
        id: alarm_pending_armed_away
        description: 'Проникнення: попередження та очікування зняття з охорони'
        trigger:
          - platform: state
            entity_id: alarm_control_panel.home_alarm
            from: 'armed_away'
            to: 'pending'
        action:
          - variables:
                speaker_volume: 0.7
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.internet_connection_ping
                    state: 'on'
                sequence:
                  - service: notify.alexus
                    data:
                        title: '{{"\U0001F6A8"}} СИГНАЛИЗАЦІЯ{{"\U0000203C"}}'
                        message: |
                            ➖➖➖➖➖➖➖
                            Зніміть систему з охорони, інакше буде активовано сирену{{"\U0000203C"}}
                        data: 
                            inline_keyboard: 
                              - "{{'\U0001F694'}} Зняти з охорони {% if (trigger.from_state.state == 'armed_away') %}{{'\U0001F534'}} [ Не Вдома ]{% elif (trigger.from_state.state == 'armed_home') %}{{'\U0001F7E1'}} [ Вдома ]{% elif (trigger.from_state.state == 'armed_night') %}{{'\U0001F535'}} [ Ніч ]{% endif%}:/cancel_alarm"
                              - "{{'\U0001F6E1'}} Безпека:/security, {{'\U0001F4D1'}} Меню:/menu"
          - repeat:
                until: 
                  - condition: or
                    conditions:
                      - condition: state
                        entity_id: alarm_control_panel.home_alarm
                        state: 'disarmed'
                      - condition: state
                        entity_id: alarm_control_panel.home_alarm
                        state: 'triggered'
                sequence:
                  - service: script.sonos_say
                    data: 
                        sonos_entity: media_player.sonos_living_room
                        volume: '{{ speaker_volume }}'
                        service_name: tts.google_cloud_say
                        duration: '00:00:10'
                        message: 'ПОПЕРЕДЖЕННЯ! Зніміть систему з охорони, інакше буде активовано сирену!!'
                        # message: 'ПРЕДУПРЕЖДЕНИЕ! Снимите систему с охраны, иначе будет активирована сирена!!'
                  - condition: state
                    entity_id: alarm_control_panel.home_alarm
                    state: 'pending'
                  - service: script.sonos_play_file
                    data: 
                        sonos_entity: media_player.sonos_living_room
                        volume: '{{ speaker_volume }}'
                        music_file: '/media/local/alerts/Count_Down_01.mp3'
        mode: single

      - alias: "Alarm: Suggest ARMING when everybody leaves home"
        id: alarm_suggest_arming_when_everybody_leaves_home
        description: "Пропозиція поставити на охорону коли всі залишили будинок"
        trigger:
          - platform: state
            entity_id: group.family
            to: not_home
        condition:
          - or:
              - condition: state
                entity_id: alarm_control_panel.home_alarm
                state: disarmed
              - condition: state
                entity_id: alarm_control_panel.home_alarm
                state: armed_home
              - condition: state
                entity_id: alarm_control_panel.home_alarm
                state: armed_night
        action:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.internet_connection_ping
                    state: 'on'
                sequence:
                  - service: notify.alexus
                    data:
                        title: '{{"\U0001F6A8"}} СИГНАЛІЗАЦІЯ{{"\U0000203C"}}'
                        message: |
                            ➖➖➖➖➖➖➖
                            {{"\U0001F3E1"}} Нікого немає вдома{{"\U0000203C"}}
                            {{"\U0001F550"}} {{ states('sensor.date') }}, {{ states('sensor.time') }}

                            {{"\U0001F694"}} Поточний стан: {% if (trigger.from_state.state == 'disarmed') %}{{'\U0001F7E2'}} [ Вимкнено ]{% elif (trigger.from_state.state == 'armed_home') %}{{'\U0001F7E1'}} [ Вдома ]{% elif (trigger.from_state.state == 'armed_night') %}{{'\U0001F535'}} [ Ніч ]{% endif%}

                            Бажаєте змінити режим сигналізації{{"\U00002049"}}
                        data: 
                            inline_keyboard: 
                              - "{{'\U0001F534'}} Охорона [ Не Вдома ]:/set_alarm_away"
                              - "{{'\U0001F6E1'}} Безпека:/security, {{'\U0001F4D1'}} Меню:/menu"
        mode: single

      - alias: "Alarm: ARMING by Smart Button"
        id: alarm_arming_by_smart_button
        description: 'Увімкнення охорони: не вдома – один клік, вдома – довге натискання'
        trigger:
          - platform: state
            entity_id: sensor.tuya_smart_button_action
            attribute: action
            not_to: double
        condition:
          - condition: state
            entity_id: alarm_control_panel.home_alarm
            state: disarmed
        action:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.to_state.attributes.action == 'single' }}"
                sequence:
                  - service: alarm_control_panel.alarm_arm_away
                    entity_id: alarm_control_panel.home_alarm
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.to_state.attributes.action == 'hold' }}"
                sequence:
                  - service: alarm_control_panel.alarm_arm_home
                    entity_id: alarm_control_panel.home_alarm
        mode: single

      - alias: "Alarm: DISARMING by Smart Button"
        id: alarm_disarming_by_smart_button
        description: 'Знімання з охорони подвійним натисканням смарт кнопки або вимикача'
        trigger: 
          - platform: state
            entity_id: sensor.hallway_rgb_bulb_switch_action
            attribute: action
            to: double 
          - platform: state
            entity_id: sensor.tuya_smart_button_action
            attribute: action
            to: double 
        condition:
          - condition: not
            conditions:
              - condition: state
                entity_id: alarm_control_panel.home_alarm
                state: disarmed
        action:
          - service: alarm_control_panel.alarm_disarm
            entity_id: alarm_control_panel.home_alarm
            data: 
                code: !secret alarm_panel_code
        mode: single

################# Emergency Sensors ###################

      - alias: "Alarm: Exceeding the Electricity Consumption Limit"
        id: alarm_exceeding_electricity_consumption_limit
        description: 'Повідомлення про перевищення ліміту споживання електроенергії'
        trigger:
          - platform: state
            entity_id: binary_sensor.exceed_electricity_consumption_limit
            from: 'off'
            to: 'on'
            for:
                seconds: 30
        condition: []
        action:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.internet_connection_ping
                    state: 'on'
                sequence:
                  - service: input_button.press
                    target:
                        entity_id: input_button.telemetry_reload
                  - delay:
                        milliseconds: 500
                  - service: notify.alexus
                    data:
                        title: '{{"\U000026A0"}} УВАГА{{"\U0000203C"}}'
                        message:  |
                            ➖➖➖➖➖➖➖
                            Зафіксовано *перевищення ліміту* споживання електроенергії на *{{ states("sensor.tuya_clamp_meter_power") | float(0) | round(0) - states("input_number.electricity_consumption_limit") | int(0) }} Вт.*!
                            *Поточне споживання*: {{"\U0001F4C8"}} {{ states("sensor.tuya_clamp_meter_power") | float(0) | round(0) }} Вт.
                            *Ліміт*: {{"\U0001F6A7"}} {{ states("input_number.electricity_consumption_limit") | int(0) }} Вт.

                            {% if (states('sensor.all_switch_on_10') | int) > 0 %}{{"\U000026A1"}} *Споживання більше 10W:* {% else %}*Споживання на всіх реле менше 10W* {% endif %}
                            * *
                            *{% for entity_name, entity_state in state_attr('sensor.all_switch_on_10', 'list_entities')-%} - {{ entity_name }} {{ '-' }} {{ entity_state }} {{ 'W' }} {{ '\n' -}} {% endfor %}*
                        data: 
                            inline_keyboard: 
                              - "{{'\U00002328'}} Телеметрія:/telemetry, {{'\U0001F4D1'}} Меню:/menu"
          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.disable_voice_notifications
                    state: 'off'
                  - condition: state
                    entity_id: binary_sensor.anyone_home
                    state: 'on'
                  - condition: time
                    after:  '08:00:00'
                    before: '22:00:00' 
                sequence:
                  - service: script.sonos_say
                    data: 
                        sonos_entity: media_player.sonos_living_room
                        service_name: tts.google_cloud_say
                        volume: '0.5'
                        duration: '00:00:10'
                        message: 'Зафіксовано перевищення ліміту споживання електроенергії на {{ states("sensor.tuya_clamp_meter_power") | float(0) | round(0) - states("input_number.electricity_consumption_limit") | int(0) }} ватт!'
                        # message: 'Зафиксировано превышение лимита потребления электроэнергии на {{ states("sensor.tuya_clamp_meter_power") | float(0) | round(0) - states("input_number.electricity_consumption_limit") | int(0) }} ватт!'
        mode: single

      - alias: "Alarm: Warning about Low/High Voltage"
        id: alarm_warning_about_low_high_voltage
        description: 'Повідомлення про знижену/підвищену напругу в мережі'
        trigger:
          - platform: numeric_state
            entity_id: sensor.tuya_clamp_meter_voltage
            below: 198
            for: 
                minutes: 2
          - platform: numeric_state
            entity_id: sensor.tuya_clamp_meter_voltage
            above: 242
            for: 
                minutes: 2
        condition: []
        action:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.internet_connection_ping
                    state: 'on'
                sequence:
                  - service: notify.alexus
                    data:
                        title: '{{"\U000026A0"}} УВАГА{{"\U0000203C"}}'
                        message:  |
                            ➖➖➖➖➖➖➖
                            Зафіксовано {% if (trigger.to_state.state | int < 198) %}заниження{% elif (trigger.to_state.state | int > 242) %}стрибок{% endif %} напруги: {{ trigger.to_state.state | int }} V{{"\U0000203C"}}

                            Рекомендується відключити чутливі електроприлади від мережі до стабілізації напруги!
                        data: 
                            inline_keyboard: 
                              - "{{'\U00002328'}} Телеметрія:/telemetry, {{'\U0001F4D1'}} Меню:/menu"
          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.disable_voltage_voice_alarms
                    state: 'off'
                  - condition: state
                    entity_id: binary_sensor.anyone_home
                    state: 'on'
                  - condition: time
                    after:  '08:00:00'
                    before: '22:00:00' 
                sequence:
                  - service: script.sonos_say
                    data: 
                        sonos_entity: media_player.sonos_living_room
                        service_name: tts.google_cloud_say
                        volume: 0.5
                        duration: '00:00:10'
                        message: 'УВАГА!!! Зафіксовано {% if (trigger.to_state.state | int < 198) %}заниження{% elif (trigger.to_state.state | int > 242) %}стрибок{% endif %} напруги в мережі: {{ trigger.to_state.state | int }} вольт!' 
                        # Рекомендується відключити чутливі електроприлади від мережі до стабілізації напруги!'
                        # message: 'ВНИМАНИЕ!!! Зафиксирован скачок напряжения в сети: {{ trigger.to_state.state | int }} вольт! 
                        # Рекомендуется отключить чувствительные электроприборы от сети до стабилизации напряжения!'
        mode: single

      - alias: "Alarm: Smoke Detected"
        id: alarm_smoke_detected
        description: 'Повідомлення про виявлення диму та виведення списку сенсорів'
        trigger:
          - platform: template
            value_template: "{{ (states('sensor.smoke_detect')|int(0)) > 0 }}"
          - platform: template
            value_template: "{{ (states('sensor.smoke_detect')|int(0)) == 0 }}"
        condition: []
        action:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ (states('sensor.smoke_detect')|int(0)) > 0 }}"
                sequence:
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                        sequence:
                          - service: notify.alexus
                            data:
                                title: '{{"\U000026A0"}} УВАГА{{"\U0000203C"}}'
                                message: |
                                    ➖➖➖➖➖➖➖
                                    {{"\U0001F525"}} Виявлено дим{{"\U0000203C"}}

                                    *{% for entity_name, entity_state in state_attr('sensor.smoke_detect', 'list_entities')-%} - {{ entity_name }}{{ '\n' -}} {% endfor %}*
                                data: 
                                    inline_keyboard: 
                                      - "{{'\U0001F6E1'}} Безпека:/security, {{'\U0001F4D1'}} Меню:/menu"
                  - condition: state
                    entity_id: input_boolean.disable_voice_notifications
                    state: 'off'
                  - condition: state
                    entity_id: binary_sensor.anyone_home
                    state: 'on'
                  - service: script.sonos_say
                    data: 
                        sonos_entity: media_player.sonos_living_room
                        service_name: tts.google_cloud_say
                        volume: 0.4
                        duration: '00:00:10'
                        message: "УВАГА!!! Виявлено {% for entity_name, entity_state in state_attr('sensor.smoke_detect', 'list_entities')-%} {{ entity_name }}{{ '\n' -}} {% endfor %}"
                        # message: "ВНИМАНИЕ!!! Обнаружен {% for entity_name, entity_state in state_attr('sensor.smoke_detect', 'list_entities')-%} {{ entity_name }}{{ '\n' -}} {% endfor %}"
              - conditions:
                  - condition: template
                    value_template: "{{ (states('sensor.smoke_detect')|int(0)) == 0 }}"
                sequence:
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                        sequence:
                          - service: notify.alexus
                            data:
                                title: '{{"\U000026A0"}} УВАГА{{"\U0000203C"}}'
                                message: |
                                    ➖➖➖➖➖➖➖
                                    {{"\U0001F44C"}} Джерело диму усунуто{{"\U0000203C"}}
                                data: 
                                    inline_keyboard: 
                                      - "{{'\U0001F6E1'}} Безпека:/security, {{'\U0001F4D1'}} Меню:/menu"
                  - condition: state
                    entity_id: input_boolean.disable_voice_notifications
                    state: 'off'
                  - condition: state
                    entity_id: binary_sensor.anyone_home
                    state: 'on'
                  - service: script.sonos_say
                    data: 
                        sonos_entity: media_player.sonos_living_room
                        service_name: tts.google_cloud_say
                        volume: 0.4
                        duration: '00:00:05'
                        message: "Все гаразд, джерело диму усунуто!"
                        # message: "Все в порядке, источник дыма устранен!"
        mode: single

      - alias: "Alarm: Water Leakage Detected"
        id: alarm_water_leakage_detected
        description: 'Повідомлення про протікання води та виведення списку сенсорів'
        trigger:
          - platform: template
            value_template: "{{ (states('sensor.water_leak_detect')|int(0)) > 0 }}"
          - platform: template
            value_template: "{{ (states('sensor.water_leak_detect')|int(0)) == 0 }}"
        condition: []
        action:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ (states('sensor.water_leak_detect')|int(0)) > 0 }}"
                sequence:
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                        sequence:
                          - service: notify.alexus
                            data:
                                title: '{{"\U000026A0"}} УВАГА{{"\U0000203C"}}'
                                message: |
                                    ➖➖➖➖➖➖➖
                                    {{"\U0001F4A7"}} Виявлено протікання води{{"\U0000203C"}}

                                    *{% for entity_name, entity_state in state_attr('sensor.water_leak_detect', 'list_entities')-%} - {{ entity_name }}{{ '\n' -}} {% endfor %}*
                                data: 
                                    inline_keyboard: 
                                      - "{{'\U0001F6E1'}} Безпека:/security, {{'\U0001F4D1'}} Меню:/menu"
                  - condition: state
                    entity_id: input_boolean.disable_voice_notifications
                    state: 'off'
                  - condition: state
                    entity_id: binary_sensor.anyone_home
                    state: 'on'
                  - service: script.sonos_say
                    data: 
                        sonos_entity: media_player.sonos_living_room
                        service_name: tts.google_cloud_say
                        volume: 0.4
                        duration: '00:00:06'
                        message: "УВАГА!!! Виявлено {% for entity_name, entity_state in state_attr('sensor.water_leak_detect', 'list_entities')-%} {{ entity_name }}{{ '\n' -}} {% endfor %}"
                        # message: "ВНИМАНИЕ!!! Обнаружена {% for entity_name, entity_state in state_attr('sensor.water_leak_detect', 'list_entities')-%} {{ entity_name }}{{ '\n' -}} {% endfor %}"
              - conditions:
                  - condition: template
                    value_template: "{{ (states('sensor.water_leak_detect')|int(0)) == 0 }}"
                sequence:
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                        sequence:
                          - service: notify.alexus
                            data:
                                title: '{{"\U000026A0"}} УВАГА{{"\U0000203C"}}'
                                message: |
                                    ➖➖➖➖➖➖➖
                                    {{"\U0001F44C"}} Протікання води усунуто{{"\U0000203C"}}
                                data: 
                                    inline_keyboard: 
                                      - "{{'\U0001F6E1'}} Безпека:/security, {{'\U0001F4D1'}} Меню:/menu"
                  - condition: state
                    entity_id: input_boolean.disable_voice_notifications
                    state: 'off'
                  - condition: state
                    entity_id: binary_sensor.anyone_home
                    state: 'on'
                  - service: script.sonos_say
                    data: 
                        sonos_entity: media_player.sonos_living_room
                        service_name: tts.google_cloud_say
                        volume: 0.4
                        duration: '00:00:04'
                        message: "Все добре, протікання води усунуто"
                        # message: "Все в порядке, протечка устранена"
        mode: single

      - alias: "Alarm: Gas Detection in Kitchen"
        id: alarm_gas_detection_in_kitchen
        description: 'Повідомлення про виявлення витоку газу на кухні'
        trigger:
          - platform: state
            entity_id: binary_sensor.kitchen_gas_detector_gas
            to: 'on'
        condition: []
        action:
          - variables:
                tapo_camera_privacy_mode: '{{ states("switch.tapo_camera_c200_privacy") }}'
                snapshot_file_name: |
                    {{ "/config/files/camera/" + state_attr('camera.tapo_camera_c200_hd_stream', 'friendly_name') +  "/snapshot_gas_" + now().strftime('%Y%m%d-%H%M%S') + ".jpg" }}
                record_file_name: |
                    {{ "/config/files/camera/" + state_attr('camera.tapo_camera_c200_hd_stream', 'friendly_name') +  "/record_gas_" + now().strftime('%Y%m%d-%H%M%S') + ".mp4" }}
            # Voice notification
          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.disable_voice_notifications
                    state: 'off'
                  - condition: state
                    entity_id: binary_sensor.anyone_home
                    state: 'on'
                sequence:
                  - service: script.turn_on
                    target:
                        entity_id: script.sonos_say
                    data: 
                        variables:
                            sonos_entity: media_player.sonos_living_room
                            service_name: tts.google_cloud_say
                            volume: 0.5
                            duration: '00:00:05'
                            message: 'УВАГА!!! Виявлено витік газу на кухні!'
                            # message: 'ВНИМАНИЕ!!! Обнаружена утечка газа на кухне!'
            # Notify alexus
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.internet_connection_ping
                    state: 'on'
                sequence:
                    # Send warning message
                  - service: notify.alexus
                    data:
                        title: '{{"\U000026A0"}} УВАГА{{"\U0000203C"}}'
                        message: |
                            ➖➖➖➖➖➖➖
                            {{"\U0001F525"}} Виявлено витік газу на кухні{{"\U0000203C"}}
                        data: 
                            inline_keyboard: 
                              - "{{'\U0001F6E1'}} Безпека:/security, {{'\U0001F4D1'}} Меню:/menu"
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ not is_state('camera.tapo_camera_c200_hd_stream','unavailable') }}"
                sequence:
                    # Disable privacy mode for tapo_camera
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: switch.tapo_camera_c200_privacy
                            state: 'on'
                        sequence:
                          - service: switch.turn_off
                            entity_id: switch.tapo_camera_c200_privacy
                          - delay: '00:00:04'
                    # Move tapo_camera to Kitchen preset
                  - service: select.select_option
                    entity_id: select.tapo_camera_c200_move_to_preset
                    data: 
                        option: 'Kitchen'
                    # take snapshot from Kitchen area
                  - delay: '00:00:04'
                  - service: script.tapo_camera_save_snapshot
                    data:
                        tapo_camera_id: camera.tapo_camera_c200_hd_stream
                        file_name: '{{ snapshot_file_name }}'
                    # send snapshot
                  - service: notify.alexus
                    data:
                        message: 'Kitchen'
                        data:
                            photo:
                              - file: '{{ snapshot_file_name }}'
                                caption: 'Фото: Kitchen'
                    # record short video from Kitchen area
                  - service: script.tapo_camera_save_record
                    data:
                        tapo_camera_id: camera.tapo_camera_c200_hd_stream
                        file_name: '{{ record_file_name }}'
                        time_duration: 15
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                        sequence:
                          - service: notify.alexus
                            data:
                                message: 'Kitchen'
                                data:
                                    video:
                                      - file: '{{ record_file_name }}'
                                        caption: 'Відео: Kitchen'
                    # restore privacy mode for tapo_camera
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ tapo_camera_privacy_mode == 'on' }}"
                          - condition: state
                            entity_id: switch.tapo_camera_c200_privacy
                            state: 'off'
                        sequence:
                          - service: switch.turn_on
                            entity_id: switch.tapo_camera_c200_privacy
        mode: single

      - alias: "Alarm: Entrance Door Opened for more than 3 minutes"
        id: alarm_entrance_door_opened_for_3_minutes
        description: 'Попередження про незачинені вхідні двері протягом 3 хвилин'
        trigger:
          - platform: state
            entity_id: binary_sensor.hallway_entrance_door_contact
            to: 'on'
            for:
                minutes: 3
        condition: []
        action:
          - variables:
                tapo_camera_privacy_mode: '{{ states("switch.tapo_camera_c200_privacy") }}'
                snapshot_file_name: |
                    {{ "/config/files/camera/" + state_attr('camera.tapo_camera_c200_hd_stream', 'friendly_name') +  "/snapshot_entrance_door_" + now().strftime('%Y%m%d-%H%M%S') + ".jpg" }}
                record_file_name: |
                    {{ "/config/files/camera/" + state_attr('camera.tapo_camera_c200_hd_stream', 'friendly_name') +  "/record_entrance_door_" + now().strftime('%Y%m%d-%H%M%S') + ".mp4" }}
            # Voice notification
          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.disable_voice_notifications
                    state: 'off'
                  - condition: state
                    entity_id: binary_sensor.anyone_home
                    state: 'on'
                sequence:
                  - service: script.turn_on
                    target:
                        entity_id: script.sonos_say
                    data:
                        variables:
                            sonos_entity: media_player.sonos_living_room
                            service_name: tts.google_cloud_say
                            volume: 0.4
                            duration: '00:00:05'
                            message: 'УВАГА!!! Вхідні двері відчинені більше ніж три хвилини!'
                            # message: 'ВНИМАНИЕ!!! Входная дверь открыта более трёх минут!'
            # Notify alexus
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.internet_connection_ping
                    state: 'on'
                sequence:
                    # Send warning message
                  - service: notify.alexus
                    data:
                        title: '{{"\U000026A0"}} УВАГА{{"\U0000203C"}}'
                        message: |
                            ➖➖➖➖➖➖➖
                            Вхідні двері відчинені більше ніж три хвилини{{"\U0000203C"}}
                        data: 
                            inline_keyboard: 
                              - "{{'\U0001F6E1'}} Безпека:/security, {{'\U0001F4D1'}} Меню:/menu"
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ not is_state('camera.tapo_camera_c200_hd_stream','unavailable') }}"
                sequence:
                    # Disable privacy mode for tapo_camera
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: switch.tapo_camera_c200_privacy
                            state: 'on'
                        sequence:
                          - service: switch.turn_off
                            entity_id: switch.tapo_camera_c200_privacy
                          - delay: '00:00:04'
                    # Move tapo_camera to Entrance preset
                  - service: select.select_option
                    target:
                        entity_id: select.tapo_camera_c200_move_to_preset
                    data: 
                        option: 'Entrance'
                  - delay: '00:00:04'
                    # take snapshot from Entrance area
                  - service: script.tapo_camera_save_snapshot
                    data:
                        tapo_camera_id: camera.tapo_camera_c200_hd_stream
                        file_name: '{{ snapshot_file_name }}'
                    # send snapshot
                  - service: notify.alexus
                    data:
                        message: 'Entrance'
                        data:
                            photo:
                              - file: '{{ snapshot_file_name }}'
                                caption: 'Фото: Entrance'
                    # record short video from Entrance area
                  - service: script.tapo_camera_save_record
                    data:
                        tapo_camera_id: camera.tapo_camera_c200_hd_stream
                        file_name: '{{ record_file_name }}'
                        time_duration: 15
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                        sequence:
                          - service: notify.alexus
                            data:
                                message: 'Entrance'
                                data:
                                    video:
                                      - file: '{{ record_file_name }}'
                                        caption: 'Відео: Entrance'
                    # restore privacy mode for tapo_camera
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ tapo_camera_privacy_mode == 'on' }}"
                          - condition: state
                            entity_id: switch.tapo_camera_c200_privacy
                            state: 'off'
                        sequence:
                          - service: switch.turn_on
                            entity_id: switch.tapo_camera_c200_privacy
        mode: single

      - alias: "Alarm: Finished programm by Washing Machine"
        id: alarm_bathroom_washing_machine_cycle_finihed
        description: 'Повідомлення про завершення циклу прання у пральній машині'
        trigger:
          - platform: state
            entity_id: binary_sensor.bathroom_washing_machine_socket_status
            from: 'on'
            to: 'off'
        condition: []
        action:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.internet_connection_ping
                    state: 'on'
                sequence:
                  - service: notify.alexus
                    data:
                        title: '{{"\U0001F504"}} Пральна машина{{"\U0000203C"}}'
                        message: |
                            ➖➖➖➖➖➖➖
                            {{"\U0001F9FA"}} Програму прання завершено{{"\U0000203C"}}
                        data: 
                            inline_keyboard: 
                              - "{{'\U00002139'}} Статус:/status, {{'\U0001F4D1'}} Меню:/menu"
          - condition: state
            entity_id: input_boolean.disable_voice_notifications
            state: 'off'
          - condition: state
            entity_id: binary_sensor.anyone_home
            state: 'on'
          - condition: time
            after:  '08:00:00'
            before: '22:00:00' 
          - service: script.sonos_say
            data: 
                sonos_entity: media_player.sonos_living_room
                service_name: tts.google_cloud_say
                volume: 0.3
                duration: '00:00:04'
                message: 'Пральна машина завершила програму!'
                # message: 'Стиральная машина завершила программу!'
        mode: single
