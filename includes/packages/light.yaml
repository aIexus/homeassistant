light_settings:

    recorder:
        include:
            entities:
                - sensor.period_of_day
                - switch.bedroom_light_switch
                - switch.living_room_light_switch
                - light.hallway_rgb_bulb
                - sensor.bedroom_lumi_sensor_motion_illuminance_lux
                - sensor.living_room_lumi_sensor_motion_illuminance_lux
            entity_globs:
                - sensor.hallway_rgb_bulb_*

    homeassistant:

        customize:
            sensor.period_of_day:
                friendly_name: 'Период Суток'
            binary_sensor.living_room_auto_light_off_sensor:
                friendly_name: 'Автоотключение Света в Гостинной'
            binary_sensor.bedroom_auto_light_off_sensor:
                friendly_name: 'Автоотключение Света в Спальне'

    template:

      - sensor:
          - name: period_of_day
            unique_id: sensor_period_of_day
            state: >-
                {% set elevation = state_attr('sun.sun', 'elevation') %}
                {% set rising = state_attr('sun.sun', 'rising') %}
                {%- if elevation <= -12 -%}
                night
                {%- elif ( -12 < elevation) and (elevation <= -1) -%}
                {{ 'dawn' if rising else 'dusk' }}
                {%- else -%}
                day
                {%- endif -%}light
            icon: >-
                {% set elevation = state_attr('sun.sun', 'elevation') %}
                {% set rising = state_attr('sun.sun', 'rising') %}
                {%- if elevation <= -12 -%}
                mdi:weather-night
                {%- elif ( -12 < elevation) and (elevation <= -1) -%}
                mdi:weather-sunset-{{ 'up' if rising else 'down' }}
                {% else %}
                mdi:weather-sunny
                {% endif %}

      - binary_sensor:
          - name: bedroom_auto_light_off_sensor
            unique_id: binary_sensor_bedroom_auto_light_off_sensor
            state: >-
                {{ is_state('switch.bedroom_light_switch', 'on') and
                   is_state('binary_sensor.bedroom_lumi_sensor_motion_occupancy', 'off') and
                   is_state('input_boolean.disable_occupancy','off') }}
            icon: >-
                {% if is_state("binary_sensor.bedroom_auto_light_off_sensor", "on") %}
                mdi:timer
                {% else %}
                mdi:timer-off
                {% endif %}

          - name:  living_room_auto_light_off_sensor
            unique_id: binary_sensor_living_room_auto_light_off_sensor
            state: >-
                {{ is_state('switch.living_room_light_switch', 'on') and
                   is_state('binary_sensor.living_room_lumi_sensor_motion_occupancy', 'off') and
                   is_state('input_boolean.disable_occupancy','off') }}
            icon: >-
                {% if is_state("binary_sensor.living_room_auto_light_off_sensor", "on") %}
                mdi:timer
                {% else %}
                mdi:timer-off
                {% endif %}

          - name: hallway_rgb_bulb_control
            state: >
              {{ is_state('sensor.hallway_rgb_bulb_switch_action', 'single') or
                 is_state('input_boolean.hallway_rgb_bulb_automation_control_status','on') or
                 is_state('input_boolean.hallway_rgb_bulb_switch_single_status','on') }}
            delay_off: '00:00:03'

    input_boolean:

        hallway_rgb_bulb_switch_single_status:
          name: Hallway RGB Bulb Switch Status
          icon: mdi:toggle-switch-off-outline
    
        hallway_rgb_bulb_automation_control_status:
          name: Hallway RGB Bulb Automation Control Status
          icon: mdi:toggle-switch-off-outline

        disable_occupancy:
            name: Disable Occupancy Automations
            icon: mdi:motion-sensor-off

        disable_sunrise_sunset_simulation:
            name: Disable Sunrise & Sunset Simulation
            icon: mdi:weather-sunny-off

    timer:
        # Таймер отключения света в спальне
        bedroom_light_off_timer:
            name: Время до отключения света в спальне
            duration: '00:10:00'

        # Таймер отключения света в гостинной
        living_room_light_off_timer:
            name: Время до отключения света в гостинной
            duration: '00:10:00'

    script:

        light_rgb_test:
            alias: "Light: RGB Test"
            sequence:
              - service: input_boolean.turn_on
                entity_id: input_boolean.hallway_rgb_bulb_automation_control_status
              - service: light.toggle
                target:
                    entity_id: light.hallway_rgb_bulb
                data_template:
                    brightness_pct: '{{ 90 }}'
                    color_temp: 400
            #   - delay: '00:00:01'
            #   - service: scene.create
            #     data:
            #       scene_id: scene_rgb_bulb_white
            #       snapshot_entities:
            #         - light.hallway_rgb_bulb
            #   - service: script.turn_on
            #     target:
            #         entity_id: script.rgb_bulb_flashing_while_condition
            #     data:
            #         variables:
            #             rgb_bulb_entity_id: light.hallway_rgb_bulb
            #             rgb_bulb_automation_control: input_boolean.hallway_rgb_bulb_automation_control_status
            #             condition_entity_id: switch.living_room_light_switch
            #             repeat_while_state: 'on'
            #             color: 'red'
            #   - service: script.turn_on
            #     target: 
            #         entity_id: script.rgb_bulb_flashing_x_times
            #     data:
            #         variables:
            #             rgb_bulb_entity_id: light.hallway_rgb_bulb
            #             rgb_bulb_automation_control: input_boolean.hallway_rgb_bulb_automation_control_status
            #             count: 3
            #             color: 'green'
              - delay: '00:00:04'
              - service: input_boolean.turn_off
                entity_id: input_boolean.hallway_rgb_bulb_automation_control_status
            mode: single

        rgb_bulb_flashing_while_condition:
            alias: "Light: Flashing RGB Bulb with Color While Condition"
            sequence:
              - wait_template: "{{ is_state('script.rgb_bulb_flashing_x_times', 'off') }}"
              - service: scene.create
                data:
                  scene_id: scene_before_flashing_while_condition
                  snapshot_entities:
                    - '{{ rgb_bulb_entity_id }}'
              - delay: '00:00:01'
              - repeat:
                    while:
                      - condition: template
                        value_template: "{{ states[condition_entity_id].state == repeat_while_state }}"
                      - condition: template
                        value_template: '{{ repeat.index <= 500 }}'
                    sequence:
                      - service: input_boolean.turn_off
                        data_template:
                            entity_id: '{{ rgb_bulb_automation_control }}' 
                      - service: input_boolean.turn_on
                        data_template:
                            entity_id: '{{ rgb_bulb_automation_control }}'
                      - service: light.toggle
                        target:
                            entity_id: '{{ rgb_bulb_entity_id }}'
                        data:
                            color_name: '{{ color }}'
                            brightness: 255
                      - delay: '00:00:01'
              - service: scene.turn_on
                entity_id: scene.scene_before_flashing_while_condition
              - delay: '00:00:01'
              - service: input_boolean.turn_off
                data_template:
                    entity_id: '{{ rgb_bulb_automation_control }}' 
            mode: single

        rgb_bulb_flashing_x_times:
            alias: "Light: Flashing RGB Bulb X times with Color"
            sequence:
              - wait_template: "{{ is_state('script.rgb_bulb_flashing_while_condition', 'off') }}"
              - service: scene.create
                data:
                  scene_id: scene_before_flashing_x_times
                  snapshot_entities:
                    - '{{ rgb_bulb_entity_id }}'
              - delay: '00:00:01'
              - repeat:
                    count: '{{ count | int * 2 }}'
                    sequence:
                      - service: input_boolean.turn_off
                        data_template:
                            entity_id: '{{ rgb_bulb_automation_control }}' 
                      - service: input_boolean.turn_on
                        data_template:
                            entity_id: '{{ rgb_bulb_automation_control }}' 
                      - service: light.toggle
                        target:
                            entity_id: '{{ rgb_bulb_entity_id }}'
                        data:
                            color_name: '{{ color }}'
                            brightness: 255
                      - delay: '00:00:01'
              - service: scene.turn_on
                entity_id: scene.scene_before_flashing_x_times
              - delay: '00:00:01'
              - service: input_boolean.turn_off
                data_template:
                    entity_id: '{{ rgb_bulb_automation_control }}' 
            mode: single

    automation:

      - alias: "Light: Set Hallway RGB Bulb indicator mode"
        id: light_set_hallway_rgb_bulb_indicator_mode
        description: 'При активной тревоге, сигнализации, освещении или восходе/закате солнца - включать световой индикатор на RGB лампе'
        trigger:
          - platform: homeassistant
            event: start
          - platform: state
            entity_id: binary_sensor.m_novomoskovsk_alerts
            from: 'off'
            to: 'on'
          - platform: state
            entity_id: binary_sensor.m_novomoskovsk_alerts
            from: 'on'
            to: 'off'
          - platform: state
            entity_id: alarm_control_panel.home_alarm
          - platform: state
            entity_id: sun.sun
            attribute: elevation
          - platform: state
            entity_id: input_boolean.hallway_rgb_bulb_switch_single_status
          - platform: state
            entity_id: binary_sensor.anyone_home
        condition: []
        action:
          - choose:
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.entity_id == "input_boolean.hallway_rgb_bulb_switch_single_status" }}'
                sequence:
                  - choose: 
                      - conditions:
                          - condition: state
                            entity_id: input_boolean.hallway_rgb_bulb_switch_single_status
                            state: 'on'
                        sequence:
                          - service: light.turn_on
                            target:
                                entity_id: light.hallway_rgb_bulb
                            data:
                                brightness: 140
                                color_temp: 155
                      - conditions:
                          - condition: state
                            entity_id: input_boolean.hallway_rgb_bulb_switch_single_status
                            state: 'off'
                        sequence:
                          - service: light.turn_off
                            target:
                                entity_id: light.hallway_rgb_bulb
                  - delay: '00:00:03'
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.entity_id == "binary_sensor.m_novomoskovsk_alerts" }}'
                  - condition: state
                    entity_id: binary_sensor.anyone_home
                    state: 'on'
                sequence:
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: '{{ trigger.to_state.state == "on" }}'
                        sequence:
                          - service: script.rgb_bulb_flashing_x_times
                            data:
                                rgb_bulb_entity_id: light.hallway_rgb_bulb
                                rgb_bulb_automation_control: input_boolean.hallway_rgb_bulb_automation_control_status
                                count: 5
                                color: 'red'
                      - conditions:
                          - condition: template
                            value_template: '{{ trigger.to_state.state == "off" }}'
                        sequence:
                          - service: script.rgb_bulb_flashing_x_times
                            data:
                                rgb_bulb_entity_id: light.hallway_rgb_bulb
                                rgb_bulb_automation_control: input_boolean.hallway_rgb_bulb_automation_control_status
                                count: 5
                                color: 'green'
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.entity_id == "alarm_control_panel.home_alarm" }}'
                sequence:
                  - choose:
                        # armed_home
                      - conditions:
                          - condition: template
                            value_template: '{{ trigger.to_state.state == "armed_home" }}'
                          - condition: state
                            entity_id: binary_sensor.anyone_home
                            state: 'on'
                        sequence:
                          - service: script.rgb_bulb_flashing_x_times
                            data:
                                rgb_bulb_entity_id: light.hallway_rgb_bulb
                                rgb_bulb_automation_control: input_boolean.hallway_rgb_bulb_automation_control_status
                                count: 3
                                color: 'yellow'
                        # armed_night
                      - conditions:
                          - condition: template
                            value_template: '{{ trigger.to_state.state == "armed_night" }}'
                          - condition: state
                            entity_id: binary_sensor.anyone_home
                            state: 'on'
                        sequence:
                          - service: script.rgb_bulb_flashing_x_times
                            data:
                                rgb_bulb_entity_id: light.hallway_rgb_bulb
                                rgb_bulb_automation_control: input_boolean.hallway_rgb_bulb_automation_control_status
                                count: 3
                                color: 'blue'
                        # disarmed
                      - conditions:
                          - condition: template
                            value_template: '{{ trigger.to_state.state == "disarmed" }}'
                        sequence:
                          - service: script.rgb_bulb_flashing_x_times
                            data:
                                rgb_bulb_entity_id: light.hallway_rgb_bulb
                                rgb_bulb_automation_control: input_boolean.hallway_rgb_bulb_automation_control_status
                                count: 3
                                color: 'green'
                        # arming
                      - conditions:
                          - condition: template
                            value_template: '{{ trigger.from_state.state == "disarmed" }}'
                          - condition: template
                            value_template: '{{ trigger.to_state.state == "arming" }}'
                        sequence:
                          - service: script.rgb_bulb_flashing_while_condition
                            data:
                                rgb_bulb_entity_id: light.hallway_rgb_bulb
                                rgb_bulb_automation_control: input_boolean.hallway_rgb_bulb_automation_control_status
                                condition_entity_id: alarm_control_panel.home_alarm
                                repeat_while_state: 'arming'
                                color: 'yellow'
                        # pending
                      - conditions:
                          - condition: template
                            value_template: '{{ trigger.from_state.state == "armed_away" }}'
                          - condition: template
                            value_template: '{{ trigger.to_state.state == "pending" }}'
                        sequence:
                          - service: script.rgb_bulb_flashing_while_condition
                            data:
                                rgb_bulb_entity_id: light.hallway_rgb_bulb
                                rgb_bulb_automation_control: input_boolean.hallway_rgb_bulb_automation_control_status
                                condition_entity_id: alarm_control_panel.home_alarm
                                repeat_while_state: 'pending'
                                color: 'yellow'
                      - conditions:
                          - condition: template
                            value_template: '{{ trigger.to_state.state == "triggered" }}'
                        sequence:
                          - service: script.rgb_bulb_flashing_while_condition
                            data:
                                rgb_bulb_entity_id: light.hallway_rgb_bulb
                                rgb_bulb_automation_control: input_boolean.hallway_rgb_bulb_automation_control_status
                                condition_entity_id: alarm_control_panel.home_alarm
                                repeat_while_state: 'triggered'
                                color: 'red'
          - wait_template: "{{ is_state('script.rgb_bulb_flashing_x_times', 'off') and is_state('script.rgb_bulb_flashing_while_condition', 'off') }}"
          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.hallway_rgb_bulb_switch_single_status
                    state: 'on'
                  - condition: state
                    entity_id: binary_sensor.anyone_home
                    state: 'off'
                sequence:
                  - service: input_boolean.turn_off
                    entity_id: input_boolean.hallway_rgb_bulb_switch_single_status
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.m_novomoskovsk_alerts
                    state: 'on'
                  - condition: state
                    entity_id: binary_sensor.anyone_home
                    state: 'on'
                  - condition: state
                    entity_id: input_boolean.hallway_rgb_bulb_switch_single_status
                    state: 'off'
                sequence:
                  - service: input_boolean.turn_on
                    entity_id: input_boolean.hallway_rgb_bulb_automation_control_status
                  - service: light.turn_on
                    target:
                        entity_id: light.hallway_rgb_bulb
                    data: 
                        brightness: 100
                        color_name: 'red'
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.m_novomoskovsk_alerts
                    state: 'on'
                  - condition: state
                    entity_id: binary_sensor.anyone_home
                    state: 'off'
                sequence:
                  - service: input_boolean.turn_on
                    entity_id: input_boolean.hallway_rgb_bulb_automation_control_status
                  - service: light.turn_off
                    target:
                        entity_id: light.hallway_rgb_bulb
              - conditions:
                  - not:
                      - condition: state
                        entity_id: binary_sensor.m_novomoskovsk_alerts
                        state: 'on'
                  - condition: state
                    entity_id: input_boolean.hallway_rgb_bulb_switch_single_status
                    state: 'off'
                sequence:
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: alarm_control_panel.home_alarm
                            state: 'armed_home'
                          - condition: state
                            entity_id: binary_sensor.anyone_home
                            state: 'on'
                        sequence:
                          - service: input_boolean.turn_on
                            entity_id: input_boolean.hallway_rgb_bulb_automation_control_status
                          - service: light.turn_on
                            target:
                                entity_id: light.hallway_rgb_bulb
                            data: 
                                brightness: 100
                                rgb_color: [255, 254, 72]
                      - conditions:
                          - condition: state
                            entity_id: alarm_control_panel.home_alarm
                            state: 'armed_night'
                          - condition: state
                            entity_id: binary_sensor.anyone_home
                            state: 'on'
                        sequence:
                          - service: input_boolean.turn_on
                            entity_id: input_boolean.hallway_rgb_bulb_automation_control_status
                          - service: light.turn_on
                            target:
                                entity_id: light.hallway_rgb_bulb
                            data: 
                                brightness: 13
                                rgb_color: [5, 69, 255]
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.anyone_home
                            state: 'on'
                          - condition: state
                            entity_id: input_boolean.disable_sunrise_sunset_simulation
                            state: 'off'
                          - or:
                              - condition: state
                                entity_id: sensor.period_of_day
                                state: 'dusklight'
                              - condition: state
                                entity_id: sensor.period_of_day
                                state: 'dawnlight'
                        sequence:
                          - service: input_boolean.turn_on
                            entity_id: input_boolean.hallway_rgb_bulb_automation_control_status
                          - service: light.turn_on
                            target:
                                entity_id: light.hallway_rgb_bulb
                            data_template:
                                brightness_pct: >
                                    {% set bright_pct = (((state_attr("sun.sun", "elevation") | float ) + 12) * 100 / 12 / 8 ) | round(0) %}
                                    {% if bright_pct > 100 %}
                                    100
                                    {% elif bright_pct < 1 %}
                                    1
                                    {% else %}
                                    {{ bright_pct }}
                                    {% endif  %}
                                color_temp: >
                                    {% set sun_elevation = state_attr('sun.sun', 'elevation') | float | round(0) %}
                                    {% if   sun_elevation >= -1  %}
                                    385
                                    {% elif sun_elevation >= -2  %}
                                    395
                                    {% elif sun_elevation >= -3  %}
                                    405
                                    {% elif sun_elevation >= -4  %}
                                    415
                                    {% elif sun_elevation >= -5  %}
                                    425
                                    {% elif sun_elevation >= -6  %}
                                    435
                                    {% elif sun_elevation >= -7  %}
                                    445
                                    {% elif sun_elevation >= -8  %}
                                    455
                                    {% elif sun_elevation >= -9  %}
                                    465
                                    {% elif sun_elevation >= -10 %}
                                    475
                                    {% elif sun_elevation >= -11 %}
                                    485
                                    {% elif sun_elevation >= -12 %}
                                    495
                                    {% else %}
                                    495
                                    {% endif %}
                    default:
                      - choose:
                          - conditions:
                              - condition: state
                                entity_id: light.hallway_rgb_bulb
                                state: 'on'
                            sequence:
                              - service: input_boolean.turn_on
                                entity_id: input_boolean.hallway_rgb_bulb_automation_control_status
                              - service: light.turn_off
                                target:
                                    entity_id: light.hallway_rgb_bulb
          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.hallway_rgb_bulb_automation_control_status
                    state: 'on'
                sequence:
                  - delay: '00:00:04'
                  - service: input_boolean.turn_off
                    entity_id: input_boolean.hallway_rgb_bulb_automation_control_status
        mode: restart

      # Автоматизация выключения света в спальне
      - alias: "Light: Turn OFF light in Bedroom by timer"
        id: bedroom_auto_light_off
        description: 'Автоматическое Выключение освещения в спальне'
        trigger:
        # По Таймеру
          - platform: event
            event_type: timer.finished
            event_data:
                entity_id: timer.bedroom_light_off_timer
        condition:
          - condition: state
            entity_id: switch.bedroom_light_switch
            state: 'on'
        action:
          - service: switch.turn_off
            entity_id: switch.bedroom_light_switch
        mode: single

        # Таймер автоотключения
      - alias: "Light: Start light-off Timer for Bedroom"
        id: bedroom_light_off_timer_start
        description: 'Активация таймера автоотключения в спальне'
        initial_state: true
        trigger:
        # Условия для запуска таймера освещения
          - platform: state
            entity_id: binary_sensor.bedroom_auto_light_off_sensor
            to: 'on'
        condition:
          - condition: state
            entity_id: input_boolean.disable_occupancy
            state: 'off'
        action:
          - service: timer.start
            entity_id: timer.bedroom_light_off_timer
            data_template: 
                duration: > 
                    {%- if states("sensor.period_of_day") == 'nightlight' -%}
                    00:20:00
                    {%- elif states("sensor.period_of_day") == 'daylight'  -%}
                    00:10:00
                    {%- else -%}
                    00:15:00
                    {% endif %} 
        mode: single

      # Сброс таймера при выключении
      - alias: "Light: Cancel light-off Timer for Bedroom"
        id: bedroom_light_off_timer_cancel
        initial_state: true
        trigger:
          - platform: state
            entity_id: binary_sensor.bedroom_auto_light_off_sensor
            to: 'off'
          - platform: state
            entity_id: input_boolean.disable_occupancy
            to: 'on'
        action:
          - service: timer.cancel
            entity_id: timer.bedroom_light_off_timer
        mode: restart

      # Автоматизация выключения света в гостинной
      - alias: "Light: Turn OFF light in Living Room by timer"
        id: living_room_auto_light_off
        description: 'Автоматическое Выключение освещения в гостинной'
        trigger:
        # По Таймеру
          - platform: event
            event_type: timer.finished
            event_data:
                entity_id: timer.living_room_light_off_timer
        condition:
          - condition: state
            entity_id: switch.living_room_light_switch
            state: 'on'
        action:
          - service: switch.turn_off
            entity_id: switch.living_room_light_switch
        mode: single

        # Таймер автоотключения
      - alias: "Light: Start light-off Timer for Living Room"
        id: living_room_light_off_timer_start
        description: 'Активация таймера автоотключения в гостинной'
        initial_state: true
        trigger:
        # Условия для запуска таймера освещения
          - platform: state
            entity_id: binary_sensor.living_room_auto_light_off_sensor
            to: 'on'
        condition:
          - condition: state
            entity_id: input_boolean.disable_occupancy
            state: 'off'
        action:
          - service: timer.start
            entity_id: timer.living_room_light_off_timer
            data_template: 
                duration: > 
                    {%- if states("sensor.period_of_day") == 'nightlight' -%}
                    00:20:00
                    {%- elif states("sensor.period_of_day") == 'daylight'  -%}
                    00:10:00
                    {%- else -%}
                    00:15:00
                    {% endif %} 
        mode: single

      # Сброс таймера при выключении света в гостинной
      - alias: "Light: Cancel light-off Timer for Living Room"
        id: living_room_light_off_timer_cancel
        initial_state: true
        trigger:
          - platform: state
            entity_id: binary_sensor.living_room_auto_light_off_sensor
            to: 'off'
          - platform: state
            entity_id: input_boolean.disable_occupancy
            to: 'on'
        action:
          - service: timer.cancel
            entity_id: timer.living_room_light_off_timer
        mode: restart

      - alias: "Light: Hallway RGB Bulb Manual Switch Actions"
        id: hallway_light_rgb_bulb_manual_switch_actions
        trigger:
          - platform: state
            entity_id: sensor.hallway_rgb_bulb_switch_action
            attribute: action
            to:
              - single
              - double
              - hold
        action:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.to_state.attributes.action == 'single' }}"
                sequence:
                  - service: input_boolean.toggle
                    entity_id: input_boolean.hallway_rgb_bulb_switch_single_status
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.to_state.attributes.action == 'double' }}"
                sequence:
            #       some actions
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.to_state.attributes.action == 'hold'   }}"
                sequence:
            #       some actions
        mode: single

      - alias: "Light: Turn OFF Hallway RGB Bulb after power outage"
        id: hallway_light_rgb_bulb_turn_off_after_power_outage
        initial_state: true
        trigger:
        - platform: state
          entity_id: light.hallway_rgb_bulb
          to: 'on'
        condition:
        - condition: state
          entity_id: binary_sensor.hallway_rgb_bulb_control
          state: 'off'
        action:
        - service: light.turn_off
          entity_id: light.hallway_rgb_bulb
        mode: single
