light_settings:

    recorder:
        include:
            entities:
                - sensor.period_of_day
                - switch.bedroom_light_switch
                - switch.living_room_light_switch
                - light.hallway_rgb_bulb
                - light.bedroom_tuya_rgb_strip
                - light.living_room_tuya_rgb_strip
                - sensor.bedroom_lumi_sensor_motion_illuminance_lux
                - sensor.living_room_lumi_sensor_motion_illuminance_lux
            entity_globs:
                - sensor.hallway_rgb_bulb_switch_*

    homeassistant:

        customize:
            sensor.period_of_day:
                friendly_name: 'Період Доби'
            binary_sensor.living_room_auto_light_off_sensor:
                friendly_name: 'Автоматичне Вимикання Світла у Вітальні'
            binary_sensor.bedroom_auto_light_off_sensor:
                friendly_name: 'Автоматичне Вимикання Світла у Спальні'

    template:

      - sensor:
          - name: period_of_day
            unique_id: sensor_period_of_day
            state: >-
                {% set elevation = state_attr('sun.sun', 'elevation') %}
                {% set rising = state_attr('sun.sun', 'rising') %}
                {%- if elevation <= -12 -%}
                night
                {%- elif ( -12 < elevation) and (elevation <= -1) -%}
                {{ 'dawn' if rising else 'dusk' }}
                {%- else -%}
                day
                {%- endif -%}light
            icon: >-
                {% set elevation = state_attr('sun.sun', 'elevation') %}
                {% set rising = state_attr('sun.sun', 'rising') %}
                {%- if elevation <= -12 -%}
                mdi:weather-night
                {%- elif ( -12 < elevation) and (elevation <= -1) -%}
                mdi:weather-sunset-{{ 'up' if rising else 'down' }}
                {% else %}
                mdi:weather-sunny
                {% endif %}

      - binary_sensor:
          - name: bedroom_auto_light_off_sensor
            unique_id: binary_sensor_bedroom_auto_light_off_sensor
            state: >-
                {{ is_state('switch.bedroom_light_switch', 'on') and
                   is_state('binary_sensor.bedroom_lumi_sensor_motion_occupancy', 'off') and
                   is_state('input_boolean.disable_occupancy','off') }}
            icon: >-
                {% if is_state("binary_sensor.bedroom_auto_light_off_sensor", "on") %}
                mdi:timer
                {% else %}
                mdi:timer-off
                {% endif %}

          - name:  living_room_auto_light_off_sensor
            unique_id: binary_sensor_living_room_auto_light_off_sensor
            state: >-
                {{ is_state('switch.living_room_light_switch', 'on') and
                   is_state('binary_sensor.living_room_lumi_sensor_motion_occupancy', 'off') and
                   is_state('input_boolean.disable_occupancy','off') }}
            icon: >-
                {% if is_state("binary_sensor.living_room_auto_light_off_sensor", "on") %}
                mdi:timer
                {% else %}
                mdi:timer-off
                {% endif %}

          - name: hallway_rgb_bulb_control
            state: >
              {{ is_state('sensor.hallway_rgb_bulb_switch_action', 'single') or
                 is_state('input_boolean.hallway_rgb_bulb_automation_control_status','on') or
                 is_state('input_boolean.hallway_rgb_bulb_switch_single_status','on') }}
            delay_off: '00:00:03'

    input_boolean:

        hallway_rgb_bulb_switch_single_status:
          name: Hallway RGB Bulb Switch Status
          icon: mdi:toggle-switch-off-outline
    
        hallway_rgb_bulb_automation_control_status:
          name: Hallway RGB Bulb Automation Control Status
          icon: mdi:toggle-switch-off-outline

        disable_occupancy:
            name: Disable Occupancy Automations
            icon: mdi:motion-sensor-off

        disable_sunrise_sunset_simulation:
            name: Disable Sunrise & Sunset Simulation
            icon: mdi:weather-sunny-off

    timer:
        # Таймер вимкнення світла у спальні
        bedroom_light_off_timer:
            name: Час до вимкнення світла у спальні
            duration: '00:10:00'

        # Таймер вимкнення світла у вітальні
        living_room_light_off_timer:
            name: Час до вимкнення світла у вітальні
            duration: '00:10:00'

    script:

        light_rgb_test:
            alias: "Light: RGB Test"
            sequence:
            #   - service: input_boolean.turn_on
            #     entity_id: input_boolean.hallway_rgb_bulb_automation_control_status
            #   - service: light.toggle
            #     target:
            #         entity_id: light.hallway_rgb_bulb
            #     data_template:
            #         brightness_pct: '{{ 90 }}'
            #         color_temp: 400
            #   - delay: '00:00:01'
            #   - service: scene.create
            #     data:
            #       scene_id: scene_rgb_bulb_white
            #       snapshot_entities:
            #         - light.hallway_rgb_bulb
              - service: script.turn_on
                target:
                    entity_id: script.rgb_light_flashing_while_condition
                data:
                    variables:
                        rgb_light_entity_id: light.hallway_rgb_bulb
                        rgb_light_automation_control: input_boolean.hallway_rgb_bulb_automation_control_status
                        condition_entity_id: switch.living_room_light_switch
                        repeat_while_state: 'on'
                        color: 'red'
                        # color_two: 'blue'
              - delay: '00:00:05'
            #   - service: script.turn_on
            #     target: 
            #         entity_id: script.rgb_light_flashing_x_times
            #     data:
            #         variables:
            #             # rgb_light_entity_id: light.living_room_tuya_rgb_strip
            #             rgb_light_entity_id: light.hallway_rgb_bulb
            #             rgb_light_automation_control: input_boolean.hallway_rgb_bulb_automation_control_status
            #             count: 3
            #             color: 'green'
            #   - delay: '00:00:04'
            #   - service: input_boolean.turn_off
            #     entity_id: input_boolean.hallway_rgb_bulb_automation_control_status
            mode: single

        rgb_light_flashing_while_condition:
            alias: "Light: Flashing RGB Light with Color While Condition"
            sequence:
              - variables:
                    rgb_light_automation_control: |
                        {% if (rgb_light_automation_control is not defined) %}
                          {% set rgb_light_automation_control = "undefined_control" %}
                        {% endif %}
                        {{ rgb_light_automation_control }}
                    color_one: |
                        {% if color is defined %}
                          {{ color }}
                        {% elif color_one is defined %}
                          {{ color_one }}
                        {% else %}
                          white
                        {% endif %}
              - service: light.turn_off
                target:
                    entity_id: '{{ rgb_light_entity_id }}'
              - repeat:
                    while:
                      - condition: template
                        value_template: "{{ states[condition_entity_id].state == repeat_while_state }}"
                      - condition: template
                        value_template: '{{ repeat.index <= 500 }}'
                    sequence:
                      - choose:
                          - conditions: # flash with color_one
                              - condition: template
                                value_template: '{{ color_one is defined }}'
                            sequence:
                              - choose:
                                  - conditions:
                                      - condition: template
                                        value_template: "{{ states(rgb_light_automation_control) not in ['unknown', 'unavailable', 'none'] }}"
                                    sequence:
                                      - service: input_boolean.turn_on
                                        data_template:
                                            entity_id: '{{ rgb_light_automation_control }}'
                              - service: light.turn_on
                                target:
                                    entity_id: '{{ rgb_light_entity_id }}'
                                data:
                                    color_name: '{{ color_one }}'
                                    brightness: 255
                              - delay: '00:00:02'
                              - service: light.turn_off
                                target:
                                    entity_id: '{{ rgb_light_entity_id }}'
                              - delay: '00:00:02'
                      - choose:
                          - conditions: # flash with color_two
                              - condition: template
                                value_template: '{{ color_two is defined }}'
                            sequence:
                              - choose:
                                  - conditions:
                                      - condition: template
                                        value_template: "{{ states(rgb_light_automation_control) not in ['unknown', 'unavailable', 'none'] }}"
                                    sequence:
                                      - service: input_boolean.turn_on
                                        data_template:
                                            entity_id: '{{ rgb_light_automation_control }}'
                              - service: light.turn_on
                                target:
                                    entity_id: '{{ rgb_light_entity_id }}'
                                data:
                                    color_name: '{{ color_two }}'
                                    brightness: 255
                              - delay: '00:00:02'
                              - service: light.turn_off
                                target:
                                    entity_id: '{{ rgb_light_entity_id }}'
                              - delay: '00:00:02'
              - service: light.turn_off
                target:
                    entity_id: '{{ rgb_light_entity_id }}'
              - choose:
                  - conditions:
                      - condition: template
                        value_template: "{{ states(rgb_light_automation_control) not in ['unknown', 'unavailable', 'none'] }}"
                    sequence:
                      - service: input_boolean.turn_off
                        data_template:
                            entity_id: '{{ rgb_light_automation_control }}' 
            mode: parallel

        rgb_light_flashing_x_times:
            alias: "Light: Flashing RGB Light X times with One Color"
            sequence:
              - variables:
                    rgb_light_automation_control: |
                        {% if (rgb_light_automation_control is not defined) %}
                          {% set rgb_light_automation_control = "undefined_control" %}
                        {% endif %}
                        {{ rgb_light_automation_control }}
                    color: |
                        {% if color is defined %}
                          {{ color }}
                        {% else %}
                          white
                        {% endif %}
              - service: light.turn_off
                target:
                    entity_id: '{{ rgb_light_entity_id }}'
              - repeat:
                    count: '{{ count | int * 2 }}'
                    sequence:
                      - choose:
                          - conditions:
                              - condition: template
                                value_template: "{{ states(rgb_light_automation_control) not in ['unknown', 'unavailable', 'none'] }}"
                            sequence:
                              - service: input_boolean.turn_off
                                data_template:
                                    entity_id: '{{ rgb_light_automation_control }}' 
                              - service: input_boolean.turn_on
                                data_template:
                                    entity_id: '{{ rgb_light_automation_control }}' 
                      - service: light.toggle
                        target:
                            entity_id: '{{ rgb_light_entity_id }}'
                        data:
                            color_name: '{{ color }}'
                            brightness: 255
                      - delay: '00:00:02'
              - service: light.turn_off
                target:
                    entity_id: '{{ rgb_light_entity_id }}'
              - choose:
                  - conditions:
                      - condition: template
                        value_template: "{{ states(rgb_light_automation_control) not in ['unknown', 'unavailable', 'none'] }}"
                    sequence:
                      - service: input_boolean.turn_off
                        data_template:
                            entity_id: '{{ rgb_light_automation_control }}' 
            mode: parallel

    automation:

      - alias: "Light: Set RGB Lights Indicator Modes"
        id: light_set_rgb_lights_indicator_modes
        description: 'При активній тривозі, сигналізації, освітленні або сході/заході сонця - вмикати світловий індикатор на RGB лампі'
        trigger:
          - platform: homeassistant
            event: start
          - platform: state
            entity_id: binary_sensor.m_novomoskovsk_alerts
            from: 'off'
            to: 'on'
          - platform: state
            entity_id: binary_sensor.m_novomoskovsk_alerts
            from: 'on'
            to: 'off'
          - platform: state
            entity_id: alarm_control_panel.home_alarm
          - platform: state
            entity_id: sun.sun
            attribute: elevation
          - platform: state
            entity_id: input_boolean.hallway_rgb_bulb_switch_single_status
          - platform: state
            entity_id: binary_sensor.anyone_home
        condition: []
        action:
          - choose:
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.entity_id == "input_boolean.hallway_rgb_bulb_switch_single_status" }}'
                sequence:
                  - choose: 
                      - conditions:
                          - condition: state
                            entity_id: input_boolean.hallway_rgb_bulb_switch_single_status
                            state: 'on'
                        sequence:
                          - service: light.turn_on
                            target:
                                entity_id: light.hallway_rgb_bulb
                            data:
                                brightness: 140
                                color_temp: 155
                      - conditions:
                          - condition: state
                            entity_id: input_boolean.hallway_rgb_bulb_switch_single_status
                            state: 'off'
                        sequence:
                          - service: light.turn_off
                            target:
                                entity_id: light.hallway_rgb_bulb
                  - delay: '00:00:03'
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.entity_id == "binary_sensor.m_novomoskovsk_alerts" }}'
                  - condition: state
                    entity_id: binary_sensor.anyone_home
                    state: 'on'
                sequence:
                  - choose:
                      - conditions: 
                          - condition: template
                            value_template: '{{ trigger.to_state.state == "on" }}'
                        sequence:
                          - service: script.turn_on
                            target:
                                entity_id: script.rgb_light_flashing_x_times
                            data:
                                variables:
                                    rgb_light_entity_id: light.hallway_rgb_bulb
                                    rgb_light_automation_control: input_boolean.hallway_rgb_bulb_automation_control_status
                                    count: 5
                                    color: 'red'
                          - service: script.turn_on
                            target:
                                entity_id: script.rgb_light_flashing_x_times
                            data:
                                variables:
                                    rgb_light_entity_id: light.living_room_tuya_rgb_strip
                                    count: 5
                                    color: 'red'
                          - service: script.turn_on
                            target:
                                entity_id: script.rgb_light_flashing_x_times
                            data:
                                variables:
                                    rgb_light_entity_id: light.bedroom_tuya_rgb_strip
                                    count: 5
                                    color: 'red'
                      - conditions:
                          - condition: template
                            value_template: '{{ trigger.to_state.state == "off" }}'
                        sequence:
                          - service: script.turn_on
                            target:
                                entity_id: script.rgb_light_flashing_x_times
                            data:
                                variables:
                                    rgb_light_entity_id: light.hallway_rgb_bulb
                                    rgb_light_automation_control: input_boolean.hallway_rgb_bulb_automation_control_status
                                    count: 5
                                    color: 'green'
                          - service: script.turn_on
                            target:
                                entity_id: script.rgb_light_flashing_x_times
                            data:
                                variables:
                                    rgb_light_entity_id: light.living_room_tuya_rgb_strip
                                    count: 5
                                    color: 'green'
                          - service: script.turn_on
                            target:
                                entity_id: script.rgb_light_flashing_x_times
                            data:
                                variables:
                                    rgb_light_entity_id: light.bedroom_tuya_rgb_strip
                                    count: 5
                                    color: 'green'
              - conditions:
                  - condition: template
                    value_template: '{{ trigger.entity_id == "alarm_control_panel.home_alarm" }}'
                sequence:
                  - choose:
                        # armed_home
                      - conditions:
                          - condition: template
                            value_template: '{{ trigger.to_state.state == "armed_home" }}'
                          - condition: state
                            entity_id: binary_sensor.anyone_home
                            state: 'on'
                        sequence:
                          - service: script.turn_on
                            target:
                                entity_id: script.rgb_light_flashing_x_times
                            data:
                                variables:
                                    rgb_light_entity_id: light.hallway_rgb_bulb
                                    rgb_light_automation_control: input_boolean.hallway_rgb_bulb_automation_control_status
                                    count: 3
                                    color: 'yellow'
                          - service: script.turn_on
                            target:
                                entity_id: script.rgb_light_flashing_x_times
                            data:
                                variables:
                                    rgb_light_entity_id: light.living_room_tuya_rgb_strip
                                    count: 3
                                    color: 'yellow'
                          - service: script.turn_on
                            target:
                                entity_id: script.rgb_light_flashing_x_times
                            data:
                                variables:
                                    rgb_light_entity_id: light.bedroom_tuya_rgb_strip
                                    count: 3
                                    color: 'yellow'
                      - conditions:
                          - condition: template
                            value_template: '{{ trigger.to_state.state == "armed_night" }}'
                          - condition: state
                            entity_id: binary_sensor.anyone_home
                            state: 'on'
                        sequence:
                          - service: script.turn_on
                            target:
                                entity_id: script.rgb_light_flashing_x_times
                            data:
                                variables:
                                    rgb_light_entity_id: light.hallway_rgb_bulb
                                    rgb_light_automation_control: input_boolean.hallway_rgb_bulb_automation_control_status
                                    count: 3
                                    color: 'blue'
                          - service: script.turn_on
                            target:
                                entity_id: script.rgb_light_flashing_x_times
                            data:
                                variables:
                                    rgb_light_entity_id: light.living_room_tuya_rgb_strip
                                    count: 3
                                    color: 'blue'
                          - service: script.turn_on
                            target:
                                entity_id: script.rgb_light_flashing_x_times
                            data:
                                variables:
                                    rgb_light_entity_id: light.bedroom_tuya_rgb_strip
                                    count: 3
                                    color: 'blue'
                      - conditions:
                          - condition: template
                            value_template: '{{ trigger.to_state.state == "disarmed" }}'
                        sequence:
                          - service: script.turn_on
                            target:
                                entity_id: script.rgb_light_flashing_x_times
                            data:
                                variables:
                                    rgb_light_entity_id: light.hallway_rgb_bulb
                                    rgb_light_automation_control: input_boolean.hallway_rgb_bulb_automation_control_status
                                    count: 3
                                    color: 'green'
                          - service: script.turn_on
                            target:
                                entity_id: script.rgb_light_flashing_x_times
                            data:
                                variables:
                                    rgb_light_entity_id: light.living_room_tuya_rgb_strip
                                    count: 3
                                    color: 'green'
                          - service: script.turn_on
                            target:
                                entity_id: script.rgb_light_flashing_x_times
                            data:
                                variables:
                                    rgb_light_entity_id: light.bedroom_tuya_rgb_strip
                                    count: 3
                                    color: 'green'
                      - conditions:
                          - condition: template
                            value_template: '{{ trigger.from_state.state == "disarmed" }}'
                          - condition: template
                            value_template: '{{ trigger.to_state.state == "arming" }}'
                        sequence:
                          - service: script.turn_on
                            target:
                                entity_id: script.rgb_light_flashing_while_condition
                            data:
                                variables:
                                    rgb_light_entity_id: light.hallway_rgb_bulb
                                    rgb_light_automation_control: input_boolean.hallway_rgb_bulb_automation_control_status
                                    condition_entity_id: alarm_control_panel.home_alarm
                                    repeat_while_state: 'arming'
                                    color: 'yellow'
                          - service: script.turn_on
                            target:
                                entity_id: script.rgb_light_flashing_while_condition
                            data:
                                variables:
                                    rgb_light_entity_id: light.living_room_tuya_rgb_strip
                                    condition_entity_id: alarm_control_panel.home_alarm
                                    repeat_while_state: 'arming'
                                    color: 'yellow'
                          - service: script.turn_on
                            target:
                                entity_id: script.rgb_light_flashing_while_condition
                            data:
                                variables:
                                    rgb_light_entity_id: light.bedroom_tuya_rgb_strip
                                    condition_entity_id: alarm_control_panel.home_alarm
                                    repeat_while_state: 'arming'
                                    color: 'yellow'
                      - conditions:
                          - condition: template
                            value_template: '{{ trigger.from_state.state == "armed_away" }}'
                          - condition: template
                            value_template: '{{ trigger.to_state.state == "pending" }}'
                        sequence:
                          - service: script.turn_on
                            target:
                                entity_id: script.rgb_light_flashing_while_condition
                            data:
                                variables:
                                    rgb_light_entity_id: light.hallway_rgb_bulb
                                    rgb_light_automation_control: input_boolean.hallway_rgb_bulb_automation_control_status
                                    condition_entity_id: alarm_control_panel.home_alarm
                                    repeat_while_state: 'pending'
                                    color: 'yellow'
                          - service: script.turn_on
                            target:
                                entity_id: script.rgb_light_flashing_while_condition
                            data:
                                variables:
                                    rgb_light_entity_id: light.living_room_tuya_rgb_strip
                                    condition_entity_id: alarm_control_panel.home_alarm
                                    repeat_while_state: 'pending'
                                    color: 'yellow'
                          - service: script.turn_on
                            target:
                                entity_id: script.rgb_light_flashing_while_condition
                            data:
                                variables:
                                    rgb_light_entity_id: light.bedroom_tuya_rgb_strip
                                    condition_entity_id: alarm_control_panel.home_alarm
                                    repeat_while_state: 'pending'
                                    color: 'yellow'
                      - conditions:
                          - condition: template
                            value_template: '{{ trigger.to_state.state == "triggered" }}'
                        sequence:
                          - service: script.turn_on
                            target:
                                entity_id: script.rgb_light_flashing_while_condition
                            data:
                                variables:
                                    rgb_light_entity_id: light.hallway_rgb_bulb
                                    rgb_light_automation_control: input_boolean.hallway_rgb_bulb_automation_control_status
                                    condition_entity_id: alarm_control_panel.home_alarm
                                    repeat_while_state: 'triggered'
                                    color_one: 'red'
                                    color_two: 'blue'
                          - service: script.turn_on
                            target:
                                entity_id: script.rgb_light_flashing_while_condition
                            data:
                                variables:
                                    rgb_light_entity_id: light.living_room_tuya_rgb_strip
                                    condition_entity_id: alarm_control_panel.home_alarm
                                    repeat_while_state: 'triggered'
                                    color_one: 'red'
                                    color_two: 'blue'
                          - service: script.turn_on
                            target:
                                entity_id: script.rgb_light_flashing_while_condition
                            data:
                                variables:
                                    rgb_light_entity_id: light.bedroom_tuya_rgb_strip
                                    condition_entity_id: alarm_control_panel.home_alarm
                                    repeat_while_state: 'triggered'
                                    color_one: 'blue'
                                    color_two: 'red'
          - wait_template: "{{ is_state('script.rgb_light_flashing_x_times', 'off') and is_state('script.rgb_light_flashing_while_condition', 'off') }}"
          - delay: '00:00:03'
          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.hallway_rgb_bulb_switch_single_status
                    state: 'on'
                  - condition: state
                    entity_id: binary_sensor.anyone_home
                    state: 'off'
                sequence:
                  - service: input_boolean.turn_off
                    entity_id: input_boolean.hallway_rgb_bulb_switch_single_status
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.m_novomoskovsk_alerts
                    state: 'on'
                  - condition: state
                    entity_id: binary_sensor.anyone_home
                    state: 'on'
                  - condition: state
                    entity_id: input_boolean.hallway_rgb_bulb_switch_single_status
                    state: 'off'
                sequence:
                  - service: input_boolean.turn_on
                    entity_id: input_boolean.hallway_rgb_bulb_automation_control_status
                  - service: light.turn_on
                    target:
                        entity_id: 
                          - light.hallway_rgb_bulb
                          - light.living_room_tuya_rgb_strip
                          - light.bedroom_tuya_rgb_strip
                    data: 
                        brightness: 100
                        color_name: 'red'
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.m_novomoskovsk_alerts
                    state: 'on'
                  - condition: state
                    entity_id: binary_sensor.anyone_home
                    state: 'off'
                sequence:
                  - service: input_boolean.turn_on
                    entity_id: input_boolean.hallway_rgb_bulb_automation_control_status
                  - service: light.turn_off
                    target:
                        entity_id: 
                          - light.hallway_rgb_bulb
                          - light.living_room_tuya_rgb_strip
                          - light.bedroom_tuya_rgb_strip
              - conditions:
                  - not:
                      - condition: state
                        entity_id: binary_sensor.m_novomoskovsk_alerts
                        state: 'on'
                  - condition: state
                    entity_id: input_boolean.hallway_rgb_bulb_switch_single_status
                    state: 'off'
                sequence:
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: alarm_control_panel.home_alarm
                            state: 'armed_home'
                          - condition: state
                            entity_id: binary_sensor.anyone_home
                            state: 'on'
                        sequence:
                          - service: input_boolean.turn_on
                            entity_id: input_boolean.hallway_rgb_bulb_automation_control_status
                          - service: light.turn_on
                            target:
                                entity_id: 
                                  - light.hallway_rgb_bulb
                                  - light.living_room_tuya_rgb_strip
                                  - light.bedroom_tuya_rgb_strip
                            data: 
                                brightness: 100
                                rgb_color: [255, 254, 72]
                      - conditions:
                          - condition: state
                            entity_id: alarm_control_panel.home_alarm
                            state: 'armed_night'
                          - condition: state
                            entity_id: binary_sensor.anyone_home
                            state: 'on'
                        sequence:
                          - service: input_boolean.turn_on
                            entity_id: input_boolean.hallway_rgb_bulb_automation_control_status
                          - service: light.turn_on
                            target:
                                entity_id: 
                                  - light.hallway_rgb_bulb
                                  - light.living_room_tuya_rgb_strip
                                  - light.bedroom_tuya_rgb_strip
                            data: 
                                brightness: 13
                                rgb_color: [5, 69, 255]
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.anyone_home
                            state: 'on'
                          - condition: state
                            entity_id: input_boolean.disable_sunrise_sunset_simulation
                            state: 'off'
                          - or:
                              - condition: state
                                entity_id: sensor.period_of_day
                                state: 'dusklight'
                              - condition: state
                                entity_id: sensor.period_of_day
                                state: 'dawnlight'
                        sequence:
                          - service: input_boolean.turn_on
                            entity_id: input_boolean.hallway_rgb_bulb_automation_control_status
                          - service: light.turn_on
                            target:
                                entity_id: 
                                  - light.hallway_rgb_bulb
                                  - light.living_room_tuya_rgb_strip
                                  - light.bedroom_tuya_rgb_strip
                            data_template:
                                brightness_pct: >
                                    {% set bright_pct = (((state_attr("sun.sun", "elevation") | float ) + 12) * 100 / 12 / 8 ) | round(0) %}
                                    {% if bright_pct > 100 %}
                                    100
                                    {% elif bright_pct < 1 %}
                                    1
                                    {% else %}
                                    {{ bright_pct }}
                                    {% endif  %}
                                color_temp: >
                                    {% set sun_elevation = state_attr('sun.sun', 'elevation') | float | round(0) %}
                                    {% if   sun_elevation >= -1  %}
                                    385
                                    {% elif sun_elevation >= -2  %}
                                    395
                                    {% elif sun_elevation >= -3  %}
                                    405
                                    {% elif sun_elevation >= -4  %}
                                    415
                                    {% elif sun_elevation >= -5  %}
                                    425
                                    {% elif sun_elevation >= -6  %}
                                    435
                                    {% elif sun_elevation >= -7  %}
                                    445
                                    {% elif sun_elevation >= -8  %}
                                    455
                                    {% elif sun_elevation >= -9  %}
                                    465
                                    {% elif sun_elevation >= -10 %}
                                    475
                                    {% elif sun_elevation >= -11 %}
                                    485
                                    {% elif sun_elevation >= -12 %}
                                    495
                                    {% else %}
                                    495
                                    {% endif %}
                    default:
                      - choose:
                          - conditions:
                              - condition: state
                                entity_id: light.hallway_rgb_bulb
                                state: 'on'
                            sequence:
                              - service: input_boolean.turn_on
                                entity_id: input_boolean.hallway_rgb_bulb_automation_control_status
                              - service: light.turn_off
                                target:
                                    entity_id: 
                                      - light.hallway_rgb_bulb
                                      - light.living_room_tuya_rgb_strip
                                      - light.bedroom_tuya_rgb_strip
          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.hallway_rgb_bulb_automation_control_status
                    state: 'on'
                sequence:
                  - delay: '00:00:04'
                  - service: input_boolean.turn_off
                    entity_id: input_boolean.hallway_rgb_bulb_automation_control_status
          - delay: '00:00:03'
          - choose:
              - conditions: 
                  - condition: state
                    entity_id: sensor.period_of_day
                    state: 'daylight'
                sequence:
                  - service: light.turn_off
                    target:
                        entity_id: 
                          - light.living_room_tuya_rgb_strip
                          - light.bedroom_tuya_rgb_strip
                        
        mode: restart

      - alias: "Light: Turn OFF light in Bedroom by timer"
        id: bedroom_auto_light_off
        description: 'Автоматичне вимкнення освітлення у Спальні'
        trigger:
        # По Таймеру
          - platform: event
            event_type: timer.finished
            event_data:
                entity_id: timer.bedroom_light_off_timer
        condition:
          - condition: state
            entity_id: switch.bedroom_light_switch
            state: 'on'
        action:
          - service: switch.turn_off
            entity_id: switch.bedroom_light_switch
        mode: single

      - alias: "Light: Start light-off Timer for Bedroom"
        id: bedroom_light_off_timer_start
        description: 'Активація таймера автоматичного вимкнення світла у спальні'
        initial_state: true
        trigger:
        # Условия для запуска таймера освещения
          - platform: state
            entity_id: binary_sensor.bedroom_auto_light_off_sensor
            to: 'on'
        condition:
          - condition: state
            entity_id: input_boolean.disable_occupancy
            state: 'off'
        action:
          - service: timer.start
            entity_id: timer.bedroom_light_off_timer
            data_template: 
                duration: > 
                    {%- if states("sensor.period_of_day") == 'nightlight' -%}
                    00:20:00
                    {%- elif states("sensor.period_of_day") == 'daylight'  -%}
                    00:10:00
                    {%- else -%}
                    00:15:00
                    {% endif %} 
        mode: single

      - alias: "Light: Cancel light-off Timer for Bedroom"
        id: bedroom_light_off_timer_cancel
        initial_state: true
        trigger:
          - platform: state
            entity_id: binary_sensor.bedroom_auto_light_off_sensor
            to: 'off'
          - platform: state
            entity_id: input_boolean.disable_occupancy
            to: 'on'
        action:
          - service: timer.cancel
            entity_id: timer.bedroom_light_off_timer
        mode: restart

      - alias: "Light: Turn OFF light in Living Room by timer"
        id: living_room_auto_light_off
        description: 'Автоматичне вимкнення освітлення у вітальні'
        trigger:
        # По Таймеру
          - platform: event
            event_type: timer.finished
            event_data:
                entity_id: timer.living_room_light_off_timer
        condition:
          - condition: state
            entity_id: switch.living_room_light_switch
            state: 'on'
        action:
          - service: switch.turn_off
            entity_id: switch.living_room_light_switch
        mode: single

      - alias: "Light: Start light-off Timer for Living Room"
        id: living_room_light_off_timer_start
        description: 'Активація таймера автоматичного вимкнення світла у вітальні'
        initial_state: true
        trigger:
        # Умови для запуску таймера освітлення
          - platform: state
            entity_id: binary_sensor.living_room_auto_light_off_sensor
            to: 'on'
        condition:
          - condition: state
            entity_id: input_boolean.disable_occupancy
            state: 'off'
        action:
          - service: timer.start
            entity_id: timer.living_room_light_off_timer
            data_template: 
                duration: > 
                    {%- if states("sensor.period_of_day") == 'nightlight' -%}
                    00:20:00
                    {%- elif states("sensor.period_of_day") == 'daylight'  -%}
                    00:10:00
                    {%- else -%}
                    00:15:00
                    {% endif %} 
        mode: single

      - alias: "Light: Cancel light-off Timer for Living Room"
        id: living_room_light_off_timer_cancel
        initial_state: true
        trigger:
          - platform: state
            entity_id: binary_sensor.living_room_auto_light_off_sensor
            to: 'off'
          - platform: state
            entity_id: input_boolean.disable_occupancy
            to: 'on'
        action:
          - service: timer.cancel
            entity_id: timer.living_room_light_off_timer
        mode: restart

      - alias: "Light: Hallway RGB Bulb Manual Switch Actions"
        id: hallway_light_rgb_bulb_manual_switch_actions
        trigger:
          - platform: state
            entity_id: sensor.hallway_rgb_bulb_switch_action
            attribute: action
            to:
              - single
              - double
              - hold
        action:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.to_state.attributes.action == 'single' }}"
                sequence:
                  - service: input_boolean.toggle
                    entity_id: input_boolean.hallway_rgb_bulb_switch_single_status
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.to_state.attributes.action == 'double' }}"
                sequence:
            #       some actions
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.to_state.attributes.action == 'hold'   }}"
                sequence:
            #       some actions
        mode: single

      - alias: "Light: Turn OFF Hallway RGB Bulb after power outage"
        id: hallway_light_rgb_bulb_turn_off_after_power_outage
        initial_state: true
        trigger:
        - platform: state
          entity_id: light.hallway_rgb_bulb
          to: 'on'
        condition:
        - condition: state
          entity_id: binary_sensor.hallway_rgb_bulb_control
          state: 'off'
        action:
        - service: light.turn_off
          entity_id: light.hallway_rgb_bulb
        mode: single
