energy_config:

    recorder:
        include:
            entities:
              - sensor.tariff_energy_cost_base
              - sensor.tariff_energy_cost
              - sensor.average_sockets_voltage
              - sensor.energy_active_tariff
              - binary_sensor.exceed_electricity_consumption_limit
              - binary_sensor.bedroom_air_conditioner_socket_status
              - binary_sensor.bedroom_socket_heating_status
              - binary_sensor.living_room_air_conditioner_socket_status
              - binary_sensor.living_room_desktop_equipment_socket_status
              - binary_sensor.living_room_desktop_pc_strip_socket_status
              - binary_sensor.living_room_socket_heating_status
              - binary_sensor.living_room_laptop_charging_socket_status
              - binary_sensor.living_room_ns_socket_status
              - binary_sensor.kitchen_socket_heating_status
              - binary_sensor.kitchen_coffee_machine_and_microwave_socket_status
              - binary_sensor.kitchen_oven_socket_status
              - binary_sensor.ecoflow_charging_socket_status
              - binary_sensor.ecoflow_charging_required
              - binary_sensor.bluetti_charging_socket_status
              - binary_sensor.bathroom_washing_machine_socket_status
              - binary_sensor.voltage_out_of_range
              - switch.living_room_aquarium_main_lighting
              - input_number.tarrif_energy_cost_calibrate_base
            entity_globs:
              - select.tuya_clamp_meter_*
              - sensor.tuya_clamp_meter_*
              - sensor.energy_counter_total
              - sensor.girier_socket_2_*
              - sensor.bathroom_washing_machine_socket*
              - sensor.bedroom_air_conditioner_socket*
              - sensor.bedroom_socket_heating*
              - sensor.kitchen_socket_heating*
              - sensor.kitchen_coffee_machine_and_microwave_socket*
              - sensor.kitchen_oven_socket*
              - sensor.ecoflow_charging_socket*
              - sensor.bluetti_charging_socket*
              - sensor.living_room_aquarium_main_lighting*
              - sensor.living_room_air_conditioner_socket*
              - sensor.living_room_laptop_charging_socket*
              - sensor.living_room_ns_socket*
              - sensor.living_room_desktop_*
              - sensor.living_room_socket_heating*
              - sensor.river_pro_*
              - switch.living_room_aquarium_power_strip_*
              - switch.*_socket*

    homeassistant:
        customize:
            binary_sensor.bathroom_washing_machine_socket_status:
                friendly_name: 'Пральна Машина'
            binary_sensor.ecoflow_charging_socket_status:
                friendly_name: 'ECOFLOW - розетка, статус'
            binary_sensor.bluetti_charging_socket_status:
                friendly_name: 'BLUETTI - розетка, статус'
            binary_sensor.bedroom_air_conditioner_socket_status:
                friendly_name: 'Кондиціонер у Спальні'
            binary_sensor.living_room_air_conditioner_socket_status:
                friendly_name: 'Кондиціонер у Вітальні'
            binary_sensor.bedroom_socket_heating_status:
                friendly_name: 'Обігрівач у Спальні'
            binary_sensor.living_room_socket_heating_status:
                friendly_name: 'Обігрівач у Вітальні'
            binary_sensor.kitchen_socket_heating_status:
                friendly_name: 'Обігрівач на Кухні'
            binary_sensor.kitchen_coffee_machine_and_microwave_socket_status:
                friendly_name: 'Кавомашина та Мікрохвильова піч на Кухні'
            binary_sensor.kitchen_oven_socket_status:
                friendly_name: 'Духовка на Кухні'
            binary_sensor.exceed_electricity_consumption_limit:
                friendly_name: 'Перевищення Ліміту Споживання'
            sensor.river_pro_main_full_capacity_wh:
                friendly_name: 'RIVER Pro Main Full Capacity (Wh)'
            sensor.river_pro_slave_full_capacity_wh:
                friendly_name: 'RIVER Pro Slave Full Capacity (Wh)'
            sensor.river_pro_total_full_capacity_wh:
                friendly_name: 'RIVER Pro Total Full Capacity (Wh)'
            sensor.tuya_clamp_meter_monthly_total:
                friendly_name: 'Споживання за Місяць (всього)'
            sensor.energy_counter_total:
                friendly_name: 'Лічильник (загальний)'
            sensor.energy_counter_total_day:
                friendly_name: 'Лічильник (день)'
            sensor.energy_counter_total_night:
                friendly_name: 'Лічильник (ніч)'
            input_number.energy_counter_calibration_day:
                friendly_name: 'Калібрування Лічильника (день)'
            input_number.energy_counter_calibration_night:
                friendly_name: 'Калібрування Лічильника (ніч)'
            input_number.tarrif_energy_cost_calibrate_base:
                friendly_name: 'Калібрування Тарифу на Електроенергію'
            input_number.electricity_consumption_limit:
                friendly_name: 'Ліміт Споживання Електроенергії'
            input_number.voltage_over_threshold:
                friendly_name: 'Over Voltage Threshold'
            input_number.voltage_under_threshold:
                friendly_name: 'Under Voltage Threshold'
            switch.ecoflow_charging_socket:
                friendly_name: 'ECOFLOW - Розетка'
            switch.bluetti_charging_socket:
                friendly_name: 'BLUETTI - Розетка'
            switch.bathroom_washing_machine_socket:
                friendly_name: 'Ванна - Пральна машина, Розетка'
            switch.bedroom_air_conditioner_socket:
                friendly_name: 'Спальня - Кондиціонер, Розетка'
            switch.bedroom_socket_heating:
                friendly_name: 'Спальня - Обігрівач, Розетка'
            switch.bedroom_light_switch:
                friendly_name: 'Спальня - Люстра, Вимикач'
            switch.living_room_air_conditioner_socket:
                friendly_name: 'Вітальня - Кондиціонер, Розетка'
            switch.living_room_aquarium_main_lighting:
                friendly_name: 'Вітальня - Акваріум, Розетка'
            switch.living_room_aquarium_power_strip_l1:
                friendly_name: 'Вітальня - Акваріум, Аерація'
            switch.living_room_aquarium_power_strip_l2:
                friendly_name: 'Вітальня - Акваріум, Фільтрація'
            switch.living_room_aquarium_power_strip_l3:
                friendly_name: 'Вітальня - Акваріум, Освітлення'
            switch.living_room_aquarium_power_strip_l4:
                friendly_name: 'Вітальня - Акваріум, Місячне Сяйво'
            switch.living_room_aquarium_power_strip_l5:
                friendly_name: 'Вітальня - Акваріум, USB'
            switch.living_room_laptop_charging_socket:
                friendly_name: 'Вітальня - Laptop Charger, Розетка'
            switch.living_room_ns_socket:
                friendly_name: 'Вітальня - Nintendo Switch, Розетка'
            switch.living_room_desktop_equipment_socket:
                friendly_name: 'Вітальня - Робочий Стіл - Обладнання, Розетка'
            switch.living_room_desktop_pc_strip_socket:
                friendly_name: 'Вітальня - Робочий Стіл - ПК, Розетка'
            switch.living_room_light_switch:
                friendly_name: 'Вітальня - Люстра, Вимикач'
            switch.living_room_socket_heating:
                friendly_name: 'Вітальня - Обігрівач, Розетка'
            switch.kitchen_socket_heating:
                friendly_name: 'Кухня - Обігрівач, Розетка'
            switch.kitchen_coffee_machine_and_microwave_socket:
                friendly_name: 'Кухня - Кавомашина/Мікрохвильова піч, Розетка'
            switch.kitchen_oven_socket:
                friendly_name: 'Кухня - Духовка, Розетка'
            light.hallway_rgb_bulb:
                friendly_name: 'Передпокій - RGB-Лампа'
            sensor.bathroom_washing_machine_socket_integration:
                icon: mdi:chart-histogram
            sensor.bedroom_air_conditioner_socket_integration:
                icon: mdi:chart-histogram
            sensor.bedroom_socket_heating_integration:
                icon: mdi:chart-histogram
            sensor.ecoflow_charging_socket_integration:
                icon: mdi:chart-histogram
            sensor.bluetti_charging_socket_integration:
                icon: mdi:chart-histogram
            sensor.kitchen_socket_heating_integration:
                icon: mdi:chart-histogram
            sensor.kitchen_coffee_machine_and_microwave_socket_integration:
                icon: mdi:chart-histogram
            sensor.kitchen_oven_socket_integration:
                icon: mdi:chart-histogram
            sensor.living_room_air_conditioner_socket_integration:
                icon: mdi:chart-histogram
            sensor.living_room_aquarium_main_lighting_integration:
                icon: mdi:chart-histogram
            sensor.living_room_socket_heating_integration:
                icon: mdi:chart-histogram
            sensor.living_room_ns_socket_integration:
                icon: mdi:chart-histogram
            sensor.living_room_laptop_charging_socket_integration:
                icon: mdi:chart-histogram
            sensor.living_room_desktop_equipment_socket_integration:
                icon: mdi:chart-histogram
            sensor.living_room_desktop_pc_strip_socket_integration:
                icon: mdi:chart-histogram
            sensor.girier_socket_2_integration:
                icon: mdi:chart-histogram
            sensor.tuya_clamp_meter_integration:
                icon: mdi:chart-histogram

    input_datetime:

        tarrif_energy_electric_heating_start_date:
            name: Start Date for Electric Heating Period
            has_date: true
            has_time: false

        tarrif_energy_electric_heating_finish_date:
            name: Finish Date for Electric Heating Period
            has_date: true
            has_time: false

    input_boolean:

        enable_electric_heating_tarrif:
            name: Тариф Електроопалення
            icon: mdi:cash-clock

    input_number:

        tarrif_energy_cost_calibrate_base:
            mode: box
            min: 1.68
            max: 99.99
            step: 0.01
            unit_of_measurement: ₴/kWh
            icon: mdi:cash-multiple

        tarrif_energy_cost_electric_heating_base:
            mode: box
            min: 1.68
            max: 99.99
            step: 0.01
            unit_of_measurement: ₴/kWh
            icon: mdi:cash-multiple

        energy_counter_calibration_day:
            mode: box
            min: 0.000
            max: 100000.000
            step: 0.001
            unit_of_measurement: kWh
            icon: mdi:calculator-variant-outline

        energy_counter_calibration_night:
            mode: box
            min: 0.000
            max: 100000.000
            step: 0.001
            unit_of_measurement: kWh
            icon: mdi:calculator-variant

        voltage_under_threshold:
            mode: slider
            min: 175
            max: 220
            step: 1
            unit_of_measurement: V
            icon: mdi:flash-triangle-outline

        voltage_over_threshold:
            mode: slider
            min: 220
            max: 265
            step: 1
            unit_of_measurement: V
            icon: mdi:flash-triangle-outline

        electricity_consumption_limit:
            mode: box
            min: 1000
            max: 12000
            step: 1000
            unit_of_measurement: kWh
            icon: mdi:fuse

    scrape:

      - resource: https://bankchart.com.ua/spravochniki/indikatory_rynka/electric_tariff
        scan_interval: 86400
        sensor:
          - name: 'Tariff Energy Cost BASE'
            unique_id: sensor_tariff_energy_cost_base
            select: '#branding-wrapper > section > div > div > div.table-currency > div.row.row-last > div:nth-child(5) > p'
            unit_of_measurement: '₴/kWh'
            icon: mdi:lightning-bolt-circle
            value_template: '{{ value | float(0) / 100 | round(2) }}'

    sensor:

      - platform: min_max
        name: average_sockets_voltage
        unique_id: sensor_average_sockets_voltage
        type: mean
        round_digits: 1
        entity_ids:
          - sensor.bathroom_washing_machine_socket_voltage
          - sensor.bedroom_air_conditioner_socket_voltage
          - sensor.bedroom_socket_heating_voltage
          - sensor.bluetti_charging_socket_voltage
          - sensor.kitchen_socket_heating_voltage
          - sensor.kitchen_coffee_machine_and_microwave_socket_voltage
          - sensor.kitchen_oven_socket_voltage
          - sensor.living_room_ns_socket_voltage
          - sensor.living_room_air_conditioner_socket_voltage
          - sensor.living_room_socket_heating_voltage

      - platform: integration
        name: tuya_clamp_meter_integration
        unique_id: sensor_tuya_clamp_meter_integration
        source: sensor.tuya_clamp_meter_power
        unit_prefix: k
        unit_time: h
        method: trapezoidal
        round: 2

      - platform: integration
        name: ecoflow_charging_socket_integration
        unique_id: sensor_ecoflow_charging_socket_socket_integration
        source: sensor.ecoflow_charging_socket_power
        unit_prefix: k
        unit_time: h
        method: trapezoidal
        round: 2

      - platform: integration
        name: bluetti_charging_socket_integration
        unique_id: sensor_bluetti_charging_socket_socket_integration
        source: sensor.bluetti_charging_socket_power
        unit_prefix: k
        unit_time: h
        method: trapezoidal
        round: 2

      - platform: integration
        name: bathroom_washing_machine_socket_integration
        unique_id: sensor_bathroom_washing_machine_socket_integration
        source: sensor.bathroom_washing_machine_socket_power
        unit_prefix: k
        unit_time: h
        method: trapezoidal
        round: 2

      - platform: integration
        name: living_room_laptop_charging_socket_integration
        unique_id: sensor_living_room_laptop_charging_socket_integration
        source: sensor.living_room_laptop_charging_socket_power
        unit_prefix: k
        unit_time: h
        method: trapezoidal
        round: 2

      - platform: integration
        name: living_room_desktop_equipment_socket_integration
        unique_id: sensor_living_room_desktop_equipment_socket_integration
        source: sensor.living_room_desktop_equipment_socket_power
        unit_prefix: k
        unit_time: h
        method: trapezoidal
        round: 2

      - platform: integration
        name: living_room_ns_socket_integration
        unique_id: sensor_living_room_ns_socket_integration
        source: sensor.living_room_ns_socket_power
        unit_prefix: k
        unit_time: h
        method: trapezoidal
        round: 2

      - platform: integration
        name: living_room_desktop_pc_strip_socket_integration
        unique_id: sensor_living_room_desktop_pc_strip_socket_integration
        source: sensor.living_room_desktop_pc_strip_socket_power
        unit_prefix: k
        unit_time: h
        method: trapezoidal
        round: 2

      - platform: integration
        name: bedroom_air_conditioner_socket_integration
        unique_id: sensor_bedroom_air_conditioner_socket_integration
        source: sensor.bedroom_air_conditioner_socket_power
        unit_prefix: k
        unit_time: h
        method: trapezoidal
        round: 2

      - platform: integration
        name: bedroom_socket_heating_integration
        unique_id: sensor_bedroom_socket_heating_integration
        source: sensor.bedroom_socket_heating_power
        unit_prefix: k
        unit_time: h
        method: trapezoidal
        round: 2

      - platform: integration
        name: kitchen_socket_heating_integration
        unique_id: sensor_kitchen_socket_heating_integration
        source: sensor.kitchen_socket_heating_power
        unit_prefix: k
        unit_time: h
        method: trapezoidal
        round: 2

      - platform: integration
        name: kitchen_coffee_machine_and_microwave_socket_integration
        unique_id: sensor_kitchen_coffee_machine_and_microwave_socket_integration
        source: sensor.kitchen_coffee_machine_and_microwave_socket_power
        unit_prefix: k
        unit_time: h
        method: trapezoidal
        round: 2

      - platform: integration
        name: kitchen_oven_socket_integration
        unique_id: sensor_kitchen_oven_socket_integration
        source: sensor.kitchen_oven_socket_power
        unit_prefix: k
        unit_time: h
        method: trapezoidal
        round: 2

      - platform: integration
        name: living_room_air_conditioner_socket_integration
        unique_id: sensor_living_room_air_conditioner_socket_integration
        source: sensor.living_room_air_conditioner_socket_power
        unit_prefix: k
        unit_time: h
        method: trapezoidal
        round: 2

      - platform: integration
        name: living_room_aquarium_main_lighting_integration
        unique_id: sensor_living_room_aquarium_main_lighting_integration
        source: sensor.living_room_aquarium_main_lighting_power
        unit_prefix: k
        unit_time: h
        method: trapezoidal
        round: 2

      - platform: integration
        name: living_room_socket_heating_integration
        unique_id: sensor_living_room_socket_heating_integration
        source: sensor.living_room_socket_heating_power
        unit_prefix: k
        unit_time: h
        method: trapezoidal
        round: 2

      - platform: integration
        name: girier_socket_2_integration
        unique_id: sensor_girier_socket_2_integration
        source: sensor.girier_socket_2_power
        unit_prefix: k
        unit_time: h
        method: trapezoidal
        round: 2


    utility_meter:

        tuya_clamp_meter_daily:
            source: sensor.tuya_clamp_meter_integration
            name: Споживання за добу
            unique_id: sensor_tuya_clamp_meter_daily
            cycle: daily
            tariffs:
                - day
                - night

        tuya_clamp_meter_weekly:
            source: sensor.tuya_clamp_meter_integration
            name: Споживання за тиждень
            unique_id: sensor_tuya_clamp_meter_weekly
            cycle: weekly
            tariffs:
                - day
                - night

        tuya_clamp_meter_monthly:
            source: sensor.tuya_clamp_meter_integration
            name: Споживання за місяць
            unique_id: sensor_tuya_clamp_meter_monthly
            cycle: monthly
            tariffs:
                - day
                - night

        tuya_clamp_meter_counter:
            source: sensor.tuya_clamp_meter_integration
            unique_id: sensor_tuya_clamp_meter_counter
            tariffs:
                - day
                - night

        tuya_clamp_meter_monthly_total:
            source: sensor.tuya_clamp_meter_integration
            unique_id: sensor_tuya_clamp_meter_monthly_total
            cycle: monthly

        ecoflow_charging_socket_meter_monthly:
            unique_id: sensor_ecoflow_charging_socket_meter_monthly
            source: sensor.ecoflow_charging_socket_integration
            cycle: monthly

        bluetti_charging_socket_meter_monthly:
            unique_id: sensor_bluetti_charging_socket_meter_monthly
            source: sensor.bluetti_charging_socket_integration
            cycle: monthly


        bathroom_washing_machine_socket_meter_monthly:
            unique_id: sensor_bathroom_washing_machine_socket_meter_monthly
            source: sensor.bathroom_washing_machine_socket_integration
            cycle: monthly

        bedroom_air_conditioner_socket_meter_monthly:
            unique_id: sensor_bedroom_air_conditioner_socket_meter_monthly
            source: sensor.bedroom_air_conditioner_socket_integration
            cycle: monthly

        bedroom_socket_heating_meter_monthly:
            unique_id: sensor_bedroom_socket_heating_meter_monthly
            source: sensor.bedroom_socket_heating_integration
            cycle: monthly

        kitchen_socket_heating_meter_monthly:
            unique_id: sensor_kitchen_socket_heating_meter_monthly
            source: sensor.kitchen_socket_heating_integration
            cycle: monthly

        kitchen_coffee_machine_and_microwave_socket_meter_monthly:
            unique_id: sensor_kitchen_coffee_machine_and_microwave_socket_meter_monthly
            source: sensor.kitchen_coffee_machine_and_microwave_socket_integration
            cycle: monthly

        kitchen_oven_socket_meter_monthly:
            unique_id: sensor_kitchen_oven_socket_meter_monthly
            source: sensor.kitchen_oven_socket_integration
            cycle: monthly

        living_room_laptop_charging_socket_meter_monthly:
            unique_id: sensor_living_room_laptop_charging_socket_meter_monthly
            source: sensor.living_room_laptop_charging_socket_integration
            cycle: monthly

        living_room_ns_socket_meter_monthly:
            unique_id: sensor_living_room_ns_socket_meter_monthly
            source: sensor.living_room_ns_socket_integration
            cycle: monthly

        living_room_desktop_pc_strip_socket_meter_monthly:
            unique_id: sensor_living_room_desktop_pc_strip_socket_meter_monthly
            source: sensor.living_room_desktop_pc_strip_socket_integration
            cycle: monthly

        living_room_desktop_equipment_socket_meter_monthly:
            unique_id: sensor_living_room_desktop_equipment_socket_meter_monthly
            source: sensor.living_room_desktop_equipment_socket_integration
            cycle: monthly

        living_room_air_conditioner_socket_meter_monthly:
            unique_id: sensor_living_room_air_conditioner_socket_meter_monthly
            source: sensor.living_room_air_conditioner_socket_integration
            cycle: monthly

        living_room_aquarium_main_lighting_meter_monthly:
            unique_id: sensor_living_room_aquarium_main_lighting_meter_monthly
            source: sensor.living_room_aquarium_main_lighting_integration
            cycle: monthly

        living_room_socket_heating_meter_monthly:
            unique_id: sensor_living_room_socket_heating_meter_monthly
            source: sensor.living_room_socket_heating_integration
            cycle: monthly

        girier_socket_2_meter_monthly:
            unique_id: sensor_girier_socket_2_meter_monthly
            source: sensor.girier_socket_2_integration
            cycle: monthly

    template:

      - trigger:
          - platform: state
            entity_id: switch.ecoflow_charging_socket
        sensor:
          - name: ecoflow_charging_socket_breaker
            unique_id: ecoflow_charging_socket_breaker
            state: >
                {% if is_state('switch.ecoflow_charging_socket','on') %}
                    {% if (is_state('switch.ecoflow_charging_socket_under_voltage_breaker','on')
                        or is_state('switch.ecoflow_charging_socket_over_voltage_breaker','on')
                        or is_state('switch.ecoflow_charging_socket_power_breaker','on')
                        or is_state('switch.ecoflow_charging_socket_over_current_breaker','on')
                        or is_state('switch.ecoflow_charging_socket_temperature_breaker','on')) %}
                        on
                    {% else %}
                        off
                    {% endif %}
                {% elif is_state('switch.ecoflow_charging_socket','off') %}
                    {% if is_state('switch.ecoflow_charging_socket_under_voltage_breaker','on') and (states('sensor.ecoflow_charging_socket_voltage') | int < states('number.ecoflow_charging_socket_under_voltage_threshold') | int) %}
                        under_voltage
                    {% elif is_state('switch.ecoflow_charging_socket_over_voltage_breaker','on') and (states('sensor.ecoflow_charging_socket_voltage') | int > states('number.ecoflow_charging_socket_over_voltage_threshold') | int) %}
                        over_voltage
                    {% elif is_state('switch.ecoflow_charging_socket_power_breaker','on') and (states('sensor.ecoflow_charging_socket_power') | int / 1000 > states('number.ecoflow_charging_socket_power_threshold') | int) %}
                        power
                    {% elif is_state('switch.ecoflow_charging_socket_over_current_breaker','on') and (states('sensor.ecoflow_charging_socket_current') | int > states('number.ecoflow_charging_socket_over_current_threshold') | int) %}
                        over_current
                    {% elif is_state('switch.ecoflow_charging_socket_temperature_breaker','on') and (states('sensor.ecoflow_charging_socket_temperature') | int > states('number.ecoflow_charging_socket_temperature_threshold') | int) %}
                        temperature
                    {% else %}
                        switch
                    {% endif %}
                {% else %}
                    unknown
                {% endif %}
            icon: >
                {% set status = states('sensor.ecoflow_charging_socket_breaker') %}
                mdi:toggle-switch-variant{{'-off' if status == 'off'}}
            attributes:
              history: >
                {% set current = this.attributes.get('history',[]) %}
                {% set new = [{
                  "event": states('sensor.ecoflow_charging_socket_breaker'),
                  "time": now().isoformat()}] %}
                {{(new + current)[:10]}}

      - sensor:

          - name: 'Energy: Active Tariff'
            unique_id: sensor_energy_active_tariff
            icon: mdi:lightning-bolt-circle
            state: >
                {% set n = now().hour %}
                {% if (n > 22) or (n < 7) %}
                night
                {% else %}
                day
                {% endif %}

          - name: 'Tariff Energy Cost'
            unique_id: sensor_tariff_energy_cost
            unit_of_measurement: '₴/kWh'
            icon: mdi:home-lightning-bolt
            state: > 
                {% set k = 1 %}
                {% if is_state("sensor.energy_active_tariff","night") %}
                {% set k = 0.5 %}
                {% endif %}
                {% set date = now().strftime('%Y-%m-%d') %}

                {% if ( is_state('input_boolean.enable_electric_heating_tarrif','off') ) or
                      (date < states("input_datetime.tarrif_energy_electric_heating_start_date")  or
                       date > states("input_datetime.tarrif_energy_electric_heating_finish_date")) %}
                  {% if is_state("sensor.tariff_energy_cost_base","unavailable") or
                        is_state("sensor.tariff_energy_cost_base","0.0") or 
                        is_state("sensor.tariff_energy_cost_base","0") or 
                        is_state("sensor.tariff_energy_cost_base","unknown") %}
                    {{ states("input_number.tarrif_energy_cost_calibrate_base") | float(0) * k | round(2) }}
                  {% else %}
                    {{ states("sensor.tariff_energy_cost_base") | float(0) * k | round(2) }}
                  {% endif %}
                {% else %}
                  {{ states("input_number.tarrif_energy_cost_electric_heating_base") | float(0) * k | round(2) }}
                {% endif %}

          - name: river_pro_main_full_capacity_wh
            unique_id: sensor_river_pro_main_full_capacity_wh
            device_class: energy_storage
            unit_of_measurement: Wh
            icon: mdi:home-battery-outline
            state: >
                {{ ((states('sensor.river_pro_main_full_capacity') | int(0) * states('sensor.river_pro_battery_volts') | int(0)) / 1000) | round(0) }}

          - name: river_pro_slave_full_capacity_wh
            unique_id: sensor_river_pro_slave_full_capacity_wh
            device_class: energy_storage
            unit_of_measurement: Wh
            icon: mdi:home-battery-outline
            state: >
                {{ ((states('sensor.river_pro_slave_full_capacity') | int(0) * states('sensor.river_pro_slave_battery_volts') | int(0)) / 1000) | round(0) }}

          - name: river_pro_total_full_capacity_wh
            unique_id: sensor_river_pro_total_full_capacity_wh
            device_class: energy_storage
            unit_of_measurement: Wh
            icon: mdi:home-battery
            state: >
                {{ states('sensor.river_pro_main_full_capacity_wh') | int(0) + states('sensor.river_pro_slave_full_capacity_wh') | int(0) }}

          - name: river_pro_main_remain_capacity_wh
            unique_id: sensor_river_pro_main_remain_capacity_wh
            device_class: energy_storage
            unit_of_measurement: Wh
            icon: mdi:home-battery-outline
            state: >
                {{ ((states('sensor.river_pro_main_remain_capacity') | int(0) * states('sensor.river_pro_battery_volts') | int(0)) / 1000) | round(0) }}

          - name: river_pro_slave_remain_capacity_wh
            unique_id: sensor_river_pro_slave_remain_capacity_wh
            device_class: energy_storage
            unit_of_measurement: Wh
            icon: mdi:home-battery-outline
            state: >
                {{ ((states('sensor.river_pro_slave_remain_capacity') | int(0) * states('sensor.river_pro_slave_battery_volts') | int(0)) / 1000) | round(0) }}

          - name: river_pro_total_remain_capacity_wh
            unique_id: sensor_river_pro_total_remain_capacity_wh
            device_class: energy_storage
            unit_of_measurement: Wh
            icon: mdi:home-battery
            state: >
                {{ states('sensor.river_pro_main_remain_capacity_wh') | int(0) + states('sensor.river_pro_slave_remain_capacity_wh') | int(0) }}

          - name: river_pro_total_battery_level
            unique_id: sensor_river_pro_total_battery_level
            device_class: battery
            unit_of_measurement: '%'
            state: >
                {% if not(is_state('sensor.river_pro_main_battery_level', ['unavailable','unknown'])) %}
                  {% set MAIN = states('sensor.river_pro_main_battery_level') | int(0) %}
                {% endif %}
                {% if not(is_state('sensor.river_pro_slave_battery_level', ['unavailable','unknown'])) %}
                  {% set SLAVE = states('sensor.river_pro_slave_battery_level') | int(0) %}
                {% endif %}
                {% set TOTAL = 0 %}
                {% set COUNT = 0 %}
                {% if MAIN is defined %}
                  {% set TOTAL = TOTAL + MAIN %}
                  {% set COUNT = COUNT + 1 %}
                {% endif %}
                {% if SLAVE is defined %}
                  {% set TOTAL = TOTAL + SLAVE %}
                  {% set COUNT = COUNT + 1 %}
                {% endif %}
                {% if COUNT > 0 %}
                  {{ ( TOTAL / COUNT) | round(0) }}
                {% else %}
                  0
                {% endif %}

          - name: energy_counter_total
            unique_id: sensor_energy_counter_total
            device_class: energy
            unit_of_measurement: kWh
            icon: mdi:meter-electric
            state: >
                {{ ( states('sensor.energy_counter_total_night') | float(0) + states('sensor.energy_counter_total_day') | float(0) ) | round(2) }}

          - name: energy_counter_total_day
            unique_id: sensor_energy_counter_total_day
            device_class: energy
            unit_of_measurement: kWh
            icon: mdi:meter-electric
            state: >
                {{ ( states('sensor.tuya_clamp_meter_counter_day') | float(0) + states('input_number.energy_counter_calibration_day') | float(0) ) | round(2) }}

          - name: energy_counter_total_night
            unique_id: sensor_energy_counter_total_night
            device_class: energy
            unit_of_measurement: kWh
            icon: mdi:meter-electric
            state: >
                {{ ( states('sensor.tuya_clamp_meter_counter_night') | float(0) + states('input_number.energy_counter_calibration_night') | float(0) ) | round(2) }}

          - name: tuya_clamp_meter_daily_total
            unique_id: sensor_tuya_clamp_meter_daily_total
            device_class: energy
            unit_of_measurement: kWh
            icon: mdi:counter
            state: >
                {{ ( states('sensor.tuya_clamp_meter_daily_night') | float(0) + states('sensor.tuya_clamp_meter_daily_day') | float(0) ) | round(2) }}

          - name: tuya_clamp_meter_weekly_total
            unique_id: sensor_tuya_clamp_meter_weekly_total
            device_class: energy
            unit_of_measurement: kWh
            icon: mdi:counter
            state: >
                {{ ( states('sensor.tuya_clamp_meter_weekly_night') | float(0) + states('sensor.tuya_clamp_meter_weekly_day') | float(0) ) | round(2) }}

      - binary_sensor:

          - name: voltage_out_of_range
            unique_id: sensor_voltage_out_of_range 
            device_class: problem
            icon: mdi:flash-triangle-outline
            delay_on: '00:00:01'
            delay_off: '00:10:00'
            state: >
                {% if is_state('sensor.tuya_clamp_meter_voltage', ['unavailable','unknown']) %}
                off
                {% else %}
                    {% set v = (states('sensor.tuya_clamp_meter_voltage') | int )  %}
                    {% if (v < states('input_number.voltage_under_threshold') | int) or (v > states('input_number.voltage_over_threshold') | int) %}
                    on
                    {% else %}
                    off
                    {% endif %}
                {% endif %}

          - name: exceed_electricity_consumption_limit
            unique_id: binary_sensor_exceed_electricity_consumption_limit
            device_class: problem
            icon: mdi:fuse-alert
            state: >-
                {{ states('input_number.electricity_consumption_limit') | int(0) <= states('sensor.tuya_clamp_meter_power') | int(0) }}

          - name: ecoflow_charging_required
            unique_id: binary_sensor_ecoflow_charging_required
            device_class: problem
            state: >-
                {% set mode = states('binary_sensor.ecoflow_charging_required') %}
                {% if (mode == 'off') and 
                      ((states('number.river_pro_max_charge_level') | int(0) - states('sensor.river_pro_total_battery_level') | int(0)) > ((states('number.river_pro_max_charge_level') | int(0) * 0.10) | int(0) )) and
                      (states('sensor.river_pro_ac_out_power') | int (0) == 0) %}
                  {% set mode = 'on' %}
                {% endif %}
                {%if (mode == 'on') and 
                     (states('sensor.river_pro_total_battery_level') | int(0) == states('number.river_pro_max_charge_level') | int(0)) or 
                     (states('sensor.river_pro_ac_out_power') | int (0) > 0) %}
                  {% set mode = 'off' %}
                {% endif %}
                {{ mode }}
            icon: mdi:fuel-cell

          - name: ecoflow_charging_socket_status
            unique_id: binary_sensor_ecoflow_charging_socket_status
            device_class: battery_charging
            state: >-
                {% if (states("sensor.ecoflow_charging_socket_power") | int(0) > 0) %}
                on
                {% else %}
                off
                {% endif %}
            icon: mdi:generator-portable

          - name: bluetti_charging_socket_status
            unique_id: binary_sensor_bluetti_charging_socket_status
            device_class: battery_charging
            state: >-
                {% if (states("sensor.bluetti_charging_socket_power") | int(0) > 0) %}
                on
                {% else %}
                off
                {% endif %}
            icon: mdi:generator-portable

          - name: bedroom_air_conditioner_socket_status
            unique_id: binary_sensor_bedroom_air_conditioner_socket_status
            device_class: cold
            state: >-
                {% if (states("sensor.bedroom_air_conditioner_socket_power") | int(0) > 5) %}
                on
                {% else %}
                off
                {% endif %}
            icon: >-
                {% if is_state("binary_sensor.bedroom_air_conditioner_socket_status","on") %}
                mdi:hvac
                {% else %}
                mdi:hvac-off
                {% endif %}

          - name: bedroom_socket_heating_status
            unique_id:  binary_sensor_bedroom_socket_heating_status
            device_class: heat
            state: >-
                {% if (states("sensor.bedroom_socket_heating_power") | int(0) > 0) %}
                on
                {% else %}
                off
                {% endif %}
            icon: >-
                {% if is_state("binary_sensor.bedroom_socket_heating_status","on") %}
                mdi:radiator
                {% elif is_state("input_boolean.heating_status","off") or is_state("climate.bedroom_heater","off") %}
                mdi:radiator-off
                {% else %}
                mdi:radiator-disabled
                {% endif %}

          - name: living_room_ns_socket_status
            unique_id:  binary_sensor_living_room_ns_socket_status
            device_class: battery_charging
            state: >-
                {% if (states("sensor.living_room_ns_socket_power") | int(0) > 0) %}
                on
                {% else %}
                off
                {% endif %}
            icon: >-
                {% if is_state("binary_sensor.living_room_ns_socket_status","on") %}
                mdi:microsoft-xbox-controller-battery-charging
                {% else %}
                mdi:microsoft-xbox-controller-off
                {% endif %}

          - name: living_room_laptop_charging_socket_status
            unique_id:  binary_sensor_living_room_laptop_charging_socket_status
            device_class: battery_charging
            state: >-
                {% if (states("sensor.living_room_laptop_charging_socket_power") | int(0) > 0) %}
                on
                {% else %}
                off
                {% endif %}
            icon: >-
                {% if is_state("binary_sensor.living_room_laptop_charging_socket_status","on") %}
                mdi:laptop
                {% else %}
                mdi:laptop-off
                {% endif %}

          - name: living_room_desktop_equipment_socket_status
            unique_id:  binary_sensor_living_room_desktop_equipment_socket_status
            device_class: power
            state: >-
                {% if (states("sensor.living_room_desktop_equipment_socket_power") | int(0) > 0) %}
                on
                {% else %}
                off
                {% endif %}
            icon: >-
                {% if is_state("binary_sensor.living_room_desktop_equipment_socket_status","on") %}
                mdi:desk-lamp-on
                {% else %}
                mdi:desk-lamp-off
                {% endif %}

          - name: living_room_desktop_pc_strip_socket_status
            unique_id:  binary_sensor_living_room_desktop_pc_strip_socket_status
            device_class: power
            state: >-
                {% if (states("sensor.living_room_desktop_pc_strip_socket_power") | int(0) > 0) %}
                on
                {% else %}
                off
                {% endif %}
            icon: >-
                {% if is_state("binary_sensor.living_room_desktop_pc_strip_socket_status","on") %}
                mdi:monitor-speaker
                {% else %}
                mdi:monitor-speaker-off
                {% endif %}

          - name: living_room_air_conditioner_socket_status
            unique_id:  binary_sensor_living_room_air_conditioner_socket_status
            device_class: cold
            state: >-
                {% if (states("sensor.living_room_air_conditioner_socket_power") | int(0) > 5) %}
                on
                {% else %}
                off
                {% endif %}
            icon: >-
                {% if is_state("binary_sensor.living_room_air_conditioner_socket_status","on") %}
                mdi:hvac
                {% else %}
                mdi:hvac-off
                {% endif %}

          - name: living_room_socket_heating_status
            unique_id: binary_sensor_living_room_socket_heating_status
            device_class: heat
            state: >-
                {% if (states("sensor.living_room_socket_heating_power") | int(0) > 0) %}
                on
                {% else %}
                off
                {% endif %}
            icon: >-
                {% if is_state("binary_sensor.living_room_socket_heating_status","on") %}
                mdi:radiator
                {% elif is_state("input_boolean.heating_status","off") or is_state("climate.living_room_heater","off") %}
                mdi:radiator-off
                {% else %}
                mdi:radiator-disabled
                {% endif %}

          - name: kitchen_socket_heating_status
            unique_id: binary_sensor_kitchen_socket_heating_status
            device_class: heat
            state: >-
                {% if (states("sensor.kitchen_socket_heating_power") | int(0) > 0) %}
                on
                {% else %}
                off
                {% endif %}
            icon: >-
                {% if is_state("binary_sensor.kitchen_socket_heating_status","on") %}
                mdi:radiator
                {% elif is_state("input_boolean.heating_status","off") or is_state("climate.kitchen_heater","off") %}
                mdi:radiator-off
                {% else %}
                mdi:radiator-disabled
                {% endif %}

          - name: kitchen_coffee_machine_and_microwave_socket_status
            unique_id: binary_sensor_kitchen_coffee_machine_and_microwave_socket_status
            device_class: power
            state: >-
                {% if (states("sensor.kitchen_coffee_machine_and_microwave_socket_power") | int(0) > 0) %}
                on
                {% else %}
                off
                {% endif %}
            icon: mdi:coffee-maker-outline

          - name: kitchen_oven_socket_status
            unique_id: binary_sensor_kitchen_oven_socket_status
            device_class: heat
            state: >-
                {% if (states("sensor.kitchen_oven_socket_power") | int(0) > 1) %}
                on
                {% else %}
                off
                {% endif %}
            icon: mdi:stove

          - name: bathroom_washing_machine_socket_status
            unique_id: binary_sensor_bathroom_washing_machine_socket_status
            device_class: power
            state: >-
                {% if (states("sensor.bathroom_washing_machine_socket_power") | int(0) > 1) %}
                on
                {% else %}
                off
                {% endif %}
            icon: >-
                {% if is_state("binary_sensor.bathroom_washing_machine_socket_status","on") and (states("sensor.bathroom_washing_machine_socket_power") | int(0) > 3) %}
                mdi:washing-machine
                {% elif is_state("binary_sensor.bathroom_washing_machine_socket_status","on") and (states("sensor.bathroom_washing_machine_socket_power") | int(0) < 4) %}
                mdi:washing-machine-alert
                {% else %}
                mdi:washing-machine-off
                {% endif %}

          - name: girier_socket_2_status
            unique_id:  binary_sensor_girier_socket_2_status
            device_class: power
            state: >-
                {% if (states("sensor.girier_socket_2_power") | int(0) > 0) %}
                on
                {% else %}
                off
                {% endif %}
            icon: >-
                {% if is_state("binary_sensor.girier_socket_2_status","on") %}
                mdi:power-plug-outline
                {% else %}
                mdi:power-plug-off-outline
                {% endif %}

    # notify:
    #   - name: daily_electricity_consumption
    #     platform: file
    #     filename: /config/files/electricity_consumption/daily.json

    #   - name: weekly_electricity_consumption
    #     platform: file
    #     filename: /config/files/electricity_consumption/weekly.json

    #   - name: monthly_electricity_consumption
    #     platform: file
    #     filename: /config/files/electricity_consumption/monthly.json

# ==============================================================================

    automation:

      - alias: "Energy: Set Active Tariff"
        id: energy_set_active_tariff
        trigger:
          - platform: state
            entity_id: sensor.energy_active_tariff
            to:
                - 'day'
                - 'night'
        action:
          - service: select.select_option
            entity_id: 
              - select.tuya_clamp_meter_daily
              - select.tuya_clamp_meter_weekly
              - select.tuya_clamp_meter_monthly
              - select.tuya_clamp_meter_counter
            data:
                option: '{{ states("sensor.energy_active_tariff") }}'
        mode: single

      - alias: 'Energy: Update Heating Period Dates'
        id: energy_update_heating_period_dates
        description: 'Update Heating Period Dates'
        trigger:
          - platform: template
            value_template: > 
                {% set date = now().strftime('%Y-%m-%d') %}
                {{ (date > states("input_datetime.tarrif_energy_electric_heating_finish_date")) }}
        action:
          - action: input_datetime.set_datetime
            data: 
                entity_id: input_datetime.tarrif_energy_electric_heating_start_date
                datetime: >-
                    {{ states('input_datetime.tarrif_energy_electric_heating_start_date') | replace(state_attr("input_datetime.tarrif_energy_electric_heating_start_date","year"), state_attr("input_datetime.tarrif_energy_electric_heating_start_date","year") + 1) }}
          - action: input_datetime.set_datetime
            data: 
                entity_id: input_datetime.tarrif_energy_electric_heating_finish_date
                datetime: >-
                    {{ states('input_datetime.tarrif_energy_electric_heating_finish_date') | replace(state_attr("input_datetime.tarrif_energy_electric_heating_finish_date","year"), state_attr("input_datetime.tarrif_energy_electric_heating_finish_date","year") + 1) }}
        mode: single

      - alias: "Energy: Updating the Calibration Value when the Tariff was Changed"
        id: energy_update_calibrating_value_if_tariff_is_changed
        trigger:
          - platform: template
            value_template: >
                {% if not (is_state("sensor.tariff_energy_cost_base","unavailable") or
                           is_state("sensor.tariff_energy_cost_base","unknown")) %}
                {{ states("input_number.tarrif_energy_cost_calibrate_base") != states("sensor.tariff_energy_cost_base") }}
                {% else %}
                false
                {% endif %}
        action:
          - service: input_number.set_value
            target:
                entity_id: input_number.tarrif_energy_cost_calibrate_base
            data:
                value: "{{ states('sensor.tariff_energy_cost_base') | float(0) | round(3) }}"
        mode: single

      - alias: "Energy: Save Energy Consumption Logs"
        id: energy_save_energy_consumption_logs
        trigger:
          - platform: time
            at: '23:59:50'
        action:
          - choose:
              - conditions:
                  - condition: template
                    value_template: >
                        {% set r = 31 if now().month == 12 else (now().replace(month=now().month+1, day=1) - timedelta(days=1)).day %}
                        {{ now().day == r }}
                sequence:
                  - service: notify.send_message
                    data:
                        entity_id: notify.monthly_electricity_consumption
                        message: >
                            {"date": "{{ now().date() }}", "day": {{ states('sensor.tuya_clamp_meter_monthly_day') | float(0) | round(2) }}, "night": {{ states('sensor.tuya_clamp_meter_monthly_night') | float(0) | round(2) }}, "total": {{ states('sensor.tuya_clamp_meter_monthly_total') | float(0) | round(2) }}},
                  - service: notify.alexus
                    data:
                        message: |
                            {{'\U000026A1'}} Електрика 
                            ➖➖➖➖➖➖➖
                            {{"\U0001F4C5"}} {{ states("sensor.date") }} {{"\U0001F551"}} {{ states("sensor.time") }}

                            {{"\U0001F4CA"}} Показники лічильника:
                             - {{"\U0001F4CB"}} Загалом: {{ states("sensor.energy_counter_total")       | float(0) | round(0) }} kWh
                             - {{"\U00002600"}} День:  {{ states("sensor.energy_counter_total_day")   | float(0) | round(0) }} kWh
                             - {{"\U0001F312"}} Ніч:  {{ states("sensor.energy_counter_total_night") | float(0) | round(0) }} kWh
                            {% set tariff =  states.sensor.tariff_energy_cost.state | float (0) %}
                            {% if is_state('sensor.energy_active_tariff','night') %}
                            {% set tariff = tariff * 2 %}
                            {% endif -%}

                            {{"\U0001F4CA"}} {{ now().strftime('%B') }}/{{ now().year }}:
                             - {{"\U0001F4CB"}} Загалом: {{ states("sensor.tuya_clamp_meter_monthly_total") | float(0) | round(0) }} kWh, {{"\U0001F4B8"}} {{ ((states("sensor.tuya_clamp_meter_monthly_day") | float(0) | round(0) * tariff | float(0) | round(2)) +  (states("sensor.tuya_clamp_meter_monthly_night") | float(0) | round(0) * tariff | float(0) * 0.5 | round(2))) | round(2) }} ₴
                             - {{"\U00002600"}} День: {{ states("sensor.tuya_clamp_meter_monthly_day")    | float(0) | round(0) }} kWh, {{"\U0001F4B8"}} {{ (states("sensor.tuya_clamp_meter_monthly_day") | float(0) | round(0) * tariff | float(0) | round(2)) | round(2) }} ₴
                             - {{"\U0001F312"}} Ніч: {{ states("sensor.tuya_clamp_meter_monthly_night")  | float(0) | round(0) }} kWh, {{"\U0001F4B8"}} {{ (states("sensor.tuya_clamp_meter_monthly_night") | float(0) | round(0) * tariff | float(0) * 0.5 | round(2)) | round(2) }} ₴
                        data:
                            inline_keyboard: 
                              - "{{'\U000026A1'}} Электричество:/electricity, {{'\U0001F4D1'}} Меню:/menu"
          - choose:
              - conditions:
                  - condition: template
                    value_template: '{{ now().weekday() == 6 }}'
                sequence:
                  - service: notify.send_message
                    data:
                        entity_id: notify.weekly_electricity_consumption
                        message: >
                            {"date": "{{ now().date() }}", "day": {{ states('sensor.tuya_clamp_meter_weekly_day') | float(0) | round(2) }}, "night": {{ states('sensor.tuya_clamp_meter_weekly_night') | float(0) | round(2) }}, "total": {{ states('sensor.tuya_clamp_meter_weekly_total') | float(0) | round(2) }}},
          - service: notify.send_message
            data:
                entity_id: notify.daily_electricity_consumption
                message: >
                    {"date": "{{ now().date() }}", "day": {{ states('sensor.tuya_clamp_meter_daily_day') | float(0) | round(2) }}, "night": {{ states('sensor.tuya_clamp_meter_daily_night') | float(0) | round(2) }}, "total": {{ states('sensor.tuya_clamp_meter_daily_total') | float(0) | round(2) }}},
        mode: single

      - alias: "Energy: Turn OFF AC Socket in Bedroom if Not Active"
        id: energy_ac_bedroom_turn_off_socket
        description: 'Вимкнення розетки для кондиціонера в спальні'
        trigger:
          - platform: state
            entity_id: binary_sensor.bedroom_air_conditioner_socket_status
            to: 'off'
            for: '00:05:00'
        condition:
          - condition: state
            entity_id: switch.bedroom_air_conditioner_socket
            state: 'on'
          - condition: state
            entity_id: input_boolean.enable_christmas_automations
            state: 'off'
        action:
          - service: switch.turn_off
            entity_id: switch.bedroom_air_conditioner_socket
        mode: single

      - alias: "Energy: Turn OFF AC Socket in Living Room if Not Active"
        id: energy_ac_living_room_turn_off_socket
        description: 'Вимкнення розетки для кондиціонера в вітальні'
        trigger:
          - platform: state
            entity_id: binary_sensor.living_room_air_conditioner_socket_status
            to: 'off'
            for: '00:05:00'
        condition:
          - condition: state
            entity_id: switch.living_room_air_conditioner_socket
            state: 'on'
          - condition: state
            entity_id: input_boolean.enable_christmas_automations
            state: 'off'
        action:
          - service: switch.turn_off
            entity_id: switch.living_room_air_conditioner_socket
        mode: single

      - alias: "Energy: Turn OFF Laptop Charging Socket in Living Room if Not Active"
        id: energy_living_room_laptop_charging_socket_turn_off
        description: 'Вимкнення розетки Laptop Charging у вітальні'
        trigger:
          - platform: state
            entity_id: binary_sensor.living_room_laptop_charging_socket_status
            to: 'off'
            for: '00:00:05'
        condition:
          - condition: state
            entity_id: switch.living_room_laptop_charging_socket
            state: 'on'
        action:
          - service: switch.turn_off
            entity_id: switch.living_room_laptop_charging_socket
        mode: single

      - alias: "Energy: Turn ON Router UPS Charging Socket in Hallway by Schedule"
        id: energy_hallway_router_ups_charging_socket_turn_on
        description: 'Увімкнення розетки UPS Charging Socket у передпокої'
        trigger:
          - platform: template
            value_template: '{{ now().hour == 1 }}'
        condition:
          - condition: state
            entity_id: switch.hallway_router_ups_socket_l1
            state: 'off'
        action:
          - service: switch.turn_on
            entity_id: switch.hallway_router_ups_socket_l1
        mode: single

      - alias: "Energy: Turn OFF Router UPS Charging Socket in Hallway by Schedule"
        id: energy_hallway_router_ups_charging_socket_turn_off
        description: 'Вимкнення розетки UPS Charging Socket у передпокої'
        trigger:
          - platform: template
            value_template: '{{ now().hour == 0 }}'
        condition:
          - condition: state
            entity_id: switch.hallway_router_ups_socket_l1
            state: 'on'
          - condition: state
            entity_id: binary_sensor.rpi_ups_power_status
            state: 'on'
        action:
          - service: switch.turn_off
            entity_id: switch.hallway_router_ups_socket_l1
        mode: single

      - alias: "Energy: Turn ON Nintendo Switch Charging Socket in Living Room by Schedule"
        id: energy_living_room_ns_charging_socket_turn_on
        description: 'Увімкнення розетки Nintendo Switch Charging Socket у вітальні'
        trigger:
          - platform: template
            value_template: '{{ now().weekday() == 2 or now().weekday() == 5 }}'
        condition:
          - condition: state
            entity_id: switch.living_room_ns_socket
            state: 'off'
        action:
          - service: switch.turn_on
            entity_id: switch.living_room_ns_socket
        mode: single

      - alias: "Energy: Turn OFF Nintendo Switch Charging Socket in Living Room if Not Active"
        id: energy_living_room_ns_charging_socket_turn_off
        description: 'Вимкнення розетки Nintendo Switch Charging Socket у вітальні'
        trigger:
          - platform: state
            entity_id: binary_sensor.living_room_ns_socket_status
            to: 'off'
            for: '00:00:05'
        condition:
          - condition: state
            entity_id: switch.living_room_ns_socket
            state: 'on'
        action:
          - service: switch.turn_off
            entity_id: switch.living_room_ns_socket
        mode: single

    #   - alias: "Energy: Turn OFF Girier Socket 2 if Not Active"
    #     id: energy_girier_socket_2_turn_off
    #     description: 'Вимкнення розетки Girier Socket 2'
    #     trigger:
    #       - platform: state
    #         entity_id: binary_sensor.girier_socket_2_status
    #         to: 'off'
    #         for: '00:05:00'
    #     condition:
    #       - condition: state
    #         entity_id: switch.girier_socket_2
    #         state: 'on'
    #     action:
    #       - service: switch.turn_off
    #         entity_id: switch.girier_socket_2
    #     mode: single

      - alias: "Energy: Turn ON EcoFlow socket in 5 mins after Startup if charging is enabled"
        id: energy_turn_on_ecoflow_socket_if_ecoflow_charging_is_enabled_in_5_mins_after_startup
        description: 'Увімкнення EcoFlow розетки при старті HA, якщо зовнішнє живлення підключено'
        trigger:
          - platform: template
            value_template: "{{ 5 == (as_timestamp(now()) - as_timestamp(states('sensor.online'))) // 60 | int  }}"
        condition:
          - condition: state
            entity_id: binary_sensor.rpi_ups_power_status
            state: 'on'
          - condition: state
            entity_id: input_boolean.enable_ecoflow_charging
            state: 'on'
          - condition: state
            entity_id: binary_sensor.ecoflow_charging_required
            state: 'on'
          - condition: state
            entity_id: binary_sensor.ecoflow_charging_socket_status
            state: 'off'
        action:
          - service: switch.turn_on
            entity_id: switch.ecoflow_charging_socket
        mode: single

      - alias: "Energy: Turn ON BLUETTI socket in 5 mins after Startup if charging is enabled"
        id: energy_turn_on_bluetti_socket_if_charging_is_enabled_in_5_mins_after_startup
        description: 'Увімкнення BLUETTI розетки при стрті HA, якщо зовнішнє живлення підключено'
        trigger:
          - platform: template
            value_template: "{{ 5 == (as_timestamp(now()) - as_timestamp(states('sensor.online'))) // 60 | int  }}"
        condition:
          - condition: state
            entity_id: binary_sensor.rpi_ups_power_status
            state: 'on'
          - condition: state
            entity_id: input_boolean.enable_bluetti_charging
            state: 'on'
          - condition: state
            entity_id: binary_sensor.bluetti_charging_socket_status
            state: 'off'
          - condition: state
            entity_id: binary_sensor.voltage_out_of_range
            state: 'off'
        action:
          - service: switch.turn_on
            entity_id: switch.bluetti_charging_socket
        mode: single

      - alias: "Energy: Turn OFF Ecoflow Socket if Conditions are not Good"
        id: energy_ecoflow_socket_turn_off
        description: 'Вимкнення розетки Ecoflow Socket'
        trigger:
          - platform: template
            value_template: >
                {{ (not (is_state('switch.ecoflow_charging_socket','unavailable')) and
                    is_state('binary_sensor.rpi_ups_power_status','on') and 
                    is_state('binary_sensor.ecoflow_charging_required','on') and
                    is_state('input_boolean.enable_ecoflow_charging','on')) != true 
                }}
        condition:
          - condition: state
            entity_id: switch.ecoflow_charging_socket
            state: 'on'
        action:
          - service: switch.turn_off
            entity_id: switch.ecoflow_charging_socket
        mode: single

      - alias: "Energy: Turn OFF BLUETTI Socket if Conditions are not Good"
        id: energy_bluetti_socket_turn_off
        description: 'Вимкнення розетки BLUETTI Socket'
        trigger:
          - platform: template
            value_template: >
                {{ (not (is_state('switch.bluetti_charging_socket','unavailable')) and
                    is_state('binary_sensor.rpi_ups_power_status','on') and 
                    is_state('input_boolean.enable_bluetti_charging','on')) != true 
                }}
        condition:
          - condition: state
            entity_id: switch.bluetti_charging_socket
            state: 'on'
        action:
          - service: switch.turn_off
            entity_id: switch.bluetti_charging_socket
        mode: single

      - alias: "Energy: Ecoflow Socket Status is Active"
        id: energy_ecoflow_socket_status_is_active
        description: 'Повідомлення про статус EcoFlow розетки'
        trigger:
          - platform: state
            entity_id: binary_sensor.ecoflow_charging_socket_status
            not_from:
                - unavailable
                - unknown
            not_to:
                - unavailable
                - unknown
        condition:
          - condition: state
            entity_id: binary_sensor.internet_connection_ping
            state: 'on'
          - condition: template
            value_template: >
                {% set up_time =  as_timestamp(now()) - as_timestamp(states('sensor.online')) %}
                {% set minutes = (up_time // 60) | int %}
                {{ minutes > 3 }}
        action:
          - service: notify.alexus
            data:
                title: '{{"\U000026A0"}} УВАГА{{"\U0000203C"}}'
                message: |
                  ➖➖➖➖➖➖➖
                  {{'\U0001FAAB'}} Заряджання EcoFlow Power Station {% if is_state('binary_sensor.ecoflow_charging_socket_status','on') %}розпочато{% else %}припинено{% endif %}{{"\U0000203C"}}
                  
                  {{'\U0001F50B'}} Main Battery Level: {{ states('sensor.river_pro_main_battery_level') }} % 
                  {{'\U0001F50B'}} Slave Battery Level: {{ states('sensor.river_pro_slave_battery_level') }} %
                data:
                    inline_keyboard:
                      - "{{'\U00002139'}} Статус:/status, {{'\U0001F4D1'}} Меню:/menu"
        mode: single

      - alias: "Energy: BLUETTI Socket Status is Active"
        id: energy_bluetti_socket_status_is_active
        description: 'Повідомлення про статус BLUETTI розетки'
        trigger:
          - platform: state
            entity_id: binary_sensor.bluetti_charging_socket_status
            not_from:
                - unavailable
                - unknown
            not_to:
                - unavailable
                - unknown
        condition:
          - condition: state
            entity_id: binary_sensor.internet_connection_ping
            state: 'on'
          - condition: template
            value_template: >
                {% set up_time =  as_timestamp(now()) - as_timestamp(states('sensor.online')) %}
                {% set minutes = (up_time // 60) | int %}
                {{ minutes > 3 }}
        action:
          - service: notify.alexus
            data:
                title: '{{"\U000026A0"}} УВАГА{{"\U0000203C"}}'
                message: |
                  ➖➖➖➖➖➖➖
                  {{'\U0001FAAB'}} Заряджання BLUETTI Power Station {% if is_state('binary_sensor.bluetti_charging_socket_status','on') %}розпочато{% else %}припинено{% endif %}{{"\U0000203C"}}
                data:
                    inline_keyboard:
                      - "{{'\U00002139'}} Статус:/status, {{'\U0001F4D1'}} Меню:/menu"
        mode: single

      - alias: "Energy: Turn ON Ecoflow Socket if Charging is Enabled"
        id: energy_ecoflow_socket_turn_on
        description: 'Увімкнення розетки Ecoflow Socket'
        trigger:
          - platform: template
            value_template: >
               {{ is_state('binary_sensor.ecoflow_charging_socket_status', 'off') and 
                  not (is_state('switch.ecoflow_charging_socket','unavailable')) and
                  is_state('binary_sensor.rpi_ups_power_status','on') and
                  is_state('input_boolean.enable_ecoflow_charging','on') and 
                  is_state('binary_sensor.voltage_out_of_range','off') and
                  is_state('binary_sensor.ecoflow_charging_required','on')
               }}
        condition:
          - condition: state
            entity_id: switch.ecoflow_charging_socket
            state: 'off'
        action:
          - service: switch.turn_on
            entity_id: switch.ecoflow_charging_socket
        mode: single

      - alias: "Energy: Turn ON BLUETTI Socket if Charging is Enabled"
        id: energy_bluetti_socket_turn_on
        description: 'Увімкнення розетки BLUETTI Socket'
        trigger:
          - platform: template
            value_template: >
               {{ is_state('binary_sensor.bluetti_charging_socket_status', 'off') and 
                  not (is_state('switch.bluetti_charging_socket','unavailable')) and
                  is_state('binary_sensor.rpi_ups_power_status','on') and
                  is_state('binary_sensor.voltage_out_of_range','off') and
                  is_state('input_boolean.enable_bluetti_charging','on') 
               }}
        condition:
          - condition: state
            entity_id: switch.bluetti_charging_socket
            state: 'off'
        action:
          - service: switch.turn_on
            entity_id: switch.bluetti_charging_socket
        mode: single

      - alias: "Energy: Turn OFF EcoFlow AC Out when Charging is started"
        id: energy_turn_off_ecoflow_ac_out_when_charging_started
        description: "Вимкнення AC виходів EcoFlow станції якщо розпочато заряджання"
        trigger:
          - platform: state
            entity_id: binary_sensor.ecoflow_charging_socket_status
            to: 'on'
        conditions:
          - condition: state
            entity_id: switch.river_pro_ac_enabled
            state: 'on'
          - condition: numeric_state
            entity_id: sensor.river_pro_ac_in_power
            above: 0
        action:
          - action: switch.turn_off
            entity_id: switch.river_pro_ac_enabled
        mode: single