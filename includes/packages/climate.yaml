climate_configuration:

    recorder:
        include:
            entities:
              - sensor.outdoor_mean_temperature
              - sensor.outdoor_humidity
              - sensor.outdoor_temperature
              - sensor.bathroom_lumi_weather_humidity
              - sensor.bathroom_lumi_weather_pressure
              - sensor.bathroom_lumi_weather_temperature
              - sensor.bedroom_lumi_weather_humidity
              - sensor.bedroom_lumi_weather_pressure
              - sensor.bedroom_lumi_weather_temperature
              - sensor.bedroom_average_temperature
              - sensor.hallway_lumi_weather_humidity
              - sensor.hallway_lumi_weather_pressure
              - sensor.hallway_lumi_weather_temperature
              - sensor.kitchen_lumi_weather_humidity
              - sensor.kitchen_lumi_weather_pressure
              - sensor.kitchen_lumi_weather_temperature
              - sensor.living_room_lumi_weather_humidity
              - sensor.living_room_lumi_weather_pressure
              - sensor.living_room_lumi_weather_temperature
              - sensor.loggia_tuya_weather_humidity
              - sensor.loggia_tuya_weather_temperature
              - sensor.nous_weather_lcd_humidity
              - sensor.nous_weather_lcd_temperature
              - sensor.lr_levoit_air_purifier_300s_air_quality
              - sensor.lr_levoit_air_purifier_300s_filter_life
              - binary_sensor.bedroom_window_right_contact
              - binary_sensor.bedroom_window_left_contact
              - binary_sensor.bedroom_windows
              - binary_sensor.living_room_loggia_door_contact
              - binary_sensor.kitchen_window_contact
              - binary_sensor.home_windows
              - binary_sensor.home_doors
              - climate.living_room_heater
              - climate.bedroom_heater
              - climate.kitchen_heater
              - climate.living_room_ac
              - climate.bedroom_ac
              - fan.lr_levoit_air_purifier_300s

    homeassistant:

        customize:

            sensor.lr_levoit_air_purifier_300s_air_quality:
                device_class: 'pm25'
                unit_of_measurement: 'µg/m³'
            sensor.bedroom_average_temperature:
                friendly_name: 'Середня температура у Спальні'
            sensor.outdoor_mean_temperature:
                friendly_name: 'Середньодобова (24h)'
            sensor.outdoor_humidity:
                friendly_name: 'Зовнішня Вологість'
            sensor.outdoor_temperature:
                friendly_name: 'Зовнішня Температура'
            binary_sensor.living_room_loggia_door_contact:
                friendly_name: 'Двері на Лоджію у Вітальні'
            binary_sensor.bedroom_window_right_contact:
                friendly_name: 'Праве Вікно у Спальні'
            binary_sensor.bedroom_window_left_contact:
                friendly_name: 'Ліве Вікно у Спальні'
            binary_sensor.bedroom_windows:
                friendly_name: 'Вікна у Спальні'
            binary_sensor.kitchen_window_contact:
                friendly_name: 'Вікно на Кухні'
            binary_sensor.home_windows:
                friendly_name: 'Вікна у Квартирі'

    smartir:

    input_number:

        climate_target_temperature:
            name: 'Climate Target Temperature'
            mode: box
            min: 18
            max: 28
            step: 1
            unit_of_measurement: '°C'

    input_boolean:

        heating_status:
            name: Heating Status
            icon: mdi:radiator

        ac_status:
            name: A/C Status
            icon: mdi:air-conditioner

        bedroom_ac_status:
            name: Bedroom A/C Status
            icon: mdi:toggle-switch-off-outline

        living_room_ac_status:
            name: Living Room A/C Status
            icon: mdi:toggle-switch-off-outline

        disable_climate:
            name: Disable Climate Automations
            icon: mdi:thermometer-off

        disable_climate_notifications:
            name: Disable Climate Notifications
            icon: mdi:message-bulleted-off

    group:

        heaters:
          - climate.bedroom_heater
          - climate.kitchen_heater
          - climate.living_room_heater

        air_conditioners:
          - climate.living_room_ac
          - climate.bedroom_ac

    sensor:
    
      - platform: statistics
        name: outdoor_mean_temperature
        entity_id: sensor.outdoor_temperature
        state_characteristic: mean
        max_age:
            hours: 24

      - platform: min_max
        name: bedroom_average_temperature
        unique_id: sensor_bedroom_average_temperature
        type: mean
        round_digits: 2
        entity_ids:
          - sensor.bedroom_lumi_weather_temperature
          - sensor.nous_weather_lcd_temperature

    binary_sensor:

      - platform: group
        name: bedroom_windows
        unique_id: binary_sensor_bedroom_windows
        device_class: window
        entities:
          - binary_sensor.bedroom_window_left_contact
          - binary_sensor.bedroom_window_right_contact

      - platform: group
        name: home_windows
        unique_id: binary_sensor_home_windows
        device_class: window
        entities:
          - binary_sensor.bedroom_window_left_contact
          - binary_sensor.bedroom_window_right_contact
          - binary_sensor.kitchen_window_contact

    template:

      - sensor:

          - name: outdoor_humidity
            unique_id: sensor_outdoor_humidity
            state: "{{ state_attr('weather.home', 'humidity') }}"
            device_class: humidity
            unit_of_measurement: '%'

          - name: outdoor_temperature
            unique_id: sensor_outdoor_temperature
            state: "{{ state_attr('weather.home', 'temperature') }}"
            device_class: temperature
            unit_of_measurement: '°C'

      - binary_sensor:

          - name: living_room_air_purifier_status
            unique_id: binary_sensor_living_room_air_purifier_status
            state: "{{ states.fan.lr_levoit_air_purifier_300s.state == 'on' }}"
            icon: >-
                {% if is_state('fan.lr_levoit_air_purifier_300s','on') %}
                   {% if state_attr('fan.lr_levoit_air_purifier_300s','preset_mode') == 'auto' %}
                   mdi:fan-auto
                   {% elif state_attr('fan.lr_levoit_air_purifier_300s','preset_mode') == 'manual' %}
                      {% if states.number.lr_levoit_air_purifier_300s_fan_speed_level.state | int (0) < 4 %}
                      mdi:fan-speed-{{ states.number.lr_levoit_air_purifier_300s_fan_speed_level.state }}
                      {% else %}
                      mdi:fan-alert
                      {% endif %}
                   {% elif state_attr('fan.lr_levoit_air_purifier_300s','preset_mode') == 'sleep' %}
                   mdi:sleep
                   {% else %}
                   mdi:fan
                   {% endif %}
                {% else %}
                mdi:fan-off
                {% endif %}

    climate: 

      - platform: generic_thermostat
        name: living_room_heater
        unique_id: living_room_heater
        heater: switch.living_room_socket_heating
        target_sensor: sensor.living_room_lumi_weather_temperature
        min_temp: 16
        max_temp: 28
        away_temp: 18
        target_temp: 24
        ac_mode: false
        cold_tolerance: 0.5
        hot_tolerance: 0.5
        min_cycle_duration:
            minutes: 5
        keep_alive:
            minutes: 3
        initial_hvac_mode: "heat"
        precision: 0.1

      - platform: generic_thermostat
        name: bedroom_heater
        unique_id: bedroom_heater
        heater: switch.bedroom_socket_heating
        target_sensor: sensor.bedroom_lumi_weather_temperature
        min_temp: 16
        max_temp: 28
        away_temp: 18
        target_temp: 24
        ac_mode: false
        cold_tolerance: 0.5
        hot_tolerance: 0.5
        min_cycle_duration:
            minutes: 5
        keep_alive:
            minutes: 3
        initial_hvac_mode: "heat"
        precision: 0.1

      - platform: generic_thermostat
        name: kitchen_heater
        unique_id: kitchen_heater
        heater: switch.kitchen_socket_heating
        target_sensor: sensor.kitchen_lumi_weather_temperature
        min_temp: 16
        max_temp: 28
        away_temp: 18
        target_temp: 24
        ac_mode: false
        cold_tolerance: 0.5
        hot_tolerance: 0.5
        min_cycle_duration:
            minutes: 5
        keep_alive:
            minutes: 3
        initial_hvac_mode: "heat"
        precision: 0.1

      - platform: smartir
        name: Bedroom AC
        unique_id: bedroom_ac
        device_code: 1180
        controller_data: remote.broadlink_bedroom_rm4mini_remote
        temperature_sensor: sensor.bedroom_lumi_weather_temperature
        humidity_sensor: sensor.bedroom_lumi_weather_humidity
        power_sensor: binary_sensor.bedroom_air_conditioner_socket_status

      - platform: smartir
        name: Living Room AC
        unique_id: living_room_ac
        device_code: 1385
        controller_data: remote.broadlink_living_room_rm4mini_remote
        temperature_sensor: sensor.living_room_lumi_weather_temperature
        humidity_sensor: sensor.living_room_lumi_weather_humidity
        power_sensor: binary_sensor.living_room_air_conditioner_socket_status

    script:

        climate_test:
            alias: "Climate: Script - Test"
            sequence:
              - service: script.climate_turn_on_ac
                data: 
                    ac_entity: climate.bedroom_ac
                    # ac_hvac_mode: cool
                    ac_socket_entity: switch.bedroom_air_conditioner_socket
            mode: single

        climate_turn_on_ac:
            alias: "Climate: Script - Turn ON AC"
            fields:
                ac_entity:
                    description: The name of ac climate entity
                    example: climate.living_room_ac
                ac_hvac_mode:
                    description: The hvac mode
                    example: cool
                ac_socket_entity:
                    description: The name of switch socket entity 
                    example: switch.living_room_air_conditioner_socket
            sequence:
              - condition: template
                value_template: "{{ not (is_state(ac_entity,'unavailable') or is_state(ac_socket_entity,'unavailable') ) }}"
              - variables:
                    ac_hvac_mode_state: >-
                        {% if ac_hvac_mode is defined %}
                        {{ ac_hvac_mode }}
                        {% else %}
                        {{ state_attr(ac_entity,'last_on_operation') }} 
                        {% endif %}
              - choose: 
                  - conditions:
                      - condition: template
                        value_template: "{{ is_state(ac_socket_entity,'off') }}"
                    sequence:
                      - service: switch.turn_on
                        data_template:
                            entity_id: "{{ ac_socket_entity }}"
                      - delay: 20
              - service: climate.set_hvac_mode
                data_template:
                    entity_id: "{{ ac_entity }}"
                    hvac_mode: "{{ ac_hvac_mode_state }}"
            mode: queued

        climate_turn_off_ac:
            alias: "Climate: Script - Turn OFF AC"
            fields:
                ac_entity:
                    description: The name of ac climate entity
                    example: climate.living_room_ac
                ac_socket_entity:
                    description: The name of switch socket entity 
                    example: switch.living_room_air_conditioner_socket
            sequence:
              - condition: template
                value_template: "{{ not (is_state(ac_entity,'unavailable') or is_state(ac_socket_entity,'unavailable') ) }}"
              - choose: 
                  - conditions:
                      - condition: template
                        value_template: "{{ not is_state(ac_entity,'off') }}"
                    sequence:
                      - service: climate.turn_off
                        data_template:
                            entity_id: "{{ ac_entity }}"
                      - delay: 20
              - choose: 
                  - conditions:
                      - condition: template
                        value_template: "{{ is_state(ac_socket_entity,'on') }}"
                    sequence:
                      - service: switch.turn_off
                        data_template:
                            entity_id: "{{ ac_socket_entity }}"
            mode: queued


    automation:

    # =================== Set Climate Target Temperature =======

      - alias: "Climate: Set Target Temperature"
        trigger:
            platform: state
            entity_id: input_number.climate_target_temperature
        action:
          - service: climate.set_temperature
            target:
                entity_id: 
                  - climate.kitchen_heater
                  - climate.bedroom_heater
                  - climate.bedroom_ac
                  - climate.living_room_heater
                  - climate.living_room_ac
            data:
                temperature: "{{ states('input_number.climate_target_temperature') | int }}"
        mode: single

    # =================== Pause/Start Climate when Windows/Doors are Openned/Closed =======

      - alias: "Climate: Turn OFF Heater or A/C in Living Room when Loggia Door is Opened"
        id: climate_living_room_turn_off_heater_or_ac_when_loggia_door_opened
        description: 'Вимкнення обігрівача/кондиціонера у вітальні при відкритих дверях на лоджію'
        trigger:
          - platform: state
            entity_id: binary_sensor.living_room_loggia_door_contact
            from: 'off'
            to: 'on'
            for:
                minutes: 3
        condition:
          - condition: state
            entity_id: input_boolean.disable_climate
            state: 'off'
        action:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.heating_status
                    state: 'on'
                  - condition: state
                    entity_id: climate.living_room_heater
                    state: 'heat'
                sequence:
                  - service: climate.turn_off
                    entity_id: climate.living_room_heater
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                          - condition: state
                            entity_id: input_boolean.disable_climate_notifications
                            state: 'off'
                        sequence:
                          - service: notify.alexus
                            data:
                                title: '{{"\U0001F3E0"}} Відчинені Двері на Лоджію{{"\U0000203C"}}'
                                message: |
                                    ➖➖➖➖➖➖➖➖➖➖➖➖
                                    Обігрівач у вітальні вимкнено...
                                data:
                                    inline_keyboard:
                                      - "{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4D1'}} Меню:/menu"

              - conditions:
                  - condition: state
                    entity_id: input_boolean.ac_status
                    state: 'on'
                  - condition: state
                    entity_id: binary_sensor.living_room_air_conditioner_socket_status
                    state: 'on'
                #   - not:
                #       - condition: state
                #         entity_id: climate.living_room_ac
                #         state: 'off'
                sequence:
                  - service: input_boolean.turn_on
                    entity_id: input_boolean.living_room_ac_status
                  - service: script.climate_turn_off_ac
                    data: 
                        ac_entity: climate.living_room_ac
                        ac_socket_entity: switch.living_room_air_conditioner_socket
                #   - service: climate.turn_off
                #     entity_id: climate.living_room_ac
                #   - delay: 20
                #   - service: switch.turn_off
                #     entity_id: switch.living_room_air_conditioner_socket
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                          - condition: state
                            entity_id: input_boolean.disable_climate_notifications
                            state: 'off'
                        sequence:
                          - service: notify.alexus
                            data:
                                title: '{{"\U0001F6AA"}} Відчинені Двері на Лоджію{{"\U0000203C"}}'
                                message: |
                                    ➖➖➖➖➖➖➖➖➖➖➖➖
                                    Вимкнення кондиціонера...
                                data:
                                    inline_keyboard:
                                      - "{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4D1'}} Меню:/menu"
        mode: single

      - alias: "Climate: Turn ON Heater or A/C in Living Room when Loggia Door is Closed"
        id: climate_living_room_turn_on_heater_or_ac_when_loggia_door_closed
        description: 'Увімкнення обігрівача/кондиціонера у вітальні при закритих дверях на лоджію'
        trigger:
          - platform: state
            entity_id: binary_sensor.living_room_loggia_door_contact
            from: 'on'
            to: 'off'
            for:
                minutes: 1
        condition:
          - condition: state
            entity_id: input_boolean.disable_climate
            state: 'off'
        action:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.heating_status
                    state: 'on'
                  - condition: state
                    entity_id: climate.living_room_heater
                    state: 'off'
                sequence:
                  - service: climate.turn_on
                    entity_id: climate.living_room_heater
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                          - condition: state
                            entity_id: input_boolean.disable_climate_notifications
                            state: 'off'
                        sequence:
                          - service: notify.alexus
                            data:
                                title: '{{"\U0001F3E0"}} Двері на Лоджію Зачинені{{"\U0000203C"}}'
                                message: |
                                    ➖➖➖➖➖➖➖➖➖➖➖➖
                                    Обігрівач у вітальні увімкнений...
                                data:
                                    inline_keyboard:
                                      - "{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4D1'}} Меню:/menu"
              - conditions:
                  - condition: state
                    entity_id: input_boolean.ac_status
                    state: 'on'
                  - condition: time
                    after: "08:00:00"
                    before: "23:00:00"
                #   - condition: state
                #     entity_id: climate.living_room_ac
                #     state: 'off'
                  - condition: state
                    entity_id: binary_sensor.bedroom_air_conditioner_socket_status
                    state: 'off'
                  - condition: state
                    entity_id: input_boolean.living_room_ac_status
                    state: 'on'
                sequence:
                  - service: script.climate_turn_on_ac
                    data: 
                        ac_entity: climate.living_room_ac
                        ac_socket_entity: switch.living_room_air_conditioner_socket
                #   - service: switch.turn_on
                #     entity_id: switch.living_room_air_conditioner_socket
                #   - delay: 20
                #   - service: climate.turn_on
                #     entity_id: climate.living_room_ac
                  - service: input_boolean.turn_off
                    entity_id: input_boolean.living_room_ac_status
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                          - condition: state
                            entity_id: input_boolean.disable_climate_notifications
                            state: 'off'
                        sequence:
                          - service: notify.alexus
                            data:
                                title: '{{"\U0001F6AA"}} Двері на Лоджію Зачинені{{"\U0000203C"}}'
                                message: |
                                    ➖➖➖➖➖➖➖➖➖➖➖➖
                                    Увімкнення кондиціонера...
                                data:
                                    inline_keyboard:
                                      - "{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4D1'}} Меню:/menu"
        mode: single

      - alias: "Climate: Turn OFF Heater or A/C in Bedroom when Window is Opened"
        id: climate_bedroom_turn_off_heater_or_ac_when_window_opened
        description: 'Вимкнення обігрівача/кондиціонера у спальні при відкритих вікнах'
        trigger:
          - platform: state
            entity_id: binary_sensor.bedroom_windows
            from: 'off'
            to: 'on'
            for:
                minutes: 3
        condition:
          - condition: state
            entity_id: input_boolean.disable_climate
            state: 'off'
        action:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.heating_status
                    state: 'on'
                  - condition: state
                    entity_id: climate.bedroom_heater
                    state: 'heat'
                sequence:
                  - service: climate.turn_off
                    entity_id: climate.bedroom_heater
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                          - condition: state
                            entity_id: input_boolean.disable_climate_notifications
                            state: 'off'
                        sequence:
                          - service: notify.alexus
                            data:
                                title: '{{"\U0001F3E0"}} Відчинено Вікно у Спальні{{"\U0000203C"}}'
                                message: |
                                    ➖➖➖➖➖➖➖➖➖➖➖➖
                                    Обігрівач у Спальні вимкнено...
                                data:
                                    inline_keyboard:
                                      - "{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4D1'}} Меню:/menu"
              - conditions:
                  - condition: state
                    entity_id: input_boolean.ac_status
                    state: 'on'
                #   - not:
                #       - condition: state
                #         entity_id: climate.bedroom_ac
                #         state: 'off'
                  - condition: state
                    entity_id: binary_sensor.bedroom_air_conditioner_socket_status
                    state: 'on'
                sequence:
                  - service: input_boolean.turn_on
                    entity_id: input_boolean.bedroom_ac_status
                  - service: script.climate_turn_off_ac
                    data: 
                        ac_entity: climate.bedroom_ac
                        ac_socket_entity: switch.bedroom_air_conditioner_socket
                #   - service: climate.turn_off
                #     entity_id: climate.bedroom_ac
                #   - delay: 20
                #   - service: switch.turn_off
                #     entity_id: switch.bedroom_air_conditioner_socket
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                          - condition: state
                            entity_id: input_boolean.disable_climate_notifications
                            state: 'off'
                        sequence:
                          - service: notify.alexus
                            data:
                                title: '{{"\U0001FA9F"}}{{"\U0001FA9F"}} Відчинено Вікно у Спальні{{"\U0000203C"}}'
                                message: |
                                    ➖➖➖➖➖➖➖➖➖➖➖➖
                                    Вимкнення кондиціонера...
                                data:
                                    inline_keyboard:
                                      - "{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4D1'}} Меню:/menu"
        mode: single

      - alias: "Climate: Turn ON Heater or A/C in Bedroom when Window is Closed"
        id: climate_bedroom_turn_on_heater_or_ac_when_window_closed
        description: 'Увімкнення обігрівача/кондиціонера в спальні при зачинених вікнах'
        trigger:
          - platform: state
            entity_id: binary_sensor.bedroom_windows
            from: 'on'
            to: 'off'
            for:
                minutes: 1
        condition:
          - condition: state
            entity_id: input_boolean.disable_climate
            state: 'off'
        action:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.heating_status
                    state: 'on'
                  - condition: state
                    entity_id: climate.bedroom_heater
                    state: 'off'
                sequence:
                  - service: climate.turn_on
                    entity_id: climate.bedroom_heater
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                          - condition: state
                            entity_id: input_boolean.disable_climate_notifications
                            state: 'off'
                        sequence:
                          - service: notify.alexus
                            data:
                                title: '{{"\U0001F3E0"}} Вікна у Спальні зачинені{{"\U0000203C"}}'
                                message: |
                                    ➖➖➖➖➖➖➖➖➖➖➖➖
                                    Обігрівач у Спальні увімкнено...
                                data:
                                    inline_keyboard:
                                      - "{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4D1'}} Меню:/menu"
              - conditions:
                  - condition: state
                    entity_id: input_boolean.ac_status
                    state: 'on'
                  - condition: time
                    after: "08:00:00"
                    before: "23:00:00"
                  - condition: state
                    entity_id: input_boolean.bedroom_ac_status
                    state: 'on'
                  - condition: state
                    entity_id: binary_sensor.bedroom_air_conditioner_socket_status
                    state: 'off'
                #   - condition: state
                #     entity_id: climate.bedroom_ac
                #     state: 'off'
                sequence:
                  - service: script.climate_turn_on_ac
                    data: 
                        ac_entity: climate.bedroom_ac
                        ac_socket_entity: switch.bedroom_air_conditioner_socket
                #   - service: switch.turn_on
                #     entity_id: switch.bedroom_air_conditioner_socket
                #   - delay: 20
                #   - service: climate.turn_on
                #     entity_id: climate.bedroom_ac
                  - service: input_boolean.turn_off
                    entity_id: input_boolean.bedroom_ac_status
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                          - condition: state
                            entity_id: input_boolean.disable_climate_notifications
                            state: 'off'
                        sequence:
                          - service: notify.alexus
                            data:
                                title: '{{"\U0001FA9F"}}{{"\U0001FA9F"}} Вікна у Спальні зачинені{{"\U0000203C"}}'
                                message: |
                                    ➖➖➖➖➖➖➖➖➖➖➖➖
                                    Увімкнення кондиціонера...
                                data:
                                    inline_keyboard:
                                      - "{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4D1'}} Меню:/menu"
        mode: single

    # =================== Set Away mode ======================

      - alias: "Climate: Set Thermostats to AWAY mode"
        id: climate_thermostats_away_mode
        description: 'Перемикання термостатів в режим - away'
        trigger:
          - entity_id: group.family
            platform: state
            to: not_home
        condition: 
          - condition: state
            entity_id: input_boolean.disable_home_away
            state: 'off'
          - condition: state
            entity_id: input_boolean.disable_climate
            state: 'off'
          - condition: not
            conditions:
              - condition: state
                entity_id: group.family
                state: 'home'
        action:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.heating_status
                    state: 'on'
                sequence:
                  - service: climate.set_preset_mode
                    target:
                        entity_id: group.heaters
                    data:
                        preset_mode: 'away'
                    # Повідомлення про зміну режиму опалення
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                          - condition: state
                            entity_id: input_boolean.disable_climate_notifications
                            state: 'off'
                        sequence:
                          - service: notify.alexus
                            data:
                                title: '{{"\U0001F3E0"}} Усі залишили Будинок{{"\U0000203C"}}'
                                message: |
                                    ➖➖➖➖➖➖➖➖➖➖➖➖
                                    Обігрівачі переключені в режим економії ({{ state_attr("climate.living_room_heater","temperature") }}{{"\U00002103"}}).
                                data:
                                    inline_keyboard:
                                      - "{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4D1'}} Меню:/menu"
              - conditions:
                  - condition: state
                    entity_id: input_boolean.ac_status
                    state: 'on'
                  - condition: state
                    entity_id: group.air_conditioners
                    state: 'on'
                sequence:
                  - service: climate.turn_off
                    entity_id: group.air_conditioners
                  - delay: 20
                  - service: switch.turn_off
                    target:
                        entity_id: 
                          - switch.bedroom_air_conditioner_socket
                          - switch.living_room_air_conditioner_socket
                  - service: input_boolean.turn_off
                    entity_id:
                      - input_boolean.living_room_ac_status
                      - input_boolean.bedroom_ac_status
                  - choose:
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.internet_connection_ping
                            state: 'on'
                          - condition: state
                            entity_id: input_boolean.disable_climate_notifications
                            state: 'off'
                        sequence:
                          - service: notify.alexus
                            data:
                                title: '{{"\U0001F3E0"}} Усі залишили Будинок{{"\U0000203C"}}'
                                message: |
                                    ➖➖➖➖➖➖➖➖➖➖➖➖
                                    Вимкнення кондиціонерів...
                                data:
                                    inline_keyboard:
                                      - "{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4D1'}} Меню:/menu"
        mode: single

    # =================== Heaters Automations ===================

      - alias: "Climate: Turn ON/OFF Heaters"
        id: climate_turn_on_off_heaters
        description: 'Увімкнення/вимкнення опалення'
        trigger:
          - platform: state
            entity_id: input_boolean.heating_status
        action:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.heating_status
                    state: 'on'
                sequence:
                  - choose: # living_room
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.living_room_loggia_door_contact
                            state: 'off'
                        sequence: 
                          - service: climate.turn_on
                            entity_id: climate.living_room_heater
                  - choose: # kitchen
                      - conditions: 
                          - condition: state
                            entity_id: binary_sensor.kitchen_window_contact
                            state: 'off'
                        sequence:
                          - service: climate.turn_on
                            entity_id: climate.kitchen_heater
                  - choose: # bedroom
                      - conditions:
                          - condition: state
                            entity_id: binary_sensor.bedroom_windows
                            state: 'off'
                        sequence:
                          - service: climate.turn_on
                            entity_id: climate.bedroom_heater
                  - choose: # Set Away/Home mode
                      - conditions:
                          - condition: not
                            conditions:
                              - condition: state
                                entity_id: group.family
                                state: 'home'
                        sequence:
                          - service: climate.set_preset_mode
                            target:
                                entity_id: group.heaters
                            data:
                                preset_mode: 'away'
                    default:
                      - service: climate.set_preset_mode
                        target:
                            entity_id: group.heaters 
                        data:
                            preset_mode: 'none'
                  - choose: # check A/C to be off
                      - conditions:
                          - condition: state
                            entity_id: input_boolean.ac_status
                            state: 'on'
                        sequence: 
                          - service: input_boolean.turn_off
                            entity_id: input_boolean.ac_status
          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.heating_status
                    state: 'off'
                sequence:
                  - service: climate.turn_off
                    entity_id: group.heaters
                  - choose: # check A/C to be on
                      - conditions:
                          - condition: state
                            entity_id: input_boolean.ac_status
                            state: 'off'
                        sequence: 
                          - service: input_boolean.turn_on
                            entity_id: input_boolean.ac_status
        mode: single

      - alias: "Climate: Turn ON Heating Mode on Winter season"
        id: climate_winter_turn_on_heaters
        description: 'Настала зима, увімкнення обігрівачів'
        trigger:
          - platform: state
            entity_id: sensor.season
            to: 'winter'
        condition:
          - condition: state
            entity_id: input_boolean.disable_climate
            state: 'off'
          - condition: state
            entity_id: input_boolean.heating_status
            state: 'off'
        action:
          - service: input_boolean.turn_on
            entity_id: input_boolean.heating_status
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.internet_connection_ping
                    state: 'on'
                  - condition: state
                    entity_id: input_boolean.disable_climate_notifications
                    state: 'off'
                sequence:
                  - service: notify.alexus
                    data:
                        title: '{{"\U00002603"}} Настала Зима{{"\U0000203C"}}'
                        message: |
                            ➖➖➖➖➖➖➖➖➖➖➖➖
                            Обігрівачі Увімкнено!
                        data:
                            inline_keyboard:
                              - "{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4D1'}} Меню:/menu"
        mode: single

      - alias: "Climate: Turn OFF Heating Mode on Summer season"
        id: climate_summer_turn_off_heaters
        description: 'Настало літо, обігрівачі вимкнені'
        trigger:
          - platform: state
            entity_id: sensor.season
            to: 'summer'
        condition:
          - condition: state
            entity_id: input_boolean.disable_climate
            state: 'off'
          - condition: state
            entity_id: input_boolean.heating_status
            state: 'on'
        action:
          - service: input_boolean.turn_off
            entity_id: input_boolean.heating_status
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.internet_connection_ping
                    state: 'on'
                  - condition: state
                    entity_id: input_boolean.disable_climate_notifications
                    state: 'off'
                sequence:
                  - service: notify.alexus
                    data:
                        title: '{{"\U00002600"}} Настало Літо{{"\U0000203C"}}'
                        message: |
                            ➖➖➖➖➖➖➖➖➖➖➖➖
                            Обігрівачі Вимкнено!
                        data:
                            inline_keyboard:
                              - "{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4D1'}} Меню:/menu"
        mode: single

      - alias: "Climate: Turn ON Heating Mode on Spring/Fall season if outdoor temperature below 10'C"
        id: climate_spring_fall_turn_on_heaters
        description: 'Увімкнення термостатів опалення навесні/восени за зовнішньої температури нижче 10'
        trigger:
          - platform: numeric_state
            entity_id: sensor.outdoor_mean_temperature
            below: 10
            for:
                hours: 3
        condition:
          - condition: state
            entity_id: input_boolean.disable_climate
            state: 'off'
          - condition: state
            entity_id: input_boolean.heating_status
            state: 'off'
          - condition: or
            conditions:
              - condition: state
                entity_id: sensor.season
                state: 'spring'
              - condition: state
                entity_id: sensor.season
                state: 'autumn'
        action:
          - service: input_boolean.turn_on
            entity_id: input_boolean.heating_status
          - condition: state
            entity_id: input_boolean.disable_climate_notifications
            state: 'off'
          - service: notify.alexus
            data:
                title: '{{"\U0001F927"}} Зимно на Вулиці{{"\U0000203C"}}'
                message: |
                    ➖➖➖➖➖➖➖➖➖➖➖➖
                    Зовнішня температура нижче 10{{"\U00002103"}}, обігрівачі увімкнені!
                data:
                    inline_keyboard:
                      - "{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4D1'}} Меню:/menu"
        mode: single

      - alias: "Climate: Turn OFF Heating Mode on Spring/Fall season if outdoor temperature above 15'C"
        id: climate_spring_fall_turn_off_heaters
        description: 'Вимкнення термостатів опалення навесні/восени за зовнішньої температури вище 15'
        trigger:
          - platform: numeric_state
            entity_id: sensor.outdoor_mean_temperature
            above: 15
            for:
                hours: 3
        condition:
          - condition: state
            entity_id: input_boolean.disable_climate
            state: 'off'
          - condition: state
            entity_id: input_boolean.heating_status
            state: 'on'
          - condition: or
            conditions:
              - condition: state
                entity_id: sensor.season
                state: 'spring'
              - condition: state
                entity_id: sensor.season
                state: 'autumn'
        action:
          - service: input_boolean.turn_off
            entity_id: input_boolean.heating_status
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.internet_connection_ping
                    state: 'on'
                  - condition: state
                    entity_id: input_boolean.disable_climate_notifications
                    state: 'off'
                sequence:
                  - service: notify.alexus
                    data:
                        title: '{{"\U0001F917"}} Потеплішало{{"\U0000203C"}}'
                        message: |
                            ➖➖➖➖➖➖➖➖➖➖➖➖
                            Зовнішня температура вище 15{{"\U00002103"}}, обігрівачі вимкнено!
                        data:
                            inline_keyboard:
                              - "{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4D1'}} Меню:/menu"
        mode: single

      - alias: "Climate: Set Heating Thermostats to HOME mode"
        id: climate_heating_thermostats_home
        description: 'Перемикання термостатів в режим - home'
        trigger:
          - entity_id: group.family
            platform: state
            to: home
        condition: 
          - condition: state
            entity_id: input_boolean.disable_home_away
            state: 'off'
          - condition: state
            entity_id: input_boolean.disable_climate
            state: 'off'
          - condition: state
            entity_id: input_boolean.heating_status
            state: 'on'
          - condition: state
            entity_id: group.family
            state: 'home'
        action:
          - service: climate.set_preset_mode
            target:
                entity_id: group.heaters 
            data:
                preset_mode: 'none'
            # Повідомлення про зміну режиму опалення
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.internet_connection_ping
                    state: 'on'
                  - condition: state
                    entity_id: input_boolean.disable_climate_notifications
                    state: 'off'
                sequence:
                  - service: notify.alexus
                    data:
                        title: >-
                            {{"\U0001F3E0"}} Вдома хтось з'явився{{"\U0000203C"}}
                        message: |
                            ➖➖➖➖➖➖➖➖➖➖➖➖
                            Обігрівачі переключені у звичайний режим ({{ state_attr("climate.living_room_heater","temperature") }}{{"\U00002103"}}).
                        data:
                            inline_keyboard:
                              - "{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4D1'}} Меню:/menu"
        mode: single

      - alias: "Climate: Turn OFF Heater in Kitchen when Window is Opened"
        id: climate_kitchen_turn_off_heater_window_opened
        description: 'Вимкнення обігрівача на кухні при відкритому вікні'
        trigger:
          - platform: state
            entity_id: binary_sensor.kitchen_window_contact
            to: 'on'
            for:
                minutes: 3
        condition:
          - condition: state
            entity_id: input_boolean.disable_climate
            state: 'off'
          - condition: state
            entity_id: input_boolean.heating_status
            state: 'on'
          - condition: state
            entity_id: climate.kitchen_heater
            state: 'heat'
        action:
          - service: climate.turn_off
            entity_id: climate.kitchen_heater
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.internet_connection_ping
                    state: 'on'
                  - condition: state
                    entity_id: input_boolean.disable_climate_notifications
                    state: 'off'
                sequence:
                  - service: notify.alexus
                    data:
                        title: '{{"\U0001F3E0"}} Відчинене вікно на Кухні{{"\U0000203C"}}'
                        message: |
                            ➖➖➖➖➖➖➖➖➖➖➖➖
                            Обігрівач в Кухні вимкнено{{"\U0000203C"}}
                        data:
                            inline_keyboard:
                              - "{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4D1'}} Меню:/menu"
        mode: single

      - alias: "Climate: Turn ON Heater in Kitchen when Window is Closed"
        id: climate_kitchen_turn_on_heater_window_closed
        description: 'Ввімкнення обігрівача на кухні при зачиненому вікні'
        trigger:
          - platform: state
            entity_id: binary_sensor.kitchen_window_contact
            to: 'off'
            for:
                minutes: 1
        condition:
          - condition: state
            entity_id: input_boolean.disable_climate
            state: 'off'
          - condition: state
            entity_id: input_boolean.heating_status
            state: 'on'
          - condition: state
            entity_id: climate.kitchen_heater
            state: 'off'
        action:
          - service: climate.turn_on
            entity_id: climate.kitchen_heater
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.internet_connection_ping
                    state: 'on'
                  - condition: state
                    entity_id: input_boolean.disable_climate_notifications
                    state: 'off'
                sequence:
                  - service: notify.alexus
                    data:
                        title: '{{"\U0001F3E0"}} Вікно на Кухні зачинене{{"\U0000203C"}}'
                        message: |
                            ➖➖➖➖➖➖➖➖➖➖➖➖
                            Обігрівач на Кухні увімкнено{{"\U0000203C"}}
                        data:
                            inline_keyboard:
                              - "{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4D1'}} Меню:/menu"
        mode: single

      - alias: "Climate: Setup Thermostats on System Startup"
        id: climate_heaters_settings_on_statrup
        description: 'Установки термостатов при старте системы'
        trigger: 
          - platform: homeassistant
            event: start
        condition: 
          - condition: state
            entity_id: input_boolean.disable_climate
            state: 'off'
        action:
          - service: climate.turn_off
            entity_id: group.heaters
          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.heating_status
                    state: 'on'
                sequence:
                  - delay: 
                        minutes: 3
                  - service: automation.trigger
                    entity_id: automation.climate_turn_on_off_heaters
        mode: single

    # =================== A/C Automations ===================


      - alias: "Climate: Enable/Disable A/C mode"
        id: climate_ac_enable_disable
        description: 'Використання кондиціонування дозволено/заборонено'
        trigger:
          - platform: state
            entity_id: input_boolean.ac_status
            # to: 'on'
        action:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_boolean.ac_status
                    state: 'on'
                sequence: 
                  - choose: # check if Heating to be off
                      - conditions:
                          - condition: state
                            entity_id: input_boolean.heating_status
                            state: 'on'
                        sequence: 
                          - service: input_boolean.turn_off
                            entity_id: input_boolean.heating_status
                  - service: automation.turn_on
                    entity_id:
                      - automation.climate_turn_off_a_c_for_night_at_23_00
                      - automation.climate_turn_off_a_c_heating_mode_when_temperature_above_target
                      - automation.climate_turn_off_a_c_cooling_mode_when_temperature_below_target
                      - automation.climate_turn_on_a_c_heating_mode_when_temperature_below_target_on_2_c
                      - automation.climate_turn_on_a_c_cooling_mode_when_temperature_above_target_on_2_c
              - conditions:
                  - condition: state
                    entity_id: input_boolean.ac_status
                    state: 'off'
                sequence: 
                  - choose: # check if Heating to be on
                      - conditions:
                          - condition: state
                            entity_id: input_boolean.heating_status
                            state: 'off'
                        sequence: 
                          - service: input_boolean.turn_on
                            entity_id: input_boolean.heating_status
                  - service: automation.turn_off
                    entity_id:
                      - automation.climate_turn_off_a_c_for_night_at_23_00
                      - automation.climate_turn_off_a_c_heating_mode_when_temperature_above_target
                      - automation.climate_turn_off_a_c_cooling_mode_when_temperature_below_target
                      - automation.climate_turn_on_a_c_heating_mode_when_temperature_below_target_on_2_c
                      - automation.climate_turn_on_a_c_cooling_mode_when_temperature_above_target_on_2_c
        mode: single

      - alias: "Climate: Turn ON 'A/C Cooling' mode when temperature above Target on 2'C"
        id: climate_ac_cooling_mode_turn_on_when_temperature_above_target_on_2_c
        description: 'Ввімкнення кондиціонерів на охолодження при температурі в приміщенні вище за цільову на 2 градуси'
        trigger:
          - platform: time_pattern
            minutes: "/5"
        condition:
          - condition: state
            entity_id: input_boolean.ac_status
            state: 'on'
          - condition: state
            entity_id: input_boolean.disable_climate
            state: 'off'
          - condition: state
            entity_id: group.family
            state: 'home'
          - condition: time
            after: "08:00:00"
            before: "23:00:00"
          - condition: or
            conditions:
              - condition: template
                value_template: "{{ states('sensor.living_room_lumi_weather_temperature') | float(24) > state_attr('climate.living_room_ac','temperature') + 1 }}"
              - condition: template
                value_template: "{{ states('sensor.bedroom_lumi_weather_temperature') | float(24) > state_attr('climate.bedroom_ac','temperature') + 1 }}"
          - condition: or
            conditions:
              - condition: state
                entity_id: binary_sensor.living_room_air_conditioner_socket_status
                state: 'off'
              - condition: state
                entity_id: binary_sensor.bedroom_air_conditioner_socket_status
                state: 'off'
        #   - condition: or
        #     conditions: # Living_Room_AC OR Bedroom_AC NOT in 'cool' state
        #       - not:
        #           - condition: state
        #             entity_id: climate.living_room_ac
        #             state: 'cool'
        #       - not:
        #           - condition: state
        #             entity_id: climate.bedroom_ac
        #             state: 'cool'
        action:
        #   - choose: # turn on socket for Living_Room_AC
        #       - conditions:
        #           - condition: state
        #             entity_id: switch.living_room_air_conditioner_socket
        #             state: 'off'
        #           - condition: template
        #             value_template: "{{ states('sensor.living_room_lumi_weather_temperature') | float(24) > state_attr('climate.living_room_ac','temperature') + 1 }}"
        #             # value_template: "{{ states('sensor.living_room_lumi_weather_temperature') | float(24) > state_attr('climate.living_room_ac','temperature') + 2 }}"
        #           - condition: state
        #             entity_id: binary_sensor.living_room_loggia_door_contact
        #             state: 'off'
        #         sequence:
        #           - service: switch.turn_on
        #             entity_id: switch.living_room_air_conditioner_socket
        #           - delay: 20
          - choose: # set hvac_mode to 'cool' for Living_Room_AC
              - conditions:
                  - condition: or
                    conditions:
                      - not:
                          - condition: state
                            entity_id: climate.living_room_ac
                            state: 'cool'
                      - condition: state
                        entity_id: binary_sensor.living_room_air_conditioner_socket_status
                        state: 'off'
                  - condition: template
                    value_template: "{{ states('sensor.living_room_lumi_weather_temperature') | float(24) > state_attr('climate.living_room_ac','temperature') + 1 }}"
                  - condition: state
                    entity_id: binary_sensor.living_room_loggia_door_contact
                    state: 'off'
                sequence: 
                  - service: script.climate_turn_on_ac
                    data: 
                        ac_entity: climate.living_room_ac
                        ac_hvac_mode: cool
                        ac_socket_entity: switch.living_room_air_conditioner_socket
                #   - service: climate.set_hvac_mode
                #     target:
                #         entity_id: climate.living_room_ac
                #     data:
                #          hvac_mode: cool
                #   - choose:
                #       - conditions:
                #           - condition: state
                #             entity_id: binary_sensor.internet_connection_ping
                #             state: 'on'
                #           - condition: state
                #             entity_id: input_boolean.disable_climate_notifications
                #             state: 'off'
                #         sequence:
                #           - service: notify.alexus
                #             data:
                #                 title: '{{"\U0001F975"}} Спекотно у Вітальні{{"\U0000203C"}}'
                #                 message: |
                #                     ➖➖➖➖➖➖➖➖➖➖➖➖
                #                     Температура у Вітальні {{ states("sensor.living_room_lumi_weather_temperature") | round(1) }}{{"\U00002103"}}{{"\U0000203C"}}
                #                     Ввімкнення кондиціонера у режимі охолодження...
                #                 data:
                #                     inline_keyboard:
                #                       - "{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4D1'}} Меню:/menu"
        #   - choose: # turn on socket for Bedroom_AC
        #       - conditions:
        #           - condition: state
        #             entity_id: switch.bedroom_air_conditioner_socket
        #             state: 'off'
        #           - condition: template
        #             value_template: "{{ states('sensor.bedroom_lumi_weather_temperature') | float(24) > state_attr('climate.bedroom_ac','temperature') + 1 }}"
        #             # value_template: "{{ states('sensor.bedroom_lumi_weather_temperature') | float(24) > state_attr('climate.bedroom_ac','temperature') + 2 }}"
        #           - condition: state
        #             entity_id: binary_sensor.bedroom_windows
        #             state: 'off'
        #         sequence:
        #           - service: switch.turn_on
        #             entity_id: switch.bedroom_air_conditioner_socket
        #           - delay: 20
          - choose: # set hvac_mode to 'cool' for Bedroom_AC
              - conditions:
                  - condition: or
                    conditions:
                      - not:
                          - condition: state
                            entity_id: climate.bedroom_ac
                            state: 'cool'
                      - condition: state
                        entity_id: binary_sensor.bedroom_air_conditioner_socket_status
                        state: 'off'
                  - condition: state
                    entity_id: binary_sensor.bedroom_windows
                    state: 'off'
                  - condition: template
                    value_template: "{{ states('sensor.bedroom_lumi_weather_temperature') | float(24) > state_attr('climate.bedroom_ac','temperature') + 1 }}"
                sequence:
                  - service: script.climate_turn_on_ac
                    data: 
                        ac_entity: climate.bedroom_ac
                        ac_hvac_mode: cool
                        ac_socket_entity: switch.bedroom_air_conditioner_socket
                #   - service: climate.set_hvac_mode
                #     target:
                #         entity_id: climate.bedroom_ac
                #     data:
                #          hvac_mode: cool
                #   - choose:
                #       - conditions:
                #           - condition: state
                #             entity_id: binary_sensor.internet_connection_ping
                #             state: 'on'
                #           - condition: state
                #             entity_id: input_boolean.disable_climate_notifications
                #             state: 'off'
                #         sequence:
                #           - service: notify.alexus
                #             data:
                #                 title: '{{"\U0001F975"}} Спекотно у Спальні{{"\U0000203C"}}'
                #                 message: |
                #                     ➖➖➖➖➖➖➖➖➖➖➖➖
                #                     Температура у Спальні {{ states("sensor.bedroom_lumi_weather_temperature") | round(1) }}{{"\U00002103"}}{{"\U0000203C"}}
                #                     Ввімкнення кондиціонера у режимі охолодження...
                #                 data:
                #                     inline_keyboard:
                #                       - "{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4D1'}} Меню:/menu"
        mode: single

      - alias: "Climate: Turn ON 'A/C Heating' mode when temperature below Target on 2'C"
        id: climate_ac_heating_mode_turn_on_when_temperature_below_target_on_2_c
        description: 'Увімкнення кондиціонерів на обігрів при температурі в приміщенні нижче за цільову на 2 градуси'
        trigger:
          - platform: time_pattern
            minutes: "/5"
        condition:
          - condition: state
            entity_id: input_boolean.ac_status
            state: 'on'
          - condition: state
            entity_id: input_boolean.disable_climate
            state: 'off'
          - condition: state
            entity_id: group.family
            state: 'home'
          - condition: time
            after: "08:00:00"
            before: "23:00:00"
          - condition: or
            conditions:
              - condition: template
                value_template: "{{ states('sensor.living_room_lumi_weather_temperature') | float(24) < state_attr('climate.living_room_ac','temperature') - 2 }}"
              - condition: template
                value_template: "{{ states('sensor.bedroom_lumi_weather_temperature') | float(24) < state_attr('climate.bedroom_ac','temperature') - 2 }}"
          - condition: or
            conditions:
              - condition: state
                entity_id: binary_sensor.living_room_air_conditioner_socket_status
                state: 'off'
              - condition: state
                entity_id: binary_sensor.bedroom_air_conditioner_socket_status
                state: 'off'
        #   - condition: or
        #     conditions: # Living_Room_AC OR Bedroom_AC NOT in 'heat' state
        #       - not:
        #           - condition: state
        #             entity_id: climate.living_room_ac
        #             state: 'heat'
        #       - not:
        #           - condition: state
        #             entity_id: climate.bedroom_ac
        #             state: 'heat'
        action:
        #   - choose: # turn on socket for Living_Room_AC
        #       - conditions:
        #           - condition: state
        #             entity_id: switch.living_room_air_conditioner_socket
        #             state: 'off'
        #           - condition: template
        #             value_template: "{{ states('sensor.living_room_lumi_weather_temperature') | float(24) < state_attr('climate.living_room_ac','temperature') - 2 }}"
        #           - condition: state
        #             entity_id: binary_sensor.living_room_loggia_door_contact
        #             state: 'off'
        #         sequence:
        #           - service: switch.turn_on
        #             entity_id: switch.living_room_air_conditioner_socket
        #           - delay: 20
          - choose: # set hvac_mode to 'heat' for Living_Room_AC
              - conditions:
                  - condition: or
                    conditions:
                      - not:
                          - condition: state
                            entity_id: climate.living_room_ac
                            state: 'heat'
                      - condition: state
                        entity_id: binary_sensor.living_room_air_conditioner_socket_status
                        state: 'off'
                  - condition: template
                    value_template: "{{ states('sensor.living_room_lumi_weather_temperature') | float(24) < state_attr('climate.living_room_ac','temperature') - 2 }}"
                  - condition: state
                    entity_id: binary_sensor.living_room_loggia_door_contact
                    state: 'off'
                sequence: 
                  - service: script.climate_turn_on_ac
                    data: 
                        ac_entity: climate.living_room_ac
                        ac_hvac_mode: heat
                        ac_socket_entity: switch.living_room_air_conditioner_socket
                #   - service: climate.set_hvac_mode
                #     target:
                #         entity_id: climate.living_room_ac
                #     data:
                #          hvac_mode: heat
                #   - choose:
                #       - conditions:
                #           - condition: state
                #             entity_id: binary_sensor.internet_connection_ping
                #             state: 'on'
                #           - condition: state
                #             entity_id: input_boolean.disable_climate_notifications
                #             state: 'off'
                #         sequence:
                #           - service: notify.alexus
                #             data:
                #                 title: '{{"\U0001F976"}} Холодно у Вітальні{{"\U0000203C"}}'
                #                 message: |
                #                     ➖➖➖➖➖➖➖➖➖➖➖➖
                #                     Температура у Вітальні {{ states("sensor.living_room_lumi_weather_temperature") | round(1) }}{{"\U00002103"}}{{"\U0000203C"}}
                #                     Увімкнення кондиціонера у режимі обігріву...
                #                 data:
                #                     inline_keyboard:
                #                       - "{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4D1'}} Меню:/menu"
        #   - choose: # turn on socket for Bedroom_AC
        #       - conditions:
        #           - condition: state
        #             entity_id: switch.bedroom_air_conditioner_socket
        #             state: 'off'
        #           - condition: template
        #             value_template: "{{ states('sensor.bedroom_lumi_weather_temperature') | float(24) < state_attr('climate.bedroom_ac','temperature') - 2 }}"
        #           - condition: state
        #             entity_id: binary_sensor.bedroom_windows
        #             state: 'off'
        #         sequence:
        #           - service: switch.turn_on
        #             entity_id: switch.bedroom_air_conditioner_socket
        #           - delay: 20
          - choose: # set hvac_mode to 'heat' for Bedroom_AC
              - conditions:
                  - condition: or
                    conditions:
                      - not:
                          - condition: state
                            entity_id: climate.bedroom_ac
                            state: 'heat'
                      - condition: state
                        entity_id: binary_sensor.bedroom_air_conditioner_socket_status
                        state: 'off'
                  - condition: state
                    entity_id: binary_sensor.bedroom_windows
                    state: 'off'
                  - condition: template
                    value_template: "{{ states('sensor.bedroom_lumi_weather_temperature') | float(24) < state_attr('climate.bedroom_ac','temperature') - 2 }}"
                sequence:
                  - service: script.climate_turn_on_ac
                    data: 
                        ac_entity: climate.bedroom_ac
                        ac_hvac_mode: heat
                        ac_socket_entity: switch.bedroom_air_conditioner_socket
                #   - service: climate.set_hvac_mode
                #     target:
                #         entity_id: climate.bedroom_ac
                #     data:
                #          hvac_mode: heat
                #   - choose:
                #       - conditions:
                #           - condition: state
                #             entity_id: binary_sensor.internet_connection_ping
                #             state: 'on'
                #           - condition: state
                #             entity_id: input_boolean.disable_climate_notifications
                #             state: 'off'
                #         sequence:
                #           - service: notify.alexus
                #             data:
                #                 title: '{{"\U0001F976"}} Холодно у Спальні{{"\U0000203C"}}'
                #                 message: |
                #                     ➖➖➖➖➖➖➖➖➖➖➖➖
                #                     Температура у Спальні {{ states("sensor.bedroom_lumi_weather_temperature") | round(1) }}{{"\U00002103"}}{{"\U0000203C"}}
                #                     Увімкнення кондиціонера у режимі обігріву...
                #                 data:
                #                     inline_keyboard:
                #                       - "{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4D1'}} Меню:/menu"
        mode: single

      - alias: "Climate: Turn OFF 'A/C Cooling' mode when temperature below Target"
        id: climate_ac_cooling_mode_turn_off_when_temperature_below_target
        description: 'Вимкнення кондиціонерів при внутрішній температурі нижче цільової'
        trigger:
          - platform: time_pattern
            minutes: "/5"
        condition:
          - condition: state
            entity_id: input_boolean.ac_status
            state: 'on'
          - condition: time
            after: "08:00:00"
            before: "23:00:00"
          - condition: or
            conditions:
              - condition: template
                value_template: "{{ states('sensor.living_room_lumi_weather_temperature') | float(24) < state_attr('climate.living_room_ac','temperature') }}"
              - condition: template
                value_template: "{{ states('sensor.bedroom_lumi_weather_temperature') | float(24) < state_attr('climate.bedroom_ac','temperature') }}"
          - condition: state
            entity_id: input_boolean.disable_climate
            state: 'off'
          - condition: state
            entity_id: group.air_conditioners
            state: 'on'
          - condition: or
            conditions:
              - condition: state
                entity_id: climate.living_room_ac
                state: 'cool'
              - condition: state
                entity_id: climate.bedroom_ac
                state: 'cool'
        action:
          - choose: # living_room
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.living_room_air_conditioner_socket_status
                    state: 'on'
                  - condition: state
                    entity_id: climate.living_room_ac
                    state: 'cool'
                  - condition: template
                    value_template: "{{ states('sensor.living_room_lumi_weather_temperature') | float(24) < state_attr('climate.living_room_ac','temperature') }}"
                sequence: 
                  - service: script.climate_turn_off_ac
                    data: 
                        ac_entity: climate.living_room_ac
                        ac_socket_entity: switch.living_room_air_conditioner_socket
                #   - service: climate.turn_off
                #     entity_id: climate.living_room_ac
                #   - delay: 20
                #   - service: switch.turn_off
                #     entity_id: switch.living_room_air_conditioner_socket
                  - service: input_boolean.turn_off
                    entity_id: input_boolean.living_room_ac_status
                #   - choose:
                #       - conditions:
                #           - condition: state
                #             entity_id: binary_sensor.internet_connection_ping
                #             state: 'on'
                #           - condition: state
                #             entity_id: input_boolean.disable_climate_notifications
                #             state: 'off'
                #         sequence:
                #           - service: notify.alexus
                #             data:
                #                 title: '{{"\U0001F60E"}} Комфортна температура у Вітальні{{"\U0000203C"}}'
                #                 message: |
                #                     ➖➖➖➖➖➖➖➖➖➖➖➖
                #                     Температура у Вітальні {{ states("sensor.living_room_lumi_weather_temperature") | round(1) }}{{"\U00002103"}}{{"\U0000203C"}}
                #                     Вимкнення кондиціонера...
                #                 data:
                #                     inline_keyboard:
                #                       - "{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4D1'}} Меню:/menu"
          - choose: # bedroom
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.bedroom_air_conditioner_socket_status
                    state: 'on'
                  - condition: state
                    entity_id: climate.bedroom_ac
                    state: 'cool'
                  - condition: template
                    value_template: "{{ states('sensor.bedroom_lumi_weather_temperature') | float(24) < state_attr('climate.bedroom_ac','temperature') }}"
                sequence:
                  - service: script.climate_turn_off_ac
                    data: 
                        ac_entity: climate.bedroom_ac
                        ac_socket_entity: switch.bedroom_air_conditioner_socket
                #   - service: climate.turn_off
                #     entity_id: climate.bedroom_ac
                #   - delay: 20
                #   - service: switch.turn_off
                #     entity_id: switch.bedroom_air_conditioner_socket
                  - service: input_boolean.turn_off
                    entity_id: input_boolean.bedroom_ac_status
                #   - choose:
                #       - conditions:
                #           - condition: state
                #             entity_id: binary_sensor.internet_connection_ping
                #             state: 'on'
                #           - condition: state
                #             entity_id: input_boolean.disable_climate_notifications
                #             state: 'off'
                #         sequence:
                #           - service: notify.alexus
                #             data:
                #                 title: '{{"\U0001F60E"}} Комфортна температура у Спальні{{"\U0000203C"}}'
                #                 message: |
                #                     ➖➖➖➖➖➖➖➖➖➖➖➖
                #                     Температура у Спальні {{ states("sensor.bedroom_lumi_weather_temperature") | round(1) }}{{"\U00002103"}}{{"\U0000203C"}}
                #                     Вимкнення кондиціонера...
                #                 data:
                #                     inline_keyboard:
                #                       - "{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4D1'}} Меню:/menu"
        mode: single

      - alias: "Climate: Turn OFF 'A/C Heating' mode when temperature above Target"
        id: climate_ac_heating_mode_turn_off_when_temperature_above_target
        description: 'Вимкнення обігріва кондиціонерами при внутрішній температурі вище цільової'
        trigger:
          - platform: time_pattern
            minutes: "/5"
        condition:
          - condition: state
            entity_id: input_boolean.ac_status
            state: 'on'
          - condition: time
            after: "08:00:00"
            before: "23:00:00"
          - condition: or
            conditions:
              - condition: template
                value_template: "{{ states('sensor.living_room_lumi_weather_temperature') | float(24) > state_attr('climate.living_room_ac','temperature') }}"
              - condition: template
                value_template: "{{ states('sensor.bedroom_lumi_weather_temperature') | float(24) > state_attr('climate.bedroom_ac','temperature') }}"
          - condition: state
            entity_id: input_boolean.disable_climate
            state: 'off'
          - condition: state
            entity_id: group.air_conditioners
            state: 'on'
          - condition: or
            conditions:
              - condition: state
                entity_id: climate.living_room_ac
                state: 'heat'
              - condition: state
                entity_id: climate.bedroom_ac
                state: 'heat'
        action:
          - choose: # living_room
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.living_room_air_conditioner_socket_status
                    state: 'on'
                  - condition: state
                    entity_id: climate.living_room_ac
                    state: 'heat'
                  - condition: template
                    value_template: "{{ states('sensor.living_room_lumi_weather_temperature') | float(24) > state_attr('climate.living_room_ac','temperature') }}"
                sequence: 
                  - service: script.climate_turn_off_ac
                    data: 
                        ac_entity: climate.living_room_ac
                        ac_socket_entity: switch.living_room_air_conditioner_socket
                #   - service: climate.turn_off
                #     entity_id: climate.living_room_ac
                #   - delay: 20
                #   - service: switch.turn_off
                #     entity_id: switch.living_room_air_conditioner_socket
                  - service: input_boolean.turn_off
                    entity_id: input_boolean.living_room_ac_status
                #   - choose:
                #       - conditions:
                #           - condition: state
                #             entity_id: binary_sensor.internet_connection_ping
                #             state: 'on'
                #           - condition: state
                #             entity_id: input_boolean.disable_climate_notifications
                #             state: 'off'
                #         sequence:
                #           - service: notify.alexus
                #             data:
                #                 title: '{{"\U0001F60E"}} Комфортна температура у Вітальні{{"\U0000203C"}}'
                #                 message: |
                #                     ➖➖➖➖➖➖➖➖➖➖➖➖
                #                     Температура у вітальні {{ states("sensor.living_room_lumi_weather_temperature") | round(1) }}{{"\U00002103"}}{{"\U0000203C"}}
                #                     Вимкнення кондиціонера...
                #                 data:
                #                     inline_keyboard:
                #                       - "{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4D1'}} Меню:/menu"
          - choose: # bedroom
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.bedroom_air_conditioner_socket_status
                    state: 'on'
                  - condition: state
                    entity_id: climate.bedroom_ac
                    state: 'heat'
                  - condition: template
                    value_template: "{{ states('sensor.bedroom_lumi_weather_temperature') | float(24) > state_attr('climate.bedroom_ac','temperature') }}"
                sequence:
                  - service: script.climate_turn_off_ac
                    data: 
                        ac_entity: climate.bedroom_ac
                        ac_socket_entity: switch.bedroom_air_conditioner_socket
                #   - service: climate.turn_off
                #     entity_id: climate.bedroom_ac
                #   - delay: 20
                #   - service: switch.turn_off
                #     entity_id: switch.bedroom_air_conditioner_socket
                  - service: input_boolean.turn_off
                    entity_id: input_boolean.bedroom_ac_status
                #   - choose:
                #       - conditions:
                #           - condition: state
                #             entity_id: binary_sensor.internet_connection_ping
                #             state: 'on'
                #           - condition: state
                #             entity_id: input_boolean.disable_climate_notifications
                #             state: 'off'
                #         sequence:
                #           - service: notify.alexus
                #             data:
                #                 title: '{{"\U0001F60E"}} Комфортна температура у Спальні{{"\U0000203C"}}'
                #                 message: |
                #                     ➖➖➖➖➖➖➖➖➖➖➖➖
                #                     Температура у Спальні {{ states("sensor.bedroom_lumi_weather_temperature") | round(1) }}{{"\U00002103"}}{{"\U0000203C"}}
                #                     Вимкнення кондиціонера...
                #                 data:
                #                     inline_keyboard:
                #                       - "{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4D1'}} Меню:/menu"
        mode: single

      - alias: "Climate: Turn OFF A/C for night at 23:00"
        id: climate_ac_turn_off_for_night
        description: 'Вимкнення кондиціонерів на ніч'
        trigger:
          - platform: time
            at: '23:00:00'
          - platform: time
            at: '23:15:00'
          - platform: time
            at: '23:30:00'
        condition:
          - condition: state
            entity_id: input_boolean.ac_status
            state: 'on'
          - condition: state
            entity_id: input_boolean.disable_climate
            state: 'off'
          - condition: state
            entity_id: group.air_conditioners
            state: 'on'
        action:
          - service: climate.turn_off
            entity_id: group.air_conditioners
          - delay: 20
          - service: switch.turn_off
            target:
                entity_id: 
                  - switch.bedroom_air_conditioner_socket
                  - switch.living_room_air_conditioner_socket
          - service: input_boolean.turn_off
            entity_id:
              - input_boolean.living_room_ac_status
              - input_boolean.bedroom_ac_status
          - choose:
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.internet_connection_ping
                    state: 'on'
                  - condition: state
                    entity_id: input_boolean.disable_climate_notifications
                    state: 'off'
                sequence:
                  - service: notify.alexus
                    data:
                        title: '{{"\U0001F634"}} На добраніч{{"\U0000203C"}}'
                        message: |
                            ➖➖➖➖➖➖➖➖➖➖➖➖
                            Кондиціонери вимикаються на ніч{{"\U0000203C"}}
                        data:
                            inline_keyboard:
                              - "{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4D1'}} Меню:/menu"
        mode: single

      - alias: "Climate: Turn ON A/C in Living Room Manually"
        id: climate_ac_living_room_turn_on_manual
        description: 'Увімкнення кондиціонера у Вітальні в ручному режимі'
        trigger:
          - platform: state
            entity_id: climate.living_room_ac
            from: 'off'
        condition:
          - condition: state
            entity_id: input_boolean.ac_status
            state: 'on'
          - condition: state
            entity_id: switch.living_room_air_conditioner_socket
            state: 'off'
          - condition: state
            entity_id: binary_sensor.living_room_loggia_door_contact
            state: 'off'
        action:
          - service: script.climate_turn_on_ac
            data: 
                ac_entity: climate.living_room_ac
                ac_socket_entity: switch.living_room_air_conditioner_socket
        #   - service: switch.turn_on
        #     entity_id: switch.living_room_air_conditioner_socket
        #   - delay: 20
        #   - service: climate.turn_on
        #     entity_id: climate.living_room_ac
        mode: single

      - alias: "Climate: Turn ON A/C in Bedroom Manually"
        id: climate_ac_bedroom_turn_on_manual
        description: 'Увімкнення кондиціонера у Спальні в ручному режимі'
        trigger:
          - platform: state
            entity_id: climate.bedroom_ac
            from: 'off'
        condition:
          - condition: state
            entity_id: input_boolean.ac_status
            state: 'on'
          - condition: state
            entity_id: switch.bedroom_air_conditioner_socket
            state: 'off'
          - condition: state
            entity_id: binary_sensor.bedroom_windows
            state: 'off'
        action:
          - service: script.climate_turn_on_ac
            data: 
                ac_entity: climate.bedroom_ac
                ac_socket_entity: switch.bedroom_air_conditioner_socket
        #   - service: switch.turn_on
        #     entity_id: switch.bedroom_air_conditioner_socket
        #   - delay: 20
        #   - service: climate.turn_on
        #     entity_id: climate.bedroom_ac
        mode: single

      - alias: "Climate: Turn OFF AC Socket in Bedroom if Not Active"
        id: climate_ac_bedroom_turn_off_socket
        description: 'Вимкнення розетки для кондиціонера в спальні'
        trigger:
          - platform: state
            entity_id: binary_sensor.bedroom_air_conditioner_socket_status
            to: 'off'
            for: '00:00:05'
        condition:
          - condition: state
            entity_id: switch.bedroom_air_conditioner_socket
            state: 'on'
        action:
          - service: switch.turn_off
            entity_id: switch.bedroom_air_conditioner_socket
        mode: single

      - alias: "Climate: Turn OFF AC Socket in Living Room if Not Active"
        id: climate_ac_living_room_turn_off_socket
        description: 'Вимкнення розетки для кондиціонера в вітальні'
        trigger:
          - platform: state
            entity_id: binary_sensor.living_room_air_conditioner_socket_status
            to: 'off'
            for: '00:00:05'
        condition:
          - condition: state
            entity_id: switch.living_room_air_conditioner_socket
            state: 'on'
        action:
          - service: switch.turn_off
            entity_id: switch.living_room_air_conditioner_socket
        mode: single

      - alias: "Climate: Notification about A/C status in Bedroom"
        id: climate_ac_bedroom_status_notification
        description: 'Повідомлення про статус кондиціонера в Спальні'
        trigger:
          - platform: state
            entity_id: binary_sensor.bedroom_air_conditioner_socket_status
        condition:
          - condition: state
            entity_id: input_boolean.disable_climate_notifications
            state: 'off'
          - condition: state
            entity_id: binary_sensor.internet_connection_ping
            state: 'on'
        action:
          - service: notify.alexus
            data:
                title: '{{"\U0001F3E0"}} Клімат{{"\U0000203C"}}'
                message: |
                    ➖➖➖➖➖➖➖➖➖➖➖➖
                    Кондиціонер у Спальні {% if is_state("binary_sensor.bedroom_air_conditioner_socket_status","on") %}увімкнено у режимі {% if is_state('climate.bedroom_ac', 'cool') %}{{"\U00002744"}} охолодження{% elif is_state('climate.bedroom_ac', 'heat') %}{{"\U0001F525"}} обігріву{% elif is_state('climate.bedroom_ac', 'dry') %}{{"\U0001F4A7"}} осушення{% elif is_state('climate.bedroom_ac', 'fan_only') %}{{"\U0001F32C"}} обдування{% else %} Авто{%endif%}{% else %}вимкнено{% endif %}{{"\U0000203C"}}
                    Поточна температура: {{ states("sensor.bedroom_lumi_weather_temperature") | round(1) }}{{"\U00002103"}}
                data:
                    inline_keyboard:
                      - "{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4D1'}} Меню:/menu"
        mode: single

      - alias: "Climate: Notification about A/C status in Living Room"
        id: climate_ac_living_room_status_notification
        description: 'Повідомлення про статус кондиціонера у Вітальні'
        trigger:
          - platform: state
            entity_id: binary_sensor.living_room_air_conditioner_socket_status
        condition:
          - condition: state
            entity_id: input_boolean.disable_climate_notifications
            state: 'off'
          - condition: state
            entity_id: binary_sensor.internet_connection_ping
            state: 'on'
        action:
          - service: notify.alexus
            data:
                title: '{{"\U0001F3E0"}} Клімат{{"\U0000203C"}}'
                message: |
                    ➖➖➖➖➖➖➖➖➖➖➖➖
                    Кондиціонер у Вітальні {% if is_state("binary_sensor.living_room_air_conditioner_socket_status","on") %}увімкнено у режимі {% if is_state('climate.living_room_ac', 'cool') %}{{"\U00002744"}} охолодження{% elif is_state('climate.living_room_ac', 'heat') %}{{"\U0001F525"}} обігріву{% elif is_state('climate.living_room_ac', 'dry') %}{{"\U0001F4A7"}} осушення{% else %} Авто{%endif%}{% else %} вимкнено{% endif %}{{"\U0000203C"}}
                    Поточна температура: {{ states("sensor.living_room_lumi_weather_temperature") | round(1) }}{{"\U00002103"}}
                data:
                    inline_keyboard:
                      - "{{'\U0001F321'}} Клімат:/climate, {{'\U0001F4D1'}} Меню:/menu"
        mode: single

    # =================== Air Purifier Automations ===================

      - alias: "Climate: Change mode for Air Purifiers"
        id: climate_air_purifiers_mode_change
        description: 'Зміна режиму роботи приладів фільтрації повітря'
        trigger:
          - platform: time
            at: '08:00:00'
          - platform: time
            at: '23:00:00'
          - platform: state
            entity_id: sensor.lr_levoit_air_purifier_300s_air_quality
        condition:
          - not:
              - condition: state
                entity_id: fan.lr_levoit_air_purifier_300s
                state: 'unavailable'
        action:
          - choose:
              - conditions: # turn on
                  - condition: numeric_state
                    entity_id: sensor.lr_levoit_air_purifier_300s_air_quality
                    above: 15
                  - condition: state
                    entity_id: binary_sensor.living_room_air_purifier_status
                    state: 'off'
                sequence:
                  - choose:
                      - conditions: # night
                          - condition: template
                            value_template: >-
                                {% set m_hour = now().hour %}
                                {{ (m_hour > 22) or (m_hour < 8) }}
                        sequence:
                          - service: fan.turn_on
                            data:
                                preset_mode: sleep
                            target:
                                entity_id: fan.lr_levoit_air_purifier_300s
                      - conditions: # day
                          - condition: template
                            value_template: >-
                                {% set m_hour = now().hour %}
                                {{ (m_hour < 23) and (m_hour > 7) }}
                        sequence:
                          - service: fan.turn_on
                            data:
                                preset_mode: auto
                            target:
                                entity_id: fan.lr_levoit_air_purifier_300s
              - conditions: #  working mode correction
                  - condition: numeric_state
                    entity_id: sensor.lr_levoit_air_purifier_300s_air_quality
                    above: 10
                  - condition: state
                    entity_id: binary_sensor.living_room_air_purifier_status
                    state: 'on'
                  - condition: template
                    value_template: "{{ not state_attr('fan.lr_levoit_air_purifier_300s','preset_mode') == 'manual' }}"
                sequence:
                  - choose:
                      - conditions: # night
                          - condition: template
                            value_template: >-
                                {% set m_hour = now().hour %}
                                {{ (m_hour > 22) or (m_hour < 8) }}
                          - condition: template
                            value_template: "{{ not state_attr('fan.lr_levoit_air_purifier_300s','preset_mode') == 'sleep' }}"
                        sequence:
                          - service: fan.turn_on
                            data:
                                preset_mode: sleep
                            target:
                                entity_id: fan.lr_levoit_air_purifier_300s
                      - conditions: # day
                          - condition: template
                            value_template: >-
                                {% set m_hour = now().hour %}
                                {{ (m_hour < 23) and (m_hour > 7) }}
                          - condition: template
                            value_template: "{{ not state_attr('fan.lr_levoit_air_purifier_300s','preset_mode') == 'auto' }}"
                        sequence:
                          - service: fan.turn_on
                            data:
                                preset_mode: auto
                            target:
                                entity_id: fan.lr_levoit_air_purifier_300s
              - conditions: # turn off
                  - condition: numeric_state
                    entity_id: sensor.lr_levoit_air_purifier_300s_air_quality
                    below: 10
                  - condition: state
                    entity_id: binary_sensor.living_room_air_purifier_status
                    state: 'on'
                sequence:
                  - service: fan.turn_off
                    target:
                        entity_id: fan.lr_levoit_air_purifier_300s
        mode: single
