  - platform: file
    name: ups_battery_voltage
    unit_of_measurement: 'V'
    scan_interval: '00:01:00'
    file_path: /config/files/ups_battery_voltage.txt

  - platform: file
    name: ups_battery_capacity
    unit_of_measurement: '%'
    scan_interval: '00:01:00'
    file_path: /config/files/ups_battery_capacity.txt

  - platform: time_date
    display_options:
      - 'time'
      - 'date'
      - 'time_date'
      
  - platform: systemmonitor
    resources:
      - type: processor_use
      - type: processor_temperature
      - type: disk_use_percent
        arg: /
      - type: disk_use
      - type: disk_free
        arg: /
      - type: memory_use_percent
      - type: memory_use
      - type: memory_free
      - type: swap_use_percent
      - type: swap_use
      - type: swap_free
      - type: load_1m
      - type: load_5m
      - type: load_15m
      - type: network_in
        arg: eth0
      - type: network_out
        arg: eth0
      - type: network_in
        arg: wlan0
      - type: network_out
        arg: wlan0
      - type: last_boot
      
  - platform: sql
    db_url: mysql://homeassistant:homeassistant@core-mariadb/homeassistant?charset=utf8
    queries: 
      - name: Maria DB size
        query: 'SELECT table_schema "database", Round(Sum(data_length + index_length) / 1048576, 2) "value" FROM information_schema.tables WHERE table_schema="homeassistant" GROUP BY table_schema;'
        column: 'value'
        unit_of_measurement: MB 

# Время с последней перезагрузки
  - platform: template
    sensors:
      last_boot_custom:
        friendly_name: "System Last Boot"
        value_template: >
          {% set up_time =  as_timestamp(now()) - as_timestamp(states('sensor.last_boot')) %}

          {% if up_time == 0 %}
            Just started...
          {% else %}
            {% set minutes = (up_time // 60) | int %}
            {% set hours = (minutes // 60) %}
            {% set days = (hours // 24) %}
            {% set weeks = (days // 7) %}

            {% set minutes = (minutes % 60) %}
            {% set hours =  (hours % 24) %}
            {% set days = (days % 7) %}

            {% macro phrase(value, name) %}
                    {%- set end = 's' if value > 1 else '' %}
                    {{- '{} {}{}'.format(value, name, end) if value | int > 0 else '' }}
          {%- endmacro %}

          {% set text = [ phrase(weeks, 'week'), phrase(days, 'day'), phrase(hours, 'hr'), phrase(minutes, 'min') ] | select('!=','') | list | join(', ') %}
          {% set last_comma = text.rfind(',') %}
            {% if last_comma != -1 %}
              {% set text = text[:last_comma] + ' and' + text[last_comma + 1:] %}
            {% endif %}

          {{ text }}

          {% endif %}
        icon_template: mdi:clock-start

  - platform: uptime
    name: online

  - platform: template
    sensors:
       online_custom:
        friendly_name: "Home Assistant Uptime"
        value_template: >
          {% set up_time =  as_timestamp(now()) - as_timestamp(states('sensor.online')) %}

          {% if up_time == 0 %}
            Just started...
          {% else %}
            {% set minutes = (up_time // 60) | int %}
            {% set hours = (minutes // 60) %}
            {% set days = (hours // 24) %}
            {% set weeks = (days // 7) %}

            {% set minutes = (minutes % 60) %}
            {% set hours =  (hours % 24) %}
            {% set days = (days % 7) %}

            {% macro phrase(value, name) %}
                    {%- set end = 's' if value > 1 else '' %}
                    {{- '{} {}{}'.format(value, name, end) if value | int > 0 else '' }}
          {%- endmacro %}

          {% set text = [ phrase(weeks, 'week'), phrase(days, 'day'), phrase(hours, 'hr'), phrase(minutes, 'min') ] | select('!=','') | list | join(', ') %}
          {% set last_comma = text.rfind(',') %}
            {% if last_comma != -1 %}
              {% set text = text[:last_comma] + ' and' + text[last_comma + 1:] %}
            {% endif %}

          {{ text }}

          {% endif %}
        icon_template: mdi:clock-fast
